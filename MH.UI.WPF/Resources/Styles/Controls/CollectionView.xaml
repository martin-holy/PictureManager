<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls"
  xmlns:mhu="clr-namespace:MH.Utils;assembly=MH.Utils"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:rd="clr-namespace:MH.UI.WPF.Resources"
  xmlns:mhConv="clr-namespace:MH.UI.WPF.Converters">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../../Effects.xaml"/>
    <ResourceDictionary Source="../Icon.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,10 L5,5 z"/>

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border
            x:Name="border"
            Background="Transparent"
            Margin="5,0,0,0"
            Padding="5,5,0,5"
            Width="20"
            Height="20">

            <Path
              x:Name="path"
              VerticalAlignment="Center"
              Data="{StaticResource TreeArrow}" 
              Fill="Transparent"
              Stroke="{StaticResource MH.Control.Static.Text}"
              Stretch="Uniform">
            </Path>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="border" Property="Margin" Value="5,5,0,0"/>
              <Setter TargetName="path" Property="Fill" Value="{StaticResource MH.Control.Static.Text}"/>
              <Setter TargetName="path" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="45" CenterX="5" CenterY="5"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="path" Property="Fill" Value="{StaticResource MH.Brushes.Accent}"/>
              <Setter TargetName="path" Property="Stroke" Value="{StaticResource MH.Brushes.Accent}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--TODO-->
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle
            Margin="0"
            Opacity="0"
            SnapsToDevicePixels="True"
            StrokeDashArray="1 2"
            StrokeThickness="5"
            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.Styles.Controls.CollectionViewItem" TargetType="TreeViewItem">
    <Setter Property="Background" Value="{StaticResource MH.Control.Static.Background}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Foreground" Value="{StaticResource MH.Control.Static.Text}"/>
    <Setter Property="MinHeight" Value="25"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeViewItem">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>

            <ContentPresenter
              x:Name="PART_Header"
              Grid.Row="0"
              ContentSource="Header"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"/>

            <ToggleButton
              x:Name="Expander"
              Grid.Row="0"
              Margin="{Binding Converter={mhConv:TreeMarginConverter}, ConverterParameter=16}"
              Style="{StaticResource ExpandCollapseToggleStyle}"
              IsChecked="{Binding IsExpanded,
                          RelativeSource={RelativeSource TemplatedParent},
                          Mode=TwoWay}"/>

            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.Styles.Controls.CollectionView" TargetType="mhc:CollectionView">
    <Setter Property="Background" Value="{StaticResource MH.Control.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource MH.Control.Static.Border}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Padding" Value="1"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource MH.Styles.Controls.CollectionViewItem}"/>
    <Setter Property="FocusManager.IsFocusScope" Value="True"/>
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="mhc:CollectionView">
          <mhc:WheelSpeedScrollViewer
            x:Name="PART_ScrollViewer"
            Focusable="False"
            SpeedFactor="{TemplateBinding ScrollViewerSpeedFactor}"
            Padding="{TemplateBinding Padding}" 
            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" 
            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

            <ItemsPresenter/>
          </mhc:WheelSpeedScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource MH.Control.Disabled.Border}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <HierarchicalDataTemplate
    DataType="{x:Type mhu:CollectionViewGroup}"
    ItemsSource="{Binding Items}">

    <Border
      x:Name="border"
      BorderBrush="Black"
      BorderThickness="1"
      Margin="1,2,0,2"
      Background="#88000000"
      Height="30"
      Padding="20,0,0,0">

      <Grid Margin="{Binding Converter={mhConv:TreeMarginConverter}, ConverterParameter=16}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <mhc:IconButton
          Icon="{Binding Icon, Converter={StaticResource ResourceConverter}}"
          Foreground="{Binding Icon, Converter={StaticResource ResourceConverter},
                       ConverterParameter={x:Static rd:Dictionaries.IconNameToBrush}}"
          ToolTip="Group by"
          Command="{Binding View.OpenGroupByDialogCommand}"
          CommandParameter="{Binding}"/>

        <TextBlock
          Grid.Column="1"
          Text="{Binding Title}"
          VerticalAlignment="Center"
          Margin="5,0,5,0"
          FontSize="16"/>

        <TextBlock
          Grid.Column="2"
          Text="{Binding Source.Count}"
          VerticalAlignment="Center"
          Margin="5,0,5,0"
          FontWeight="Bold"/>
      </Grid>
    </Border>

    <HierarchicalDataTemplate.Triggers>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <MultiBinding Converter="{mhConv:SetPropertyConverter}" ConverterParameter="Width">
            <Binding Path="DataContext" ElementName="border"/>
            <Binding Path="ActualWidth" ElementName="border"/>
          </MultiBinding>
        </DataTrigger.Binding>
        <Setter TargetName="border" Property="Tag" Value="{x:Null}"/>
      </DataTrigger>
    </HierarchicalDataTemplate.Triggers>
  </HierarchicalDataTemplate>

  <DataTemplate DataType="{x:Type mhu:CollectionViewRow}">
    <ItemsControl ItemsSource="{Binding Items}">
      <b:Interaction.Triggers>
        <b:EventTrigger EventName="PreviewMouseUp">
          <b:InvokeCommandAction
            Command="{Binding SelectItemCommand, RelativeSource=
                     {RelativeSource AncestorType=mhc:CollectionView}}"
            PassEventArgsToCommand="True"/>
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
  </DataTemplate>
</ResourceDictionary>