<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:u="clr-namespace:MH.UI.WPF.Utils">

  <ResourceDictionary.MergedDictionaries>
    <u:CachedResourceDictionary Source="Common.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Height" Value="{DynamicResource ScrollBar.VerticalRepeatButton.Height}"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="RepeatButton.Interval" Value="50"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Margin" Value="1"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Width" Value="{DynamicResource ScrollBar.HorizontalRepeatButton.Width}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
            <Viewbox Name="ArrowBox" Margin="{TemplateBinding Margin}" SnapsToDevicePixels="True" Stretch="Uniform" UseLayoutRounding="True">
              <Path Name="Arrow" Width="256" Height="256" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollBar.Static.Glyph}" Stretch="Uniform" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=OneWay}"/>
            </Viewbox>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ArrowBox" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ScrollBar.Pressed.Glyph}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="Thumb.ScrollBar" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="{DynamicResource ScrollBar.Static.Thumb}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Name="ThumbVisual">
            <Rectangle Name="Background" Fill="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="{TemplateBinding BorderThickness}"/>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ThumbVisual" Property="UIElement.Opacity" Value="0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Fill" Value="{DynamicResource ScrollBar.MouseOver.Thumb}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="Background" Property="Fill" Value="{DynamicResource ScrollBar.Pressed.Thumb}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="Templates.ScrollBar.Horizontal" TargetType="{x:Type ScrollBar}">
    <Grid Name="HorizontalRoot" Height="{TemplateBinding Height}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="0.00001*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <RepeatButton
        Name="HorizontalSmallDecrease"
        Grid.Column="0"
        Command="ScrollBar.LineLeftCommand"
        Content="M0,30 30,0 30,60z"
        Style="{DynamicResource ScrollBarButton}"/>

      <Track
        Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">

        <Track.DecreaseRepeatButton>
          <RepeatButton
            Name="HorizontalLargeDecrease"
            Command="{x:Static ScrollBar.PageLeftCommand}"
            Style="{DynamicResource RepeatButtonTransparent}"/>
        </Track.DecreaseRepeatButton>
        <Track.IncreaseRepeatButton>
          <RepeatButton
            Name="HorizontalLargeIncrease"
            Command="{x:Static ScrollBar.PageRightCommand}"
            Style="{DynamicResource RepeatButtonTransparent}"/>
        </Track.IncreaseRepeatButton>
        <Track.Thumb>
          <Thumb Margin="0 1 0 1" Style="{DynamicResource Thumb.ScrollBar}"/>
        </Track.Thumb>
      </Track>

      <RepeatButton
        Name="HorizontalSmallIncrease"
        Grid.Column="2"
        Command="ScrollBar.LineRightCommand"
        Content="M0,0 30,30 0,60z"
        Style="{DynamicResource ScrollBarButton}"/>
    </Grid>

    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="HorizontalRoot" Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="Templates.ScrollBar.Vertical" TargetType="{x:Type ScrollBar}">
    <Grid Name="VerticalRoot" Width="{TemplateBinding Width}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="0.00001*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <RepeatButton
        Name="VerticalSmallDecrease"
        Grid.Row="0"
        Command="ScrollBar.LineUpCommand"
        Content="M30,0 60,30 0,30z"
        Style="{DynamicResource ScrollBarButton}"/>

      <Track
        Name="PART_Track"
        Grid.Row="1"
        IsDirectionReversed="True">

        <Track.DecreaseRepeatButton>
          <RepeatButton
            Name="VerticalLargeDecrease"
            Command="{x:Static ScrollBar.PageUpCommand}"
            Style="{DynamicResource RepeatButtonTransparent}"/>
        </Track.DecreaseRepeatButton>
        <Track.IncreaseRepeatButton>
          <RepeatButton
            Name="VerticalLargeIncrease"
            Command="{x:Static ScrollBar.PageDownCommand}"
            Style="{DynamicResource RepeatButtonTransparent}"/>
        </Track.IncreaseRepeatButton>
        <Track.Thumb>
          <Thumb Margin="1 0 1 0" Style="{DynamicResource Thumb.ScrollBar}"/>
        </Track.Thumb>
      </Track>

      <RepeatButton
        Name="VerticalSmallIncrease"
        Grid.Row="2"
        Command="ScrollBar.LineDownCommand"
        Content="M0,0 60,0 30,30z"
        Style="{DynamicResource ScrollBarButton}"/>
    </Grid>

    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="VerticalRoot" Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="MH.Styles.BaseControls.ScrollBar" TargetType="{x:Type ScrollBar}">
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="Height" Value="{DynamicResource ScrollBar.Height}"/>
        <Setter Property="Template" Value="{DynamicResource Templates.ScrollBar.Horizontal}"/>
        <Setter Property="Width" Value="Auto"/>
      </Trigger>
      <Trigger Property="ScrollBar.Orientation" Value="Vertical">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template" Value="{DynamicResource Templates.ScrollBar.Vertical}"/>
        <Setter Property="Width" Value="{DynamicResource ScrollBar.Width}"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
  </Style>
</ResourceDictionary>