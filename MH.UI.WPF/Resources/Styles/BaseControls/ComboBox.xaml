<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="AllowDrop" Value="True"/>
    <Setter Property="MinWidth" Value="0"/>
    <Setter Property="MinHeight" Value="0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer
            x:Name="PART_ContentHost"
            Focusable="False"
            HorizontalScrollBarVisibility="Hidden"
            VerticalScrollBarVisibility="Hidden"
            Background="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border
            x:Name="root"
            Background="{StaticResource MH.Control.Static.Background}"
            BorderBrush="{StaticResource MH.Control.Static.Border}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">

            <Border
              x:Name="splitBorder"
              BorderBrush="Transparent"
              BorderThickness="1"
              HorizontalAlignment="Right"
              Margin="0"
              SnapsToDevicePixels="True"
              Width="{DynamicResource ScrollBar.Width}">

              <Path
                x:Name="arrow"
                Data="M 0 0 L 3.5 4 L 7 0 Z"
                Fill="{StaticResource ComboBox.Static.Glyph}"
                HorizontalAlignment="Center"
                Margin="0"
                VerticalAlignment="Center"/>
            </Border>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
              <Setter TargetName="root" Property="Background" Value="{StaticResource MH.Control.MouseOver.Background}"/>
              <Setter TargetName="root" Property="BorderBrush" Value="{StaticResource MH.Control.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="root" Property="Background" Value="{StaticResource MH.Control.Pressed.Background}"/>
              <Setter TargetName="root" Property="BorderBrush" Value="{StaticResource MH.Control.Pressed.Border}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition MinWidth="{DynamicResource ScrollBar.Width}" Width="0"/>
      </Grid.ColumnDefinitions>
      
      <Popup
        x:Name="PART_Popup"
        AllowsTransparency="True"
        Placement="Bottom"
        Grid.ColumnSpan="2"
        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        
        <theme:SystemDropShadowChrome
          x:Name="shadow"
          Color="Transparent"
          MaxHeight="{TemplateBinding MaxDropDownHeight}"
          MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          
          <Border
            x:Name="dropDownBorder"
            BorderBrush="{StaticResource MH.Control.Static.Border}"
            Background="{StaticResource MH.Control.Static.Background}"
            BorderThickness="1">
            
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas
                  x:Name="canvas"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Height="0"
                  Width="0">
                  
                  <Rectangle
                    x:Name="opaqueRect"
                    Fill="{Binding Background, ElementName=dropDownBorder}"
                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                </Canvas>
                
                <ItemsPresenter
                  x:Name="ItemsPresenter"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      
      <ToggleButton
        x:Name="toggleButton"
        BorderBrush="{TemplateBinding BorderBrush}"
        Background="{TemplateBinding Background}"
        BorderThickness="{TemplateBinding BorderThickness}"
        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Style="{StaticResource ComboBoxToggleButton}"
        Grid.ColumnSpan="2"/>
      
      <!--TODO only this part down is different from other template-->
      <Border
        x:Name="border"
        Margin="{TemplateBinding BorderThickness}"
        Background="{StaticResource MH.Control.Static.Background}">
        
        <TextBox
          x:Name="PART_EditableTextBox"
          Style="{StaticResource ComboBoxEditableTextBox}"
          IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
          Margin="{TemplateBinding Padding}"
          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Border>
    </Grid>
    
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="{StaticResource ControlIsNotEnabledOpacity}"/>
      </Trigger>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
        <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
      </Trigger>
      <Trigger Property="HasItems" Value="False">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True"/>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition MinWidth="{DynamicResource ScrollBar.Width}" Width="0"/>
      </Grid.ColumnDefinitions>

      <Popup
        x:Name="PART_Popup"
        AllowsTransparency="True"
        Grid.ColumnSpan="2"
        IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Margin="1"
        Placement="Bottom"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

        <theme:SystemDropShadowChrome
          x:Name="shadow"
          Color="Transparent"
          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}">

          <Border
            x:Name="dropDownBorder"
            Background="{StaticResource MH.Control.Static.Background}"
            BorderBrush="{StaticResource MH.Control.Static.Border}"
            BorderThickness="1">

            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas
                  x:Name="canvas"
                  HorizontalAlignment="Left"
                  Height="0"
                  VerticalAlignment="Top"
                  Width="0">

                  <Rectangle
                    x:Name="opaqueRect"
                    Fill="{Binding Background, ElementName=dropDownBorder}"
                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                </Canvas>

                <ItemsPresenter
                  x:Name="ItemsPresenter"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>

      <ToggleButton
        x:Name="toggleButton"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        Grid.ColumnSpan="2"
        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Style="{StaticResource ComboBoxToggleButton}"/>

      <!--TODO only this part down is different from other template-->
      <ContentPresenter
        x:Name="contentPresenter"
        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        IsHitTestVisible="False"
        Margin="{TemplateBinding Padding}"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    </Grid>

    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="{StaticResource ControlIsNotEnabledOpacity}"/>
      </Trigger>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
        <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
      </Trigger>
      <Trigger Property="HasItems" Value="False">
        <Setter TargetName="dropDownBorder" Property="Height" Value="95"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True"/>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="MH.Styles.BaseControls.ComboBox" TargetType="{x:Type ComboBox}">
    <Setter Property="Background" Value="{StaticResource MH.Control.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource MH.Control.Static.Border}"/>
    <Setter Property="Foreground" Value="{StaticResource MH.Control.Static.Text}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Padding" Value="6,3,5,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Padding" Value="4,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource MH.Control.Static.Text}"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MH.Styles.BaseControls.ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Padding" Value="4,1"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border
            x:Name="Bd" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}" 
            Padding="{TemplateBinding Padding}" 
            SnapsToDevicePixels="True">

            <ContentPresenter 
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="{StaticResource ControlIsNotEnabledOpacity}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False"/>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.Hover.Background}"/>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.Hover.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="IsMouseOver" Value="False"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.Selected.Background}"/>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.Selected.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.SelectedHover.Background}"/>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.SelectedHover.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="IsMouseOver" Value="False"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.SelectedNoFocus.Background}"/>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.SelectedNoFocus.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False"/>
                <Condition Property="IsMouseOver" Value="False"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.Focus.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False"/>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.HoverFocus.Background}"/>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.HoverFocus.Border}"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>