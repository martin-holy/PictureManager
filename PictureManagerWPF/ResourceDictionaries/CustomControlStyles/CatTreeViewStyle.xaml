<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:PictureManager.CustomControls">

<ResourceDictionary.MergedDictionaries>
  <ResourceDictionary Source="../Converters.xaml" />
  <ResourceDictionary Source="../Brushes/Brushes.xaml" />
</ResourceDictionary.MergedDictionaries>

  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
    <Setter Property="Height" Value="16" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Margin="{TemplateBinding Margin}" Background="Transparent">
            <Path x:Name="ExpandPath"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource TreeArrow}" 
                  Fill="{TemplateBinding Background}"
                  Stroke="{TemplateBinding Foreground}">
              <Path.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
              </Path.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource GrayBrush1}" />
              <Setter TargetName="ExpandPath" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource GrayBrush5}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="False" />
                <Condition Property="IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource GrayBrush5}" />
              <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource GrayBrush5}" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource AccentColorBrush}" />
              <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource AccentColorBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0"
                     Opacity="0"
                     SnapsToDevicePixels="True"
                     StrokeDashArray="1 2"
                     StrokeThickness="5"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CatTreeViewItem" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="{StaticResource ColorBrushBackground}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment,Mode=OneWay,FallbackValue=Stretch,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment,Mode=OneWay,FallbackValue=Center,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <StackPanel>
            <Border x:Name="Border"
                    MinHeight="{TemplateBinding MinHeight}"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

              <Grid VerticalAlignment="Stretch" Background="Transparent">
                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                <Grid Margin="{Binding DataContext,
                               Converter={StaticResource CatTreeViewMarginConverter},
                               ConverterParameter=-18, 
                               RelativeSource={RelativeSource TemplatedParent}}">
                  <ToggleButton x:Name="Expander"
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                IsChecked="{Binding IsExpanded,
                                            RelativeSource={RelativeSource TemplatedParent},
                                            Mode=TwoWay}" />
                </Grid>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </StackPanel>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Foreground" Value="{StaticResource SelectedForegroundBrush}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true" />
                <Condition Property="IsSelectionActive" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="{StaticResource ActiveSelectionForegroundBrush}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource ActiveSelectionBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="true" />
                <Condition Property="IsSelected" Value="true" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverSelectedBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="true" />
                <Condition Property="IsSelected" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="false" />
                <Condition Property="IsSelected" Value="true" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter Property="Foreground" Value="{StaticResource DisabledSelectedForegroundBrush}" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledSelectedBackgroundBrush}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="CatTreeView" TargetType="{x:Type cc:CatTreeView}">
    <Setter Property="Background" Value="{StaticResource ColorBrushBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource WhiteBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource CatTreeViewItem}" />
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type cc:CatTreeView}">
          <ScrollViewer x:Name="PART_ScrollViewer"
                        Focusable="False"
                        Padding="{TemplateBinding Padding}" 
                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" 
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource GrayBrush9}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>