<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:PictureManager.CustomControls"
                    xmlns:ctvm="clr-namespace:PictureManager.Domain.CatTreeViewModels;assembly=PictureManager.Domain">

<ResourceDictionary.MergedDictionaries>
  <ResourceDictionary Source="../Converters.xaml" />
  <ResourceDictionary Source="../Brushes/Brushes.xaml" />
  <ResourceDictionary Source="../NamedStyles/TextBlockStyles.xaml" />
</ResourceDictionary.MergedDictionaries>

  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
    <Setter Property="Height" Value="16" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Width="16" Height="16" Margin="{TemplateBinding Margin}" Background="#00FFFFFF">
            <Path Name="ExpandPath" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource TreeArrow}" 
                  Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}">
              <Path.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
              </Path.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Value="{StaticResource GrayBrush1}" Property="Fill" />
              <Setter TargetName="ExpandPath" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ExpandPath" Value="{StaticResource GrayBrush5}" Property="Stroke" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="False" />
                <Condition Property="IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath" Value="{StaticResource GrayBrush5}" Property="Fill" />
              <Setter TargetName="ExpandPath" Value="{StaticResource GrayBrush5}" Property="Stroke" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Value="{StaticResource AccentColorBrush}" Property="Fill" />
              <Setter TargetName="ExpandPath" Value="{StaticResource AccentColorBrush}" Property="Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0" Opacity="0" SnapsToDevicePixels="True" StrokeDashArray="1 2" StrokeThickness="5"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CatTreeViewItem" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment,Mode=OneWay,FallbackValue=Stretch,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment,Mode=OneWay,FallbackValue=Center,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <StackPanel>
            <Border x:Name="Border" MinHeight="{TemplateBinding MinHeight}"
                    Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid VerticalAlignment="Stretch" Background="Transparent"
                    Margin="{Binding DataContext, Converter={StaticResource CatTreeViewMarginConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" MinWidth="19"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="Expander" ClickMode="Press" Style="{StaticResource ExpandCollapseToggleStyle}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"/>
                <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </StackPanel>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Value="{StaticResource SelectedForegroundBrush}" Property="Foreground"/>
              <Setter TargetName="Border" Value="{StaticResource SelectedBackgroundBrush}" Property="Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="IsSelectionActive" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ActiveSelectionForegroundBrush}" Property="Foreground"/>
              <Setter TargetName="Border" Value="{StaticResource ActiveSelectionBackgroundBrush}" Property="Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="true"/>
                <Condition Property="IsSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Value="{StaticResource HoverSelectedBackgroundBrush}" Property="Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="true"/>
                <Condition Property="IsSelected" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Value="{StaticResource HoverBackgroundBrush}" Property="Background"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Foreground"/>
              <Setter TargetName="Border" Value="{StaticResource DisabledBackgroundBrush}" Property="Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="false"/>
                <Condition Property="IsSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter Value="{StaticResource DisabledSelectedForegroundBrush}" Property="Foreground"/>
                <Setter TargetName="Border" Value="{StaticResource DisabledSelectedBackgroundBrush}" Property="Background"/>
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsMarked}" Value="True" />
          <Condition Binding="{Binding BackgroundBrush}" Value="0" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
      </MultiDataTrigger>

      <DataTrigger Binding="{Binding IsHidden}" Value="True">
        <Setter Property="Visibility" Value="Collapsed" />
      </DataTrigger>

      <DataTrigger Binding="{Binding ToolTip, Converter={StaticResource AllToBoolConverter}}" Value="True">
        <Setter Property="ToolTip" Value="{Binding ToolTip}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="CatTreeView" TargetType="{x:Type cc:CatTreeView}">
    <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource CatTreeViewItem}" />
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type cc:CatTreeView}">
          <ScrollViewer Name="CatTreeViewScrollViewer" Focusable="False" Padding="{TemplateBinding Padding}" 
                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" 
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Resources>
      <!-- ICatTreeViewCatItem -->
      <HierarchicalDataTemplate DataType="{x:Type ctvm:ICatTreeViewCategory}" ItemsSource="{Binding Items}">
        <Border Height="40">
          <StackPanel Orientation="Horizontal">
            <cc:IconRect IconName="{Binding IconName}" Size="24" />
            <TextBlock Style="{StaticResource TreeViewTitle}" FontSize="18" />
          </StackPanel>
        </Border>
      </HierarchicalDataTemplate>

      <!-- ICatTreeViewBaseItem -->
      <HierarchicalDataTemplate DataType="{x:Type ctvm:ICatTreeViewBaseItem}" ItemsSource="{Binding Items}">
        <StackPanel Orientation="Horizontal">
          <cc:IconRect IconName="{Binding IconName}" />
          <TextBlock Style="{StaticResource TreeViewTitle}" FontSize="14" />
        </StackPanel>
      </HierarchicalDataTemplate>
    </Style.Resources>

    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource GrayBrush9}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>