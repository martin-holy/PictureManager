<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

<ResourceDictionary.MergedDictionaries>
  <ResourceDictionary Source="../Brushes/Brushes.xaml" />
  <ResourceDictionary Source="../Fonts/Fonts.xaml" />
</ResourceDictionary.MergedDictionaries>

  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
  <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
  <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
  <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>

  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{DynamicResource ColorBrushBackground}"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Margin" Value="6 2 6 2"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid Margin="0 6 0 4" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <Rectangle Height="1" Margin="20 0 1 1" Fill="{DynamicResource GrayBrush7}"
                       SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" UseLayoutRounding="true"/>
            <Rectangle Height="1" Margin="20 1 1 0" Fill="{DynamicResource WhiteBrush}"
                       SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" UseLayoutRounding="true"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="StyleBaseMenu" TargetType="{x:Type Menu}">
    <Setter Property="Background" Value="{DynamicResource ColorBrushBackground}"/>
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="FontSize" Value="{DynamicResource MenuFontSize}"/>
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Padding="{TemplateBinding Control.Padding}" 
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="StyleBaseContextMenu" TargetType="{x:Type ContextMenu}">
    <Setter Property="Background" Value="{DynamicResource ColorBrushBackground}"/>
    <Setter Property="Block.TextAlignment" Value="Left"/>
    <Setter Property="BorderBrush" Value="{StaticResource WhiteBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="FontSize" Value="{DynamicResource ContextMenuFontSize}"/>
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="HasDropShadow" Value="true"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Grid>
            <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Control.Background}"/>
            <Border x:Name="Border" 
                    Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                <ItemsPresenter x:Name="ItemsPresenter" Margin="0" Grid.IsSharedSizeScope="true"
                                KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </ScrollViewer>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="0 0 6 6"/>
              <Setter TargetName="LayoutRoot" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect BlurRadius="4" Direction="315" Opacity="0.3" ShadowDepth="2" Color="{DynamicResource MenuShadowColor}"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="0 0 6 6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="StyleBaseMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="Background" Value="{DynamicResource ColorBrushBackground}"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="Control.Padding" Value="7 5 8 6"/>
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="Control.Padding" Value="7 5 8 6"/>
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="Control.Padding" Value="2 6 2 6"/>
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="Control.Padding" Value="2 6 2 6"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  
  <ContextMenu x:Key="StyleContextMenuTextBox" Style="{StaticResource StyleBaseContextMenu}">
    <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource StyleBaseMenuItem}"/>
    <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource StyleBaseMenuItem}"/>
    <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource StyleBaseMenuItem}"/>
  </ContextMenu>

  <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ClickMode" Value="Hover"/>
    <Setter Property="MinHeight" Value="0"/>
    <Setter Property="MinWidth" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Background="Transparent" SnapsToDevicePixels="true">
            <Rectangle x:Name="R1" Width="1" DockPanel.Dock="Right" Fill="Transparent"/>
            <Rectangle x:Name="B1" Height="1" DockPanel.Dock="Bottom" Fill="Transparent"/>
            <Rectangle x:Name="L1" Width="1" DockPanel.Dock="Left" Fill="Transparent"/>
            <Rectangle x:Name="T1" Height="1" DockPanel.Dock="Top" Fill="Transparent"/>
            <ContentPresenter x:Name="ContentContainer" Margin="6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="B1" Property="Shape.Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
              <Setter TargetName="L1" Property="Shape.Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
              <Setter TargetName="R1" Property="Shape.Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
              <Setter TargetName="T1" Property="Shape.Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}"/>
            </Border>
            <RepeatButton Grid.Row="0" Grid.Column="0" Focusable="false" Style="{StaticResource MenuScrollButton}"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0"
                              FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            </RepeatButton>
            <RepeatButton Grid.Row="2" Grid.Column="0" Focusable="false" Style="{StaticResource MenuScrollButton}"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100"
                              FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
    <Border Background="{DynamicResource ColorBrushBackground}" BorderBrush="{StaticResource WhiteBrush}" BorderThickness="1">
      <ContentPresenter/>
    </Border>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="true">
      <Rectangle x:Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                 Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1"/>
      <DockPanel>
        <ContentPresenter x:Name="Icon" Margin="4 0 6 0" VerticalAlignment="Center" ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        <Path x:Name="GlyphPanel" Margin="8 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"
              Data="{StaticResource Checkmark}" Fill="{DynamicResource AccentColorBrush}"
              FlowDirection="LeftToRight" Visibility="Collapsed"/>
        <ContentPresenter Margin="{TemplateBinding Control.Padding}" ContentSource="Header" RecognizesAccessKey="true"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
      </DockPanel>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1"
             Placement="Bottom" VerticalOffset="-1"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
             IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <Grid>
          <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Control.Background}"/>
          <ContentControl x:Name="SubMenuBorder" IsTabStop="false"
                          Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
            <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true"
                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <ItemsPresenter x:Name="ItemsPresenter" Margin="0" Grid.IsSharedSizeScope="true"
                              KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </ContentControl>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="true">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <Setter TargetName="LayoutRoot" Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect BlurRadius="4" Direction="315" Opacity="0.3" ShadowDepth="2"
                              Color="{DynamicResource MenuShadowColor}"/>
          </Setter.Value>
        </Setter>
        <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="0 0 6 6"/>
        <Setter TargetName="SubMenuBorder" Property="FrameworkElement.Margin" Value="0 0 6 6"/>
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemSelectionStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}" Property="Shape.Fill"/>
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}" Property="Shape.Fill"/>
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground"/>
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="true">
      <Rectangle x:Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                 Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1"/>
      <DockPanel>
        <ContentPresenter x:Name="Icon" Margin="4 0 6 0" VerticalAlignment="Center" ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        <Path x:Name="GlyphPanel" Margin="8 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"
              Data="{StaticResource Checkmark}" Fill="{DynamicResource AccentColorBrush}"
              FlowDirection="LeftToRight" Visibility="Collapsed"/>
        <ContentPresenter Margin="{TemplateBinding Control.Padding}" ContentSource="Header" RecognizesAccessKey="true"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
      </DockPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="true">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemSelectionStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}" Property="Shape.Fill"/>
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground"/>
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="true">
      <Rectangle x:Name="Bg" Fill="{TemplateBinding Control.Background}"
                 Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1"/>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="4"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="6"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
          <ColumnDefinition Width="17"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        <Path x:Name="GlyphPanel" Grid.Column="1" Margin="5 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"
              Data="{StaticResource Checkmark}" Fill="{DynamicResource AccentColorBrush}"
              FlowDirection="LeftToRight" Visibility="Collapsed"/>
        <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Control.Padding}" ContentSource="Header"
                          RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}"
                   Text="{TemplateBinding MenuItem.InputGestureText}" Visibility="Collapsed"/>
        <Path Grid.Column="5" Margin="4 0 0 0" VerticalAlignment="Center" Data="{StaticResource RightArrow}"
              Fill="{DynamicResource AccentColorBrush}"/>
      </Grid>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2"
             Placement="Right" VerticalOffset="-3"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
             IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <Grid>
          <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Control.Background}"/>
          <ContentControl x:Name="SubMenuBorder" IsTabStop="false"
                          Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
            <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true"
                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <ItemsPresenter x:Name="ItemsPresenter" Margin="0" Grid.IsSharedSizeScope="true"
                              KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </ContentControl>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="true">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <Setter TargetName="LayoutRoot" Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect BlurRadius="4" Direction="315" Opacity="0.3" ShadowDepth="2"
                              Color="{DynamicResource MenuShadowColor}"/>
          </Setter.Value>
        </Setter>
        <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="0 0 6 6"/>
        <Setter TargetName="SubMenuBorder" Property="FrameworkElement.Margin" Value="0 0 6 6"/>
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionFill}" Property="Shape.Fill"/>
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground"/>
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="true">
      <Rectangle x:Name="Bg" Fill="{TemplateBinding Control.Background}"
                 Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1"/>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="4"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="6"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
          <ColumnDefinition Width="17"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        <Path x:Name="GlyphPanel" Grid.Column="1" Margin="5 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"
              Data="{StaticResource Checkmark}" Fill="{DynamicResource AccentColorBrush}"
              FlowDirection="LeftToRight" Visibility="Collapsed"/>
        <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Control.Padding}" ContentSource="Header"
                          RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}"
                   Text="{TemplateBinding MenuItem.InputGestureText}"/>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="true">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="true">
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionFill}" Property="Shape.Fill"/>
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionStroke}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground"/>
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style BasedOn="{StaticResource StyleBaseMenuItem}" TargetType="{x:Type MenuItem}"/>
  <Style BasedOn="{StaticResource StyleBaseMenu}" TargetType="{x:Type Menu}"/>
  <Style BasedOn="{StaticResource StyleBaseContextMenu}" TargetType="{x:Type ContextMenu}"/>
</ResourceDictionary>