<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:PictureManager.Converters"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:pm="clr-namespace:PictureManager"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:m="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain">

  <DataTemplate DataType="{x:Type m:SegmentM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        
        <ResourceDictionary.MergedDictionaries>
          <ResourceDictionary Source="MediaItemThumbnailV.xaml" />
        </ResourceDictionary.MergedDictionaries>
        
        <converters:SegmentThumbnailSourceConverter x:Key="SegmentThumbnailSourceConverter" />
        
      </ResourceDictionary>
    </DataTemplate.Resources>
    
    <Border
      x:Name="Root"
      BorderThickness="2"
      Margin="1"
      Background="Transparent"
      FocusVisualStyle="{x:Null}">

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="ToolTipOpening">
          <b:InvokeCommandAction
            Command="{Binding SegmentsM.SegmentToolTipReloadCommand,
                      Source={x:Static pm:App.Core}}"
            CommandParameter="{Binding}" />
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <Border.InputBindings>
        <MouseBinding
          MouseAction="LeftDoubleClick"
          Command="{Binding SegmentsVM.ViewMediaItemsWithSegmentCommand,
                    Source={x:Static pm:App.Ui}}"
          CommandParameter="{Binding}" />
      </Border.InputBindings>
          	  
      <Border.Style>
        <Style TargetType="{x:Type Border}">
          <Setter
            Property="BorderBrush"
            Value="Black" />

          <Style.Triggers>
            <DataTrigger
              Binding="{Binding IsSelected}"
              Value="True">
              
              <Setter
                Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Border.Style>

      <Border.ToolTip>
        <ToolTip Padding="0">
          <DockPanel>
            <Grid DockPanel.Dock="Top">
              <!-- Thumbnail -->
              <ContentPresenter Content="{Binding MediaItem}" />
              
              <!-- Segments Rects -->
              <ItemsControl ItemsSource="{Binding SegmentsM.SegmentToolTipRects,
                                          Source={x:Static pm:App.Core}}">

                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <Canvas />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                  <Style TargetType="{x:Type ContentPresenter}">
                    <Setter
                      Property="Canvas.Left"
                      Value="{Binding Item1}" />
                    <Setter
                      Property="Canvas.Top"
                      Value="{Binding Item2}" />
                  </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Rectangle
                      Width="{Binding Item3}"
                      Height="{Binding Item3}" 
                      StrokeThickness="1"
                      Effect="{StaticResource Res_ShadowEffect}">

                      <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                          <Setter
                            Property="Stroke"
                            Value="White" />

                          <Style.Triggers>
                            <DataTrigger
                              Binding="{Binding Item4}"
                              Value="True">

                              <Setter
                                Property="Stroke"
                                Value="LimeGreen" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Rectangle.Style>
                    </Rectangle>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </Grid>
            
            <!-- Name and FileName -->
            <StackPanel
              Orientation="Vertical"
              Margin="1">

              <Border
                BorderThickness="1"
                BorderBrush="Black"
                Background="#88000000">

                <TextBlock
                  FontSize="18"
                  Margin="5,2">

                  <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                      <Setter
                        Property="Text"
                        Value="{Binding Person.Name}" />

                      <Style.Triggers>
                        <DataTrigger
                          Binding="{Binding Person}"
                          Value="{x:Null}">

                          <Setter
                            Property="Text"
                            Value="0" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
              </Border>

              <TextBlock
                Text="{Binding MediaItem.FileName}"
                TextWrapping="Wrap"
                MaxWidth="{Binding MediaItem.ThumbWidth}" />
            </StackPanel>
          </DockPanel>
        </ToolTip>
      </Border.ToolTip>
    
      <Grid>
        
        <Image
          Stretch="Fill"
          Width="{Binding SegmentsVM.SegmentUiSize,
                  Source={x:Static pm:App.Ui}}"
          Height="{Binding SegmentsVM.SegmentUiSize,
                   Source={x:Static pm:App.Ui}}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource SegmentThumbnailSourceConverter}">
              <Binding Path="FilePathCache" IsAsync="True" />
              <Binding />
            </MultiBinding>
          </Image.Source>
        </Image>
        
        <!-- No Person Icon -->
        <mhc:Icon
          Source="{StaticResource IconPeople}"
          Fill="Red"
          ShowShadow="True"
          Margin="5"
          HorizontalAlignment="Left"
          VerticalAlignment="Top">
              
          <mhc:Icon.Style>
            <Style
              TargetType="{x:Type mhc:Icon}"
              BasedOn="{StaticResource MH.UI.WPF.Controls.Icon}">
                  
              <Setter
                Property="Visibility"
                Value="Hidden" />
                  
              <Style.Triggers>
                <DataTrigger
                  Binding="{Binding Person}"
                  Value="{x:Null}">
                      
                  <Setter
                    Property="Visibility"
                    Value="Visible" />
                </DataTrigger>
                    
                <DataTrigger
                  Binding="{Binding IsMouseOver, ElementName=Root}"
                  Value="True">

                  <Setter
                    Property="Visibility"
                    Value="Hidden" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </mhc:Icon.Style>
        </mhc:Icon>

        <!-- Buttons -->
        <StackPanel
          Orientation="Horizontal"
          HorizontalAlignment="Right"
          VerticalAlignment="Top">
          
          <StackPanel.Style>
            <Style TargetType="{x:Type StackPanel}">
              <Setter
                Property="Visibility"
                Value="Hidden" />

              <Style.Triggers>
                <DataTrigger
                  Binding="{Binding IsMouseOver, ElementName=Root}"
                  Value="True">

                  <Setter
                    Property="Visibility"
                    Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </StackPanel.Style>
            
          <!-- Same Person Button -->
          <StackPanel Orientation="Horizontal">
            <StackPanel.Style>
              <Style TargetType="{x:Type StackPanel}">
                <Setter
                  Property="Visibility"
                  Value="Hidden" />

                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition
                        Binding="{Binding IsSelected}"
                        Value="True" />
                      <Condition
                        Binding="{Binding SegmentsM.MultiplePeopleSelected,
                                  Source={x:Static pm:App.Core},
                                  Converter={StaticResource AllToBoolConverter}}"
                        Value="True" />
                    </MultiDataTrigger.Conditions>

                    <Setter
                      Property="Visibility"
                      Value="Visible" />
                  </MultiDataTrigger>
                </Style.Triggers>
              </Style>
            </StackPanel.Style>
              
            <Border
              Style="{StaticResource SBorderGroup}"
              Background="#1181B1"
              VerticalAlignment="Center"
              Margin="0,0,2,0">

              <TextBlock
                Style="{StaticResource STextBlock}"
                Text="{Binding SegmentsM.SelectedCount,
                        Source={x:Static pm:App.Core}}" />
            </Border>

            <mhc:IconButton
              Source="{StaticResource IconEquals}"
              Size="14"
              ToolTip="Set selected as same person"
              Command="{Binding SegmentsM.SetSelectedAsSamePersonCommand,
                        Source={x:Static pm:App.Core}}" />
          </StackPanel>

          <!-- Open Person Detail Control -->
          <mhc:IconButton
            Source="{StaticResource IconInformation}"
            Size="14"
            Command="{Binding PersonVM.SetPersonCommand,
                      Source={x:Static pm:App.Ui}}"
            CommandParameter="{Binding Person}" />
        </StackPanel>

      </Grid>
    </Border>
  </DataTemplate>

</ResourceDictionary>