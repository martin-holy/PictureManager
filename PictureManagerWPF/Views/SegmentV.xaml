<UserControl x:Class="PictureManager.Views.SegmentV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:pm="clr-namespace:PictureManager"
             xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
             xmlns:views="clr-namespace:PictureManager.Views"
             x:Name="Root">  

  <!-- This is the best way how to set DataContext in UserControl. Binding to Ancestor on first element. -->
  <Border DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:SegmentV}}}"
          BorderThickness="2"
          Margin="1"
          Background="Transparent"
          FocusVisualStyle="{x:Null}">

    <b:Interaction.Triggers>
      <b:EventTrigger EventName="ToolTipOpening">
        <b:InvokeCommandAction Command="{Binding SegmentsBaseVM.SegmentToolTipRectsReloadCommand, Source={x:Static pm:App.Ui}}"
                               CommandParameter="{Binding Segment}" />
      </b:EventTrigger>

      <b:EventTrigger EventName="MouseDown">
        <b:InvokeCommandAction Command="{Binding SegmentsBaseVM.ViewMediaItemsWithSegmentCommand, Source={x:Static pm:App.Ui}}"
                               EventArgsConverter="{StaticResource ClickConverter}"/>
      </b:EventTrigger>
    </b:Interaction.Triggers>
          	
    <Border.Style>
      <Style TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Segment.IsSelected}" Value="True">
            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </Border.Style>

    <Border.ToolTip>
      <ToolTip Padding="0">
        <DockPanel>
          <Grid DockPanel.Dock="Top">
            <!-- Thumbnail -->
            <ContentPresenter Content="{Binding Segment.MediaItem}"
                              ContentTemplate="{StaticResource MediaItemThumbnailV}" />
            
            <!-- Segments Rects -->
            <ItemsControl ItemsSource="{Binding SegmentsBaseVM.SegmentToolTipRects, Source={x:Static pm:App.Ui}}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <Canvas />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type ContentPresenter}">
                  <Setter Property="Canvas.Top" Value="{Binding Item1.Y}" />
                  <Setter Property="Canvas.Left" Value="{Binding Item1.X}" />
                </Style>
              </ItemsControl.ItemContainerStyle>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Rectangle Width="{Binding Item1.Width}"
                             Height="{Binding Item1.Height}" 
                             StrokeThickness="1"
                             Effect="{StaticResource Res_ShadowEffect}">
                    <Rectangle.Style>
                      <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Stroke" Value="White" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding Item2}" Value="True">
                            <Setter Property="Stroke" Value="LimeGreen" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Rectangle.Style>
                  </Rectangle>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Grid>
          
          <!-- Name and FileName -->
          <StackPanel Orientation="Vertical"
                      Margin="1">
            <Border BorderThickness="1"
                    BorderBrush="Black"
                    Background="#88000000">
              <TextBlock FontSize="18"
                         Margin="5,2">
                <TextBlock.Style>
                  <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding Segment.Person.Name}" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Segment.Person}" Value="{x:Null}">
                        <Setter Property="Text" Value="{Binding Segment.PersonId}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </Border>

            <TextBlock Text="{Binding Segment.MediaItem.FileName}"
                       TextWrapping="Wrap"
                       MaxWidth="{Binding Segment.MediaItem.ThumbWidth}" />
          </StackPanel>
          
        </DockPanel>
      </ToolTip>
    </Border.ToolTip>
  
    <Grid>
      <Grid>
        <Image Source="{Binding Segment.Picture}"
               Stretch="Fill"
               Width="{Binding SegmentsM.SegmentSize, Source={x:Static pm:App.Core}}"
               Height="{Binding SegmentsM.SegmentSize, Source={x:Static pm:App.Core}}" />
      
        <mhc:Icon Source="{StaticResource IconPeople}" Fill="Gray" Size="50">
          <mhc:Icon.Style>
            <Style TargetType="{x:Type mhc:Icon}" BasedOn="{StaticResource MH.UI.WPF.Controls.Icon}">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding Segment.Picture}" Value="{x:Null}">
                  <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </mhc:Icon.Style>
        </mhc:Icon>

        <b:Interaction.Triggers>
          <b:EventTrigger EventName="PreviewMouseUp">
            <b:InvokeCommandAction Command="{Binding SelectCommand}"
                                   EventArgsConverter="{StaticResource ClickConverter}"
                                   EventArgsConverterParameter="{StaticResource True}" />
          </b:EventTrigger>
        </b:Interaction.Triggers>
      </Grid>

      <!-- Buttons -->
      <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top">
        <StackPanel Orientation="Horizontal">
          <StackPanel.Style>
            <Style TargetType="{x:Type StackPanel}">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=Root}" Value="True">
                  <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </StackPanel.Style>
          
          <!-- Same Person Button -->
          <StackPanel Orientation="Horizontal">
            <StackPanel.Style>
              <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Visibility" Value="Hidden" />
                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding Segment.IsSelected}" Value="True" />
                      <Condition Binding="{Binding SegmentsM.SelectedCount, Source={x:Static pm:App.Core}, Converter={StaticResource AllToBoolConverter}, ConverterParameter=1}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible" />
                  </MultiDataTrigger>
                </Style.Triggers>
              </Style>
            </StackPanel.Style>
            
            <Border Style="{StaticResource SBorderGroup}"
                    Background="#1181B1"
                    VerticalAlignment="Center"
                    Margin="0,0,2,0">
              <TextBlock Style="{StaticResource STextBlock}"
                         Text="{Binding SegmentsM.SelectedCount, Source={x:Static pm:App.Core}}" />
            </Border>

            <mhc:IconButton Source="{StaticResource IconEquals}"
                            Size="14"
                            ToolTip="Set selected as same person"
                            Command="{Binding SegmentsBaseVM.SetSelectedAsSamePersonCommand, Source={x:Static pm:App.Ui}}" />
          </StackPanel>

          <!-- Open Person Detail Control -->
          <mhc:IconButton Source="{StaticResource IconInformation}"
                          Size="14"
                          Command="{Binding SetCurrentPersonCommand, Source={x:Static pm:App.Ui}}"
                          CommandParameter="{Binding Segment.Person}" />
        </StackPanel>

        <mhc:Icon Source="{StaticResource IconCheckMark}"
                  Fill="LimeGreen"
                  Size="16"
                  Margin="0,0,2,0"
                  ShowShadow="True"
                  IsIconVisible="{Binding IsCheckMarkVisible}" />
      </StackPanel>
    </Grid>
  </Border>
</UserControl>