<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:mhu="clr-namespace:MH.Utils;assembly=MH.Utils"
  xmlns:pm="clr-namespace:PictureManager"
  xmlns:wpfu="clr-namespace:MH.UI.WPF.Utils;assembly=MH.UI.WPF"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties;assembly=MH.UI.WPF"
  xmlns:mhConv="clr-namespace:MH.UI.WPF.Converters;assembly=MH.UI.WPF"
  xmlns:vm="clr-namespace:PictureManager.Domain.ViewModels;assembly=PictureManager.Domain">

  <DataTemplate DataType="{x:Type vm:MainWindowToolBarVM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
          <wpfu:CachedResourceDictionary Source="MediaItemsFilterV.xaml"/>
          <wpfu:CachedResourceDictionary Source="ViewersToolBarV.xaml"/>
        </ResourceDictionary.MergedDictionaries>
      </ResourceDictionary>
    </DataTemplate.Resources>

    <Grid Height="30" Background="Transparent" DataContext="{x:Static pm:App.Core}">
      <StackPanel
        Orientation="Horizontal"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Center"
        Background="#40000000">

        <Grid Width="180">
          <Grid.Background>
            <LinearGradientBrush>
              <GradientStop Offset="0" Color="{StaticResource Highlight}"/>
              <GradientStop Offset="1" Color="Transparent"/>
            </LinearGradientBrush>
          </Grid.Background>
          
          <!-- Progress bar -->
          <ContentPresenter Content="{Binding TitleProgressBarM}"/>

          <Grid
            Background="Transparent"
            mhc:CustomWindow.IsDragAreaFor="{Binding RelativeSource={RelativeSource AncestorType=mhc:CustomWindow}}">
            
            <!-- App Icon -->
            <Path
              Style="{StaticResource MH.Styles.Icon}"
              Data="{StaticResource IconImage}"
              Effect="{StaticResource MH.Effects.DropShadow}"
              Margin="5 -1 0 0"
              HorizontalAlignment="Left"/>

            <!-- App Title -->
            <TextBlock
              Text="Picture Manager"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
            
              FontWeight="Bold"
              Effect="{StaticResource MH.Effects.DropShadow}"/>
          </Grid>

          <!-- Main Menu -->
          <ContentPresenter
            ContentTemplate="{StaticResource Views.MainMenu}"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"/>
        </Grid>

        <StackPanel Orientation="Horizontal">
          <StackPanel.Resources>
            <Style
              TargetType="{x:Type Separator}"
              BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
              <Setter Property="Height" Value="15"/>
            </Style>
          </StackPanel.Resources>

          <!-- Viewers -->
          <ContentPresenter ContentTemplate="{StaticResource Views.ViewersToolBarV}"/>

          <Separator/>

          <!-- Media Items Count -->
          <Path
            Style="{StaticResource MH.Styles.Icon}"
            Data="{StaticResource IconImageMultiple}"
            Effect="{StaticResource MH.Effects.DropShadow}"
            Margin="3 0 0 0"/>
          <TextBlock
            Text="{Binding MediaItemsM.ItemsCount}"
            VerticalAlignment="Center"
            Margin="5 0"/>

          <!-- Filters Panel -->
          <ContentPresenter
            Content="{Binding MediaItemsViews.Current.Filter}"
            ContentTemplate="{StaticResource MediaItemsFilterV}"/>

          <!-- DB Button -->
          <mhc:IconTextButton
            ap:Icon.Data="{StaticResource IconDatabase}"
            ap:Text.Text="{Binding Db.Changes}"
            Command="{Binding VM.SaveDbCommand}"/>

          <!-- Log Button -->
          <Button
            Background="Red"
            Command="{Binding VM.OpenLogCommand}"
            Height="24"
            Margin="2 0 2 0"
            Visibility="{Binding Path=(mhu:Log.Items).Count, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">

            <TextBlock Text="{Binding Path=(mhu:Log.Items).Count, StringFormat='Log {0}'}"/>
          </Button>

          <Separator/>

          <!-- Segments ToolBar -->
          <StackPanel
            VerticalAlignment="Center"
            Orientation="Horizontal"
            DataContext="{Binding SegmentsM}">

            <mhc:IconToggleButton
              ToolTip="Segments edit"
              IsThreeState="False"
              VerticalAlignment="Center"
              ap:Icon.Data="{StaticResource IconPeople}"
              IsChecked="{Binding SegmentsRectsM.AreVisible}"/>

            <mhc:IconButton Command="{Binding SegmentsDrawerM.OpenCommand}"/>
            <mhc:IconButton Command="{Binding SegmentsDrawerM.AddSelectedCommand}"/>
            <mhc:IconButton Command="{Binding OpenSegmentsViewCommand, Source={x:Static pm:App.Core}}"/>
            <mhc:IconButton Command="{Binding SetSelectedAsUnknownCommand}"/>
          </StackPanel>

          <Separator/>

          <mhc:IconButton Command="{Binding PeopleM.OpenPeopleToolsTabCommand}"/>
          
          <!-- Presentation ToolBar -->
          <StackPanel
            VerticalAlignment="Center"
            Orientation="Horizontal"
            DataContext="{Binding MediaViewerM.PresentationPanel}"
            Visibility="{Binding MediaViewerM.IsVisible, Source={x:Static pm:App.Core}, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">

            <Separator/>
            
            <!-- Play/Stop -->
            <Grid>
              <mhc:IconButton
                Command="{Binding StartPresentationCommand}"
                Visibility="{Binding IsRunning, Converter={x:Static mhConv:VisibilityConverter.AllToCollapsed}}"/>
              <mhc:IconButton
                Command="{Binding StopPresentationCommand}"
                Visibility="{Binding IsRunning, Converter={x:Static mhConv:VisibilityConverter.AllToVisible}}"/>
            </Grid>

            <!-- Interval -->
            <Slider
              Style="{StaticResource MH.Styles.Controls.PopupSlider}"
              Minimum="1"
              Maximum="10"
              Value="{Binding Interval, Mode=TwoWay}"
              ap:Icon.Data="{StaticResource IconTimer}"
              ToolTip="Presentation interval"/>

            <!-- Play Panoramic Images -->
            <CheckBox
              IsChecked="{Binding PlayPanoramicImages}"
              ToolTip="Play Panoramic Images"/>
          </StackPanel>

          <!-- Media Items View -->
          <StackPanel Orientation="Horizontal">
            <StackPanel.Style>
              <Style TargetType="StackPanel">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding MediaItemsViews.Current, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True"/>
                      <Condition Binding="{Binding VM.MainWindow.IsInViewMode}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                  </MultiDataTrigger>
                </Style.Triggers>
              </Style>
            </StackPanel.Style>

            <Separator/>

            <!-- Thumbnails size -->
            <Slider
              Style="{StaticResource MH.Styles.Controls.PopupSlider}"
              ToolTip="Thumbnails size"
              ap:Icon.Data="{StaticResource IconMagnify}"
              Minimum="0.1"
              Maximum="2"
              TickFrequency="0.1"
              SmallChange="0.1"
              LargeChange="0.2"
              Value="{Binding MediaItemsViews.Current.ThumbScale, Mode=TwoWay}"/>

            <!-- Image Comparer -->
            <mhc:IconButton
              Command="{Binding ImageComparerM.AverageHashCommand}"
              CommandParameter="{Binding MediaItemsViews.Current}"/>

            <mhc:IconButton
              Command="{Binding ImageComparerM.PHashCommand}"
              CommandParameter="{Binding MediaItemsViews.Current}"/>

            <Slider
              Style="{StaticResource MH.Styles.Controls.PopupSlider}"
              ToolTip="Compare limit"
              ap:Icon.Data="{StaticResource IconCompare}"
              Minimum="0"
              Maximum="25"
              Value="{Binding ImageComparerM.Diff, Mode=TwoWay}"/>
          </StackPanel>
        </StackPanel>
      </StackPanel>

      <Grid HorizontalAlignment="Right">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ContentPresenter Content="{StaticResource MH.Res.SlidePanel-PinButton}"/>

        <ContentPresenter
          Grid.Column="1"
          Content="{Binding RelativeSource={RelativeSource AncestorType=mhc:CustomWindow}}"
          ContentTemplate="{StaticResource MH.Styles.Controls.WindowButtons}"/>
      </Grid>
    </Grid>
  </DataTemplate>
</ResourceDictionary>