<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:pm="clr-namespace:PictureManager"
  xmlns:vm="clr-namespace:PictureManager.ViewModels">

  <DataTemplate DataType="{x:Type vm:MainWindowToolBarVM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
          <ResourceDictionary Source="ViewersToolBarV.xaml" />
        </ResourceDictionary.MergedDictionaries>
      </ResourceDictionary>
    </DataTemplate.Resources>

    <Grid Height="30" Background="Transparent">
      <Grid.InputBindings>
        <MouseBinding
          MouseAction="LeftClick"
          Command="{Binding PinCommand, RelativeSource=
                   {RelativeSource AncestorType={x:Type mhc:SlidePanel}}}" />
      </Grid.InputBindings>

      <StackPanel
        Orientation="Horizontal"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Center"
        Background="#40000000"
        WindowChrome.IsHitTestVisibleInChrome="True">

        <Grid WindowChrome.IsHitTestVisibleInChrome="False">
          <!-- Progress bar -->
          <ContentPresenter Content="{Binding CoreM.TitleProgressBarM}"/>

          <!-- App Icon -->
          <Path
            Style="{StaticResource MH.Styles.Icon}"
            Data="{StaticResource IconImage}"
            Effect="{StaticResource MH.Effects.DropShadow}"
            Margin="5 -1 0 0"
            HorizontalAlignment="Left"/>

          <!-- App Title -->
          <TextBlock
            Text="Picture Manager"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            FontWeight="Bold"/>

          <!-- Main Menu -->
          <ContentPresenter
            ContentTemplate="{StaticResource Views.MainMenu}"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            WindowChrome.IsHitTestVisibleInChrome="True"/>
        </Grid>

        <StackPanel Orientation="Horizontal">
          <StackPanel.Resources>
            <Style
              TargetType="{x:Type Separator}"
              BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
              <Setter Property="Height" Value="15" />
            </Style>
          </StackPanel.Resources>

          <!-- Viewers -->
          <ContentPresenter ContentTemplate="{StaticResource Views.ViewersToolBarV}" />

          <Separator />

          <!-- Media Items Count -->
          <Path
            Style="{StaticResource MH.Styles.Icon}"
            Data="{StaticResource IconImageMultiple}"
            Effect="{StaticResource MH.Effects.DropShadow}"
            Margin="3 0 0 0" />
          <TextBlock
            Text="{Binding CoreM.MediaItemsM.MediaItemsCount}"
            VerticalAlignment="Center"
            Margin="5 0" />

          <Separator />

          <!-- Filters Panel -->
          <StackPanel
            Orientation="Horizontal"
            VerticalAlignment="Center"
            Margin="0 2 2 0"
            DataContext="{Binding CoreM.ThumbnailsGridsM}"
            ToolTip="Clear filters"
            Cursor="Hand">

            <StackPanel.Resources>
              <Style
                TargetType="{x:Type Border}"
                BasedOn="{StaticResource SBorderActiveFilter}" />
              <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="-1,-1,0,0"/>
                <Setter Property="Padding" Value="2,0"/>
                <Setter Property="Effect" Value="{StaticResource MH.Effects.DropShadow}"/>
              </Style>
            </StackPanel.Resources>

            <StackPanel.InputBindings>
              <MouseBinding
                MouseAction="LeftClick"
                Command="{Binding ClearFiltersCommand}" />
            </StackPanel.InputBindings>

            <!-- And -->
            <Border Background="{StaticResource DisplayFilterAndBrush}">
              <Label
                Content="{Binding Current.FilterAndCount}"
                Visibility="{Binding Current.FilterAndCount,
                            Converter={StaticResource AllToVisibilityConverter}}" />
            </Border>

            <!-- Or -->
            <Border Background="{StaticResource DisplayFilterOrBrush}">
              <Label
                Content="{Binding Current.FilterOrCount}"
                Visibility="{Binding Current.FilterOrCount,
                            Converter={StaticResource AllToVisibilityConverter}}"/>
            </Border>

            <!-- Not -->
            <Border Background="{StaticResource DisplayFilterNotBrush}">
              <Label
                Content="{Binding Current.FilterNotCount}"
                Visibility="{Binding Current.FilterNotCount,
                            Converter={StaticResource AllToVisibilityConverter}}"/>
            </Border>
          </StackPanel>

          <!-- Media Types -->
          <StackPanel
            VerticalAlignment="Center"
            Orientation="Horizontal"
            DataContext="{Binding CoreVM.ThumbnailsGridsVM}">

            <mhc:IconToggleButton
              Icon="{StaticResource IconImage}"
              ToolTip="Image"
              Margin="0"
              IsChecked="{Binding Current.Model.ShowImages}"
              Command="{Binding Model.ReapplyFilterCommand}" />

            <mhc:IconToggleButton
              Icon="{StaticResource IconMovieClapper}"
              ToolTip="Video"
              Margin="0"
              IsChecked="{Binding Current.Model.ShowVideos}"
              Command="{Binding Model.ReapplyFilterCommand}" />
          </StackPanel>

          <Separator />

          <!-- DB Button -->
          <mhc:IconTextButton
            Icon="{StaticResource IconDatabase}"
            Text="{Binding CoreM.Sdb.Changes}"
            Command="{Binding CoreM.MainWindowM.SaveDbCommand}"/>

          <!-- Log Button -->
          <Button
            Background="Red"
            Command="{Binding CoreM.MainWindowM.OpenLogCommand}"
            Height="24"
            Margin="2 0 2 0"
            Visibility="{Binding CoreM.Log.Count, Converter={StaticResource AllToVisibilityConverter}}">

            <TextBlock Text="{Binding CoreM.Log.Count, StringFormat='Log {0}'}" />
          </Button>

          <Separator />

          <!-- Segments ToolBar -->
          <StackPanel
            VerticalAlignment="Center"
            Orientation="Horizontal"
            DataContext="{Binding CoreVM.SegmentsVM}">

            <mhc:IconToggleButton
              ToolTip="Segments edit"
              IsThreeState="False"
              VerticalAlignment="Center"
              Icon="{StaticResource IconPeople}"
              IsChecked="{Binding SegmentsRectsVM.AreVisible}" />

            <mhc:IconButton
              ToolTip="Open Segments drawer"
              Icon="{StaticResource IconDrawer}"
              Command="{Binding OpenSegmentsDrawerCommand}"/>

            <mhc:IconButton
              ToolTip="Add selected to Segments drawer"
              Icon="{StaticResource IconPlus}"
              Command="{Binding SegmentsM.AddSelectedToDrawerCommand}" />

            <mhc:IconButton
              ToolTip="Segment Matching"
              Icon="{StaticResource IconEquals}"
              Command="{Binding SegmentsM.SegmentMatchingCommand}" />
          </StackPanel>

          <Separator />

          <!-- Presentation ToolBar -->
          <StackPanel
            VerticalAlignment="Center"
            Orientation="Horizontal"
            DataContext="{Binding CoreM.MediaViewerM.PresentationPanel}"
            IsEnabled="{Binding MediaViewerM.Current, Source={x:Static pm:App.Core}, Converter={StaticResource AllToBoolConverter}}">

            <!-- Play/Stop -->
            <mhc:IconButton Command="{Binding PresentationCommand}">
              <mhc:IconButton.Style>
                <Style
                  TargetType="{x:Type mhc:IconButton}"
                  BasedOn="{StaticResource MH.Styles.Controls.IconButton}">
                  <Setter Property="Background" Value="White" />
                  <Setter Property="Icon" Value="{StaticResource IconPlay}" />
                  <Setter Property="ToolTip" Value="Stop presentation" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsRunning}" Value="False">
                      <Setter Property="Icon" Value="{StaticResource IconStop}" />
                      <Setter Property="ToolTip" Value="Start presentation" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </mhc:IconButton.Style>
            </mhc:IconButton>

            <!-- Interval -->
            <mhc:PopupSlider
              Minimum="1"
              Maximum="10"
              Value="{Binding Interval, Mode=TwoWay}"
              Icon="{StaticResource IconTimer}"
              ToolTip="Presentation interval"/>

            <!-- Play Panoramic Images -->
            <CheckBox
              IsChecked="{Binding PlayPanoramicImages}"
              ToolTip="Play Panoramic Images"/>
          </StackPanel>

          <!-- Image Comparer -->
          <StackPanel
            Orientation="Horizontal"
            Visibility="{Binding CoreM.ThumbnailsGridsM.Current, Converter={StaticResource AllToVisibilityConverter}}">

            <Separator />

            <mhc:IconButton
              ToolTip="Compare images using average hash"
              Icon="{StaticResource IconCompare}"
              Command="{Binding CoreVM.ImageComparerVM.AverageHashCommand}"
              CommandParameter="{Binding CoreM.ThumbnailsGridsM.Current}"/>

            <mhc:IconButton
              ToolTip="Compare images using p hash"
              Icon="{StaticResource IconCompare}"
              Command="{Binding CoreVM.ImageComparerVM.PHashCommand}"
              CommandParameter="{Binding CoreM.ThumbnailsGridsM.Current}"/>

            <mhc:PopupSlider
              ToolTip="Compare limit"
              Icon="{StaticResource IconCompare}"
              Minimum="0"
              Maximum="25"
              Value="{Binding CoreVM.ImageComparerVM.Diff, Mode=TwoWay}"/>
          </StackPanel>
        </StackPanel>
      </StackPanel>

      <mhc:WindowButtons Window="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
    </Grid>
  </DataTemplate>
</ResourceDictionary>