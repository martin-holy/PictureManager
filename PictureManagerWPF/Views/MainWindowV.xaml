<mahApps:MetroWindow 
  x:Class="PictureManager.Views.MainWindowV"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:mahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
  xmlns:pm="clr-namespace:PictureManager"
  xmlns:cc="clr-namespace:PictureManager.CustomControls"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  DataContext="{Binding MainWindowVM, Source={x:Static pm:App.Ui}}"
  UseNoneWindowStyle="{Binding IsFullScreen}"
  IgnoreTaskbarOnMaximize="{Binding IsFullScreen}"
  Title="Picture Manager"
  TitleAlignment="Center"
  Height="550"
  Width="930"
  WindowState="Maximized" 
  FontSize="13.333"
  SaveWindowPosition="True"
  LeftWindowCommandsOverlayBehavior="Never">
  
  <mahApps:MetroWindow.Style>
    <Style TargetType="{x:Type mahApps:MetroWindow}">
      <Style.Triggers>
        <DataTrigger
          Binding="{Binding MainWindowVM.IsFullScreen,
                    Source={x:Static pm:App.Ui}}"
          Value="False">
          
          <Setter
            Property="ShowTitleBar"
            Value="True" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </mahApps:MetroWindow.Style>

  <mahApps:MetroWindow.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TreeViewCategoriesV.xaml" />
        <ResourceDictionary Source="MainTabsV.xaml" />
        <ResourceDictionary Source="MainMenuV.xaml" />
        <ResourceDictionary Source="StatusPanelV.xaml" />
        <ResourceDictionary Source="TitleProgressBarV.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </mahApps:MetroWindow.Resources>

  <mahApps:MetroWindow.InputBindings>
    <KeyBinding Modifiers="Control" Key="E" Command="{Binding MediaItemsVM.EditCommand, Source={x:Static pm:App.Ui}}" />
    <KeyBinding Modifiers="Control" Key="S" Command="{Binding MediaItemsVM.SaveEditCommand, Source={x:Static pm:App.Ui}}" />
    <KeyBinding Modifiers="Control" Key="Q" Command="{Binding MediaItemsVM.CancelEditCommand, Source={x:Static pm:App.Ui}}" />
    <KeyBinding Key="F2" Command="{Binding MediaItemsVM.RenameCommand, Source={x:Static pm:App.Ui}}" />
    <KeyBinding Key="Delete" Command="{Binding MediaItemsVM.DeleteCommand, Source={x:Static pm:App.Ui}}" />
    <KeyBinding Modifiers="Control" Key="K" Command="{Binding MediaItemsVM.CommentCommand, Source={x:Static pm:App.Ui}}" />
    <KeyBinding Modifiers="Control" Key="R" Command="{Binding MediaItemsVM.RotateCommand, Source={x:Static pm:App.Ui}}" />
  </mahApps:MetroWindow.InputBindings>
  
  <b:Interaction.Triggers>
    <b:EventTrigger EventName="Closing">
      <b:InvokeCommandAction Command="{Binding ClosingCommand}" />
    </b:EventTrigger>
    <b:EventTrigger EventName="Loaded">
      <b:InvokeCommandAction Command="{Binding LoadedCommand}" />
    </b:EventTrigger>
  </b:Interaction.Triggers>

  <!-- Title -->
  <mahApps:MetroWindow.TitleTemplate>
    <DataTemplate>
      <ContentPresenter
        Content="{Binding TitleProgressBarM,
                  Source={x:Static pm:App.Core}}"
        ContentTemplate="{StaticResource Views.TitleProgressBarV}"/>
    </DataTemplate>
  </mahApps:MetroWindow.TitleTemplate>

  <mahApps:MetroWindow.LeftWindowCommands>
    <mahApps:WindowCommands>
      <!-- Main Menu -->
      <ContentPresenter
        ContentTemplate="{StaticResource Views.MainMenu}" />

      <!-- Media Items Count -->
      <TextBlock
        Text="{Binding MediaItemsM.MediaItemsCount,
               Source={x:Static pm:App.Core}}"
        VerticalAlignment="Center"
        Margin="5,0" />
      
      <!-- Filters Panel -->
      <StackPanel
        Orientation="Horizontal"
        VerticalAlignment="Center"
        Margin="0,2,2,0"
        DataContext="{x:Static pm:App.Core}"
        ToolTip="Clear filters"
        Cursor="Hand">

        <StackPanel.Resources>
          <Style
            TargetType="{x:Type Border}"
            BasedOn="{StaticResource SBorderActiveFilter}" />
          <Style
            TargetType="{x:Type Label}"
            BasedOn="{StaticResource SShadowLabel}" />
        </StackPanel.Resources>
        
        <StackPanel.InputBindings>
          <MouseBinding
            MouseAction="LeftClick"
            Command="{Binding ThumbnailsGridsVM.ClearFiltersCommand,
                      Source={x:Static pm:App.Ui}}" />
        </StackPanel.InputBindings>

        <!-- And -->
        <Border Background="{StaticResource DisplayFilterAndBrush}">
          <Label
            Content="{Binding ThumbnailsGridsM.Current.FilterAndCount}"
            Visibility="{Binding ThumbnailsGridsM.Current.FilterAndCount,
                         Converter={StaticResource AllToVisibilityConverter}}" />
        </Border>

        <!-- Or -->
        <Border Background="{StaticResource DisplayFilterOrBrush}">
          <Label
            Content="{Binding ThumbnailsGridsM.Current.FilterOrCount}"
            Visibility="{Binding ThumbnailsGridsM.Current.FilterOrCount,
                         Converter={StaticResource AllToVisibilityConverter}}"/>
        </Border>

        <!-- Not -->
        <Border Background="{StaticResource DisplayFilterNotBrush}">
          <Label
            Content="{Binding ThumbnailsGridsM.Current.FilterNotCount}"
            Visibility="{Binding ThumbnailsGridsM.Current.FilterNotCount,
                         Converter={StaticResource AllToVisibilityConverter}}"/>
        </Border>
      </StackPanel>

      <!-- Media Types -->
      <StackPanel
        VerticalAlignment="Center"
        Orientation="Horizontal"
        DataContext="{Binding ThumbnailsGridsVM,
                      Source={x:Static pm:App.Ui}}">

        <mhc:IconToggleButton
          Source="{StaticResource IconImage}"
          ToolTip="Image"
          Margin="0"
          IsChecked="{Binding Current.Model.ShowImages}"
          Command="{Binding ReapplyFilterCommand}" />

        <mhc:IconToggleButton
          Source="{StaticResource IconMovieClapper}"
          ToolTip="Video"
          Margin="0"
          IsChecked="{Binding Current.Model.ShowVideos}"
          Command="{Binding ReapplyFilterCommand}" />
      </StackPanel>

      <!-- DB Button -->
      <Button
        Height="24"
        Width="24"
        Margin="2,0,2,0"
        Style="{StaticResource StyleBaseButtonBase}"
        Command="{Binding SaveDbCommand}"
        Background="Transparent"
        BorderThickness="0"
        VerticalContentAlignment="Stretch"
        HorizontalContentAlignment="Stretch">
        
        <Grid >
          <TextBlock
            Text="DB"
            VerticalAlignment="Top" />
          <Label
            Content="{Binding Sdb.Changes,
                      Source={x:Static pm:App.Core}}" 
            Style="{StaticResource SShadowLabel}"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"/>
        </Grid>
      </Button>

      <!-- Log Button -->
      <Button
        Background="Red"
        Command="{Binding OpenLogCommand}"
        Height="24"
        Margin="2,0,2,0"
        Visibility="{Binding Log.Count,
                     Source={x:Static pm:App.Core},
                     Converter={StaticResource AllToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="Log " />
          <TextBlock Text="{Binding Log.Count,
                            Source={x:Static pm:App.Core}}" />
        </StackPanel>
      </Button>

    </mahApps:WindowCommands>
  </mahApps:MetroWindow.LeftWindowCommands>

  <mahApps:MetroWindow.RightWindowCommands>
    <mahApps:WindowCommands>
      <cc:ImageComparer
        x:Name="ImageComparerTool"
        Visibility="Collapsed" />
    </mahApps:WindowCommands>
  </mahApps:MetroWindow.RightWindowCommands>

  <Grid>
    <cc:SlidePanelsGrid
      FocusVisualStyle="{x:Null}">
      
      <!-- Tree View Categories -->
      <cc:SlidePanelsGrid.ContentLeft>
        <cc:SlidePanel
          DataContext="{Binding TreeViewCategoriesVM, Source={x:Static pm:App.Ui}}"
          IsOpen="{Binding IsOpen, Mode=TwoWay}"
          IsPinned="{Binding IsPinned}"
          Position="Left"
          Width="380">

          <cc:SlidePanel.Content>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <!-- Tree View Categories -->
              <ContentPresenter
                Grid.Row="0"
                Content="{Binding}"
                ContentTemplate="{StaticResource Views.TreeViewCategoriesV}" />

              <!-- Status Bar Margin -->
              <Control
                Grid.Row="1"
                Height="{Binding ActualHeight, ElementName=StatusPanel}" />
            </Grid>
          </cc:SlidePanel.Content>
        </cc:SlidePanel>
      </cc:SlidePanelsGrid.ContentLeft>

      <cc:SlidePanelsGrid.ContentMiddle>
        <Grid>
          <!-- Main Tabs -->
          <ContentPresenter
            Content="{Binding MainTabsVM, Source={x:Static pm:App.Ui}}"
            ContentTemplate="{StaticResource Views.MainTabsV}"
            Visibility="{Binding MediaViewerVM.IsVisible,
                         Source={x:Static pm:App.Ui},
                         Converter={StaticResource AllToVisibilityConverter}, 
                         ConverterParameter={StaticResource False}}" />

          <!-- MediaViewer -->
          <ContentPresenter
            Content="{Binding MediaViewerVM, Source={x:Static pm:App.Ui}}"
            ContentTemplate="{StaticResource Views.MediaViewerV}"
            Visibility="{Binding MediaViewerVM.IsVisible,
                         Source={x:Static pm:App.Ui},
                         Converter={StaticResource AllToVisibilityConverter}}"/>
        </Grid>
      </cc:SlidePanelsGrid.ContentMiddle>
      
      <!-- Tools Tabs -->
      <cc:SlidePanelsGrid.ContentRight>
        <cc:SlidePanel
          DataContext="{Binding ToolsTabsVM, Source={x:Static pm:App.Ui}}"
          Position="Right"
          Width="340"
          Margin="0,0,-340,0"
          IsPinned="{Binding IsPinned}"
          IsOpen="{Binding IsOpen, Mode=TwoWay}">
          
          <cc:SlidePanel.Content>
            <ContentPresenter
              Content="{Binding}"
              ContentTemplate="{StaticResource Views.ToolsTabsV}" />
          </cc:SlidePanel.Content>
        </cc:SlidePanel>
      </cc:SlidePanelsGrid.ContentRight>
    </cc:SlidePanelsGrid>

    <!-- Status Panel -->
    <ContentPresenter
      x:Name="StatusPanel"
      ContentTemplate="{StaticResource Views.StatusPanelV}"
      Content="{Binding StatusPanelVM, Source={x:Static pm:App.Ui}}"
      VerticalAlignment="Bottom" />
  </Grid>
  
</mahApps:MetroWindow>
