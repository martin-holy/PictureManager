<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:m="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:pm="clr-namespace:PictureManager">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="SegmentV.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <DataTemplate
    x:Key="NoSegmentIcon">

    <Border
      BorderThickness="2"
      BorderBrush="Black"
      Margin="1"
      Background="Transparent"
      FocusVisualStyle="{x:Null}">

      <mhc:Icon
        Source="{StaticResource IconPeople}"
        Fill="Gray"
        Size="50"
        Width="{Binding SegmentsVM.SegmentUiSize,
                Source={x:Static pm:App.Ui}}"
        Height="{Binding SegmentsVM.SegmentUiSize,
                 Source={x:Static pm:App.Ui}}" />
    </Border>
  </DataTemplate>

  <DataTemplate
    x:Key="Views.PersonThumbnailV"
    DataType="{x:Type m:PersonM}">

    <Grid>
      <!-- Segment or empty icon -->
      <ContentControl>
        <ContentControl.Style>
          <Style TargetType="{x:Type ContentControl}">
            <Setter
              Property="Content"
              Value="{Binding Segment}" />
            <Setter
              Property="ContentTemplate"
              Value="{StaticResource Views.SegmentV}" />

            <Style.Triggers>
              <DataTrigger
                Binding="{Binding Segment}"
                Value="{x:Null}">

                <Setter
                  Property="Content"
                  Value="{Binding}" />
                <Setter
                  Property="ContentTemplate"
                  Value="{StaticResource NoSegmentIcon}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ContentControl.Style>
      </ContentControl>

      <!-- Border -->
      <Border BorderThickness="2">
        <Border.Style>
          <Style TargetType="{x:Type Border}">
            <Setter
              Property="BorderBrush"
              Value="Transparent" />
            
            <Style.Triggers>
              <DataTrigger
                Binding="{Binding IsSelected}"
                Value="True">

                <Setter
                  Property="BorderBrush"
                  Value="{DynamicResource AccentColorBrush}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
      </Border>

    </Grid>

  </DataTemplate>
    
</ResourceDictionary>