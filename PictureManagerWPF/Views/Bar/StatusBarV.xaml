<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.Controls;assembly=MH.UI"
  xmlns:mhConv="clr-namespace:MH.UI.WPF.Converters;assembly=MH.UI.WPF"
  xmlns:wpfu="clr-namespace:MH.UI.WPF.Utils;assembly=MH.UI.WPF"
  xmlns:vm="clr-namespace:PictureManager.Domain.ViewModels;assembly=PictureManager.Domain">

  <DataTemplate DataType="{x:Type vm:StatusBarVM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
          <wpfu:CachedResourceDictionary Source="SelectedItemsStatusBarV.xaml"/>
        </ResourceDictionary.MergedDictionaries>

        <Style x:Key="_itemsControlStyle" TargetType="{x:Type ItemsControl}">
          <Setter Property="ItemsPanel">
            <Setter.Value>
              <ItemsPanelTemplate>
                <WrapPanel Orientation="Horizontal"/>
              </ItemsPanelTemplate>
            </Setter.Value>
          </Setter>

          <Setter Property="ItemTemplate">
            <Setter.Value>
              <DataTemplate>
                <Border Style="{StaticResource SBorderText}">
                  <TextBlock Text="{Binding}" Style="{StaticResource STextBlock}"/>
                </Border>
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style x:Key="_infoGroup" TargetType="{x:Type Border}" BasedOn="{StaticResource SBorderGroup}">
          <Style.Resources>
            <Style TargetType="{x:Type StackPanel}">
              <Setter Property="Orientation" Value="Horizontal"/>
            </Style>
            <Style TargetType="{x:Type Path}" BasedOn="{StaticResource MH.Styles.Icon}">
              <Setter Property="Effect" Value="{StaticResource MH.Effects.DropShadow}"/>
            </Style>
            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource SBorderText}"/>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource STextBlock}"/>
            <Style TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource _itemsControlStyle}"/>
          </Style.Resources>
        </Style>
      </ResourceDictionary>
    </DataTemplate.Resources>

    <Grid Background="{StaticResource MH.Brushes.Black25}">
      <Grid.InputBindings>
        <MouseBinding
          MouseAction="LeftClick"
          Command="mhc:SlidePanelsGrid.PinCommand"
          CommandParameter="{Binding Core.VM.MainWindow.SlidePanelsGrid.PanelBottom}"/>
      </Grid.InputBindings>

      <WrapPanel Margin="1,0,0,0" VerticalAlignment="Center">
        <!-- Selected items -->
        <ContentPresenter
          Height="32"
          Content="{Binding Core}"
          ContentTemplate="{StaticResource PM.Views.SelectedItemsStatusBarV}"/>

        <!-- PositionSlashCount -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding IsCountVisible, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">
          <StackPanel Orientation="Horizontal">
            <Path Data="{StaticResource IconImageMultiple}"/>

            <Border>
              <TextBlock
                x:Name="tbPositionSlashCount"
                Style="{StaticResource STextBlock}"
                Text="{Binding Core.VM.MediaItemsViews.Current.PositionSlashCount}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- Dimension -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding Core.VM.MediaItem.Current, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">
          <StackPanel>
            <Path Data="{StaticResource IconRuler}"/>

            <Border>
              <TextBlock>
                <TextBlock.Text>
                  <MultiBinding StringFormat="{}{0}x{1}">
                    <Binding Path="Core.VM.MediaItem.Current.Width"/>
                    <Binding Path="Core.VM.MediaItem.Current.Height"/>
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
            </Border>
          </StackPanel>
        </Border>

        <!-- File Size -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding FileSize, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">
          <StackPanel>
            <Path Data="{StaticResource IconPageUpload}"/>

            <Border>
              <TextBlock Text="{Binding FileSize}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- ImageActualZoom -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding Core.VM.MediaViewer.IsVisible, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">
          <StackPanel>
            <Path Data="{StaticResource IconMagnify}"/>

            <Border>
              <TextBlock Text="{Binding Core.VM.MediaViewer.ActualZoom, StringFormat={}{0:####}%}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- Rating -->
        <Border
          Style="{StaticResource SBorderGroup}"
          Margin="2,0,2,0"
          VerticalAlignment="Center"
          Visibility="{Binding Rating.Count, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">
          <Border Margin="0">
            <ItemsControl ItemsSource="{Binding Rating}">

              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Path
                    Data="{StaticResource IconStar}"
                    Style="{StaticResource MH.Styles.Icon}"
                    Effect="{StaticResource MH.Effects.DropShadow}"/>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Border>
        </Border>

        <!-- GeoName -->
        <Border
          x:Name="boGeoName"
          ToolTip="{Binding Core.VM.MediaItem.CurrentGeoName.FullName}"
          Style="{StaticResource SBorderGroup}"
          Margin="1,2,1,0"
          Padding="4"
          Visibility="Collapsed">
          <Path
            Data="{StaticResource IconLocationCheckin}"
            Style="{StaticResource MH.Styles.Icon}"
            Effect="{StaticResource MH.Effects.DropShadow}"/>
        </Border>

        <!-- FilePath -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding FilePath, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"
          ToolTip="{Binding Core.VM.MediaItem.Current.FilePath}">

          <StackPanel>
            <Path Data="{StaticResource IconFolder}" Fill="{StaticResource ColorBrushFolder}"/>
            <ItemsControl ItemsSource="{Binding FilePath}"/>
          </StackPanel>
        </Border>

        <!-- DateAndTime -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding DateAndTime, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">

          <StackPanel>
            <Path Data="{StaticResource IconCalendar}"/>

            <Border>
              <TextBlock Text="{Binding DateAndTime}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- People -->
        <Border
          x:Name="boPeople"
          Style="{StaticResource _infoGroup}"
          Visibility="Collapsed">

          <StackPanel>
            <Path Data="{StaticResource IconPeople}" Fill="{StaticResource ColorBrushPeople}"/>

            <ItemsControl ItemsSource="{Binding Core.VM.MediaItem.Current.DisplayPeople}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Border Style="{StaticResource SBorderText}" Cursor="Hand">
                    <Border.InputBindings>
                      <MouseBinding
                        MouseAction="LeftClick"
                        Command="vm:ToolsTabsVM.OpenPersonTabCommand"
                        CommandParameter="{Binding}"/>
                    </Border.InputBindings>

                    <TextBlock Text="{Binding Name}" Style="{StaticResource STextBlock}"/>
                  </Border>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </StackPanel>
        </Border>

        <!-- Keywords -->
        <Border
          x:Name="boKeywords"
          Style="{StaticResource _infoGroup}"
          Visibility="Collapsed">

          <StackPanel>
            <Path Data="{StaticResource IconTag}" Fill="{StaticResource ColorBrushTag}"/>
            <ItemsControl ItemsSource="{Binding Core.VM.MediaItem.Current.DisplayKeywords}"/>
          </StackPanel>
        </Border>

        <!-- Comment -->
        <Border
          x:Name="boComment"
          Style="{StaticResource _infoGroup}"
          Visibility="Collapsed">

          <StackPanel>
            <Path Data="{StaticResource IconNotification}"/>

            <Border>
              <TextBlock Text="{Binding Core.VM.MediaItem.Current.Comment}"/>
            </Border>
          </StackPanel>
        </Border>

      </WrapPanel>
    </Grid>

    <DataTemplate.Triggers>
      <!--TODO store PositionSlashCount just in one location-->
      <DataTrigger Binding="{Binding Core.VM.MediaViewer.IsVisible}" Value="True">
        <Setter
          TargetName="tbPositionSlashCount"
          Property="Text"
          Value="{Binding Core.VM.MediaViewer.PositionSlashCount}"/>
      </DataTrigger>

      <DataTrigger Binding="{Binding Core.VM.MediaItem.CurrentGeoName, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True">
        <Setter TargetName="boGeoName" Property="Visibility" Value="Visible"/>
      </DataTrigger>

      <DataTrigger Binding="{Binding Core.VM.MediaItem.Current.DisplayPeople, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True">
        <Setter TargetName="boPeople" Property="Visibility" Value="Visible"/>
      </DataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Core.VM.MediaViewer.IsVisible}" Value="True"/>
          <Condition Binding="{Binding Core.VM.MediaItem.Current.DisplayKeywords, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="boKeywords" Property="Visibility" Value="Visible"/>
      </MultiDataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Core.VM.MediaViewer.IsVisible}" Value="True"/>
          <Condition Binding="{Binding Core.VM.MediaItem.Current.Comment, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="boComment" Property="Visibility" Value="Visible"/>
      </MultiDataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
</ResourceDictionary>