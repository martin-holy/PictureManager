<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:m="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:pm="clr-namespace:PictureManager">

  <!--TODO remove static source to pm:App.Ui-->

  <DataTemplate DataType="{x:Type m:SegmentRectM}">
    <Border
      x:Name="Root"
      MinWidth="{Binding Size}"
      MinHeight="{Binding Size}"
      Background="Transparent"
      ToolTipService.InitialShowDelay="0"
      Effect="{StaticResource Res_ShadowEffect}"
      HorizontalAlignment="Left"
      VerticalAlignment="Top">

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="PreviewMouseDown">
          <b:InvokeCommandAction
            Command="{Binding SegmentsVM.SegmentsRectsVM.SetCurrentCommand,
                      Source={x:Static pm:App.Ui}}"
            PassEventArgsToCommand="True" />
        </b:EventTrigger>
      </b:Interaction.Triggers>
      
      <Border.Style>
        <Style TargetType="{x:Type Border}">
          
          <Setter Property="RenderTransform">
            <Setter.Value>
              <TranslateTransform
                X="{Binding X}"
                Y="{Binding Y}" />
            </Setter.Value>
          </Setter>
          
          <Setter
            Property="BorderBrush"
            Value="White" />
          <Setter
            Property="BorderThickness"
            Value="1" />
          <Setter
            Property="ToolTip"
            Value="{Binding Segment.Person.Name}" />

          <Style.Triggers>
            
            <DataTrigger
              Binding="{Binding Segment.IsSelected}"
              Value="True">

              <Setter
                Property="BorderBrush"
                Value="LimeGreen" />
            </DataTrigger>
            
            <DataTrigger
              Binding="{Binding IsMouseOver, ElementName=Root}"
              Value="True">

              <Setter
                Property="BorderThickness"
                Value="2" />
            </DataTrigger>
            
            <DataTrigger
              Binding="{Binding Segment.Person}"
              Value="{x:Null}">

              <Setter
                Property="ToolTip"
                Value="0" />
            </DataTrigger>

          </Style.Triggers>
         </Style>
       </Border.Style>
      
      <Grid>
        <!-- Resize Border -->
        <Border
          x:Name="ResizeBorder"
          BorderThickness="5"
          BorderBrush="Transparent"
          Cursor="SizeAll" />
        
        <!-- Move Point and Delete -->
        <Grid Margin="0,2,0,0">

          <Grid.Style>
            <Style TargetType="{x:Type Grid}">
              
              <Setter
                Property="Visibility"
                Value="Collapsed" />

              <Style.Triggers>
                <MultiDataTrigger>

                  <MultiDataTrigger.Conditions>
                    <Condition
                      Binding="{Binding SegmentsVM.SegmentsRectsVM.SegmentsRectsM.IsEditOn,
                                Source={x:Static pm:App.Ui}}"
                      Value="False" />
                    <Condition
                      Binding="{Binding IsMouseOver,
                                RelativeSource={RelativeSource AncestorType={x:Type Border}}}"
                      Value="True" />
                  </MultiDataTrigger.Conditions>

                  <Setter
                    Property="Visibility"
                    Value="Visible" />
                </MultiDataTrigger>
              </Style.Triggers>

            </Style>
          </Grid.Style>
          
          <!-- Move Point -->
          <mhc:Icon
            x:Name="MovePoint"
            Size="12"
            Source="{StaticResource IconDot}"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Cursor="SizeAll" />

          <!-- Delete Segment -->
          <mhc:IconButton
            x:Name="BtnDelete"
            Source="{StaticResource IconXCross}"
            Size="10"
            VerticalAlignment="Top"
            HorizontalAlignment="Right"
            ToolTip="Delete"
            Margin="2,0"
            Command="{Binding SegmentsVM.SegmentsRectsVM.DeleteCommand,
                      Source={x:Static pm:App.Ui}}"
            CommandParameter="{Binding}"/>
        </Grid>

      </Grid>

    </Border>

  </DataTemplate>

</ResourceDictionary>