<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mim="clr-namespace:PictureManager.Domain.Models.MediaItems;assembly=PictureManager.Domain"
  xmlns:res="clr-namespace:MH.UI.WPF.Resources;assembly=MH.UI.WPF"
  xmlns:mhubc="clr-namespace:MH.Utils.BaseClasses;assembly=MH.Utils"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:mhConv="clr-namespace:MH.UI.WPF.Converters;assembly=MH.UI.WPF">

  <DataTemplate x:Key="MediaItemsFilterV" DataType="{x:Type mim:MediaItemsFilterM}">
    <DataTemplate.Resources>
      <ItemsPanelTemplate x:Key="panelTempalte">
        <StackPanel/>
      </ItemsPanelTemplate>

      <DataTemplate DataType="{x:Type mhubc:TreeItem}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>

          <Path
            Style="{StaticResource MH.Styles.Icon}"
            Data="{Binding Icon,
                   Converter={x:Static mhConv:ResourceConverter.Inst}}"
            Fill="{Binding Icon,
                   Converter={x:Static mhConv:ResourceConverter.Inst},
                   ConverterParameter={x:Static res:Dictionaries.IconToBrush}}"/>

          <TextBlock
            Grid.Column="1"
            Text="{Binding Name}"
            VerticalAlignment="Center"
            Margin="5,0,0,0"
            FontSize="14"/>
        </Grid>
      </DataTemplate>

      <Style TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <Style>
              <Setter Property="Control.Margin" Value="5"/>
            </Style>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="andOrNotText" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Effect" Value="{StaticResource MH.Effects.DropShadow}"/>
      </Style>

      <Style x:Key="sizeTexts" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource MH.Control.Static.Text}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
      </Style>

      <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="5"/>
      </Style>
    </DataTemplate.Resources>

    <Grid x:Name="root" Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="MouseEnter">
          <b:ChangePropertyAction TargetName="popup" PropertyName="IsOpen" Value="True"/>
        </b:EventTrigger>

        <b:EventTrigger SourceName="popupBorder" EventName="MouseLeave">
          <b:ChangePropertyAction TargetName="popup" PropertyName="IsOpen" Value="False"/>
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <Popup
        x:Name="popup"
        Placement="Bottom"
        PlacementTarget="{Binding ElementName=root}"
        StaysOpen="False">
        
        <Border
          x:Name="popupBorder"
          BorderThickness="1"
          SnapsToDevicePixels="True"
          BorderBrush="{StaticResource MH.Brushes.Accent}"
          Background="{StaticResource ColorBrushBackground}">
          
          <DockPanel>
            <!-- Media Types and Clear -->
            <Grid DockPanel.Dock="Bottom">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>

              <ToggleButton IsChecked="{Binding ShowImages}">
                <DockPanel>
                  <Path
                    Style="{StaticResource MH.Styles.Icon}"
                    Effect="{StaticResource MH.Effects.DropShadow}"
                    Data="{StaticResource IconImage}"
                    DockPanel.Dock="Left"/>

                  <ContentPresenter Content="Image" Margin="5,0,0,0"/>
                </DockPanel>
              </ToggleButton>

              <ToggleButton Grid.Column="1" IsChecked="{Binding ShowVideos}">
                <DockPanel>
                  <Path
                    Style="{StaticResource MH.Styles.Icon}"
                    Effect="{StaticResource MH.Effects.DropShadow}"
                    Data="{StaticResource IconMovieClapper}"
                    DockPanel.Dock="Left"
                    Margin="0,0,5,0"/>

                  <ContentPresenter Content="Video" Margin="5,0,0,0"/>
                </DockPanel>
              </ToggleButton>

              <Button
                Grid.Column="2"
                Width="60"
                Height="30"
                Margin="5"
                HorizontalAlignment="Right"
                Content="Clear"
                Command="{Binding ClearCommand}"/>
            </Grid>

            <Grid MinWidth="300" Margin="4">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <!-- And - Or - Not -->
              <UniformGrid Grid.ColumnSpan="2" Columns="3" Margin="0,2">
                <DockPanel>
                  <Border
                    DockPanel.Dock="Top"
                    Margin="2,0"
                    Background="{StaticResource DisplayFilterAndBrush}">

                    <TextBlock Text="And" Style="{StaticResource andOrNotText}"/>
                  </Border>

                  <ItemsControl
                    ItemsSource="{Binding FilterAnd}"
                    ItemsPanel="{StaticResource panelTempalte}"/>
                </DockPanel>

                <DockPanel>
                  <Border
                    DockPanel.Dock="Top"
                    Margin="2,0"
                    Background="{StaticResource DisplayFilterOrBrush}">

                    <TextBlock Text="Or" Style="{StaticResource andOrNotText}"/>
                  </Border>

                  <ItemsControl
                    ItemsSource="{Binding FilterOr}"
                    ItemsPanel="{StaticResource panelTempalte}"/>
                </DockPanel>

                <DockPanel>
                  <Border
                    DockPanel.Dock="Top"
                    Margin="2,0"
                    Background="{StaticResource DisplayFilterNotBrush}">

                    <TextBlock Text="Not" Style="{StaticResource andOrNotText}"/>
                  </Border>

                  <ItemsControl
                    ItemsSource="{Binding FilterNot}"
                    ItemsPanel="{StaticResource panelTempalte}"/>
                </DockPanel>
              </UniformGrid>

              <!-- Height -->
              <TextBlock Grid.Row="1" Text="Height:" Style="{StaticResource sizeTexts}"/>

              <mhc:RangeSlider
                Grid.Row="1"
                Grid.Column="1"
                Height="40"
                Minimum="{Binding Height.Min}"
                Maximum="{Binding Height.Max}"
                Start="{Binding Height.Start}"
                End="{Binding Height.End}">

                <b:Interaction.Triggers>
                  <b:EventTrigger EventName="SelectionChangedEventHandler">
                    <b:InvokeCommandAction Command="{Binding SizeChangedCommand}"/>
                  </b:EventTrigger>
                </b:Interaction.Triggers>
              </mhc:RangeSlider>

              <!-- Width -->
              <TextBlock Grid.Row="2" Text="Width:" Style="{StaticResource sizeTexts}"/>
              <mhc:RangeSlider
                Grid.Row="2"
                Grid.Column="1"
                Height="40"
                Minimum="{Binding Width.Min}"
                Maximum="{Binding Width.Max}"
                Start="{Binding Width.Start}"
                End="{Binding Width.End}">

                <b:Interaction.Triggers>
                  <b:EventTrigger EventName="SelectionChangedEventHandler">
                    <b:InvokeCommandAction Command="{Binding SizeChangedCommand}"/>
                  </b:EventTrigger>
                </b:Interaction.Triggers>
              </mhc:RangeSlider>

              <!-- Size -->
              <TextBlock Grid.Row="3" Text="Size Mpx:" Style="{StaticResource sizeTexts}"/>
              <mhc:RangeSlider
                Grid.Row="3"
                Grid.Column="1"
                Minimum="{Binding Size.Min}"
                Maximum="{Binding Size.Max}"
                Start="{Binding Size.Start}"
                End="{Binding Size.End}"
                TickFrequency="0.1">

                <b:Interaction.Triggers>
                  <b:EventTrigger EventName="SelectionChangedEventHandler">
                    <b:InvokeCommandAction Command="{Binding SizeChangedCommand}"/>
                  </b:EventTrigger>
                </b:Interaction.Triggers>
              </mhc:RangeSlider>
            </Grid>
          </DockPanel>
        </Border>
      </Popup>

      <Path
        Style="{StaticResource MH.Styles.Icon}"
        Effect="{StaticResource MH.Effects.DropShadow}"
        Data="{StaticResource IconFilter}"
        Margin="2"/>

    </Grid>
  </DataTemplate>
</ResourceDictionary>