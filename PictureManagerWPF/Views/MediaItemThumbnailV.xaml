<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:pmd="clr-namespace:PictureManager.Domain;assembly=PictureManager.Domain"
  xmlns:sys="clr-namespace:System;assembly=System.Runtime"
  xmlns:m="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain"
  xmlns:vm="clr-namespace:PictureManager.ViewModels"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:wpfu="clr-namespace:MH.UI.WPF.Utils;assembly=MH.UI.WPF"
  xmlns:pmConv="clr-namespace:PictureManager.Converters">

  <DataTemplate DataType="{x:Type m:MediaItemM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
          <wpfu:CachedResourceDictionary Source="/MH.UI.WPF;component/Resources/EqualityConverterSigns.xaml"/>
        </ResourceDictionary.MergedDictionaries>

        <sys:Double x:Key="ThumbnailInfoMinSize">170.0</sys:Double>
      </ResourceDictionary>
    </DataTemplate.Resources>

    <Border
      x:Name="border"
      Width="{Binding ThumbWidth, Converter={pmConv:MediaItemThumbScaleConvertor}}"
      Height="{Binding ThumbHeight, Converter={pmConv:MediaItemThumbScaleConvertor}}"
      MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
      BorderThickness="2"
      BorderBrush="Black"
      Margin="1"
      ClipToBounds="True">

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="MouseEnter">
          <b:InvokeCommandAction
            Command="vm:MediaItemVideoPreviewVM.ShowVideoPreviewCommand"
            CommandParameter="{Binding ElementName=grid}"/>
        </b:EventTrigger>

        <b:EventTrigger EventName="MouseLeave">
          <b:InvokeCommandAction
            Command="vm:MediaItemVideoPreviewVM.HideVideoPreviewCommand"
            CommandParameter="{Binding ElementName=grid}"/>
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <Grid x:Name="grid">
        <!-- Thumbnail Image -->
        <Image
          Source="{Binding IsAsync=True, Converter={pmConv:MediaItemThumbSourceConverter}}"
          Stretch="Fill"/>

        <!-- Video over layer -->
        <ContentControl
          Content="&#xE29E;"
          FontFamily="Segoe UI Symbol"
          FontSize="20" 
          VerticalAlignment="Center"
          HorizontalAlignment="Center"
          Opacity="0.77"
          Visibility="{Binding MediaType, 
                       Converter={StaticResource AllToVisibilityConverter},
                       ConverterParameter={x:Static pmd:MediaType.Video}}"/>

        <!-- Video Clips over layer -->
        <Path
          Style="{StaticResource MH.Styles.Icon}"
          Data="{StaticResource IconImageMultiple}"
          Width="20"
          Height="20"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          Margin="5"
          Visibility="{Binding HasVideoClips, Converter={StaticResource AllToVisibilityConverter}}"/>

        <!-- Thumbnail Info Box -->
        <ItemsControl
          x:Name="info"
          ItemsSource="{Binding InfoBoxThumb}"
          Style="{StaticResource InfoBoxThumbStyle}"/>

        <!-- Selected over layer -->
        <Grid x:Name="selectedOverLayer" Visibility="Hidden">
          <Polygon
            Width="40"
            Height="40"
            Points="0,0 40,0 40,40"
            Stroke="Black"
            StrokeThickness="2"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Fill="{DynamicResource AccentColorBrush}"/>

          <Border
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderThickness="2"
            BorderBrush="Black"/>
        </Grid>

      </Grid>
    </Border>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding IsSelected}" Value="True">
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter TargetName="selectedOverLayer" Property="Visibility" Value="Visible"/>
      </DataTrigger>

      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <MultiBinding Converter="{StaticResource EqualityConverter}">
            <Binding Path="Width" ElementName="border"/>
            <Binding Source="{StaticResource SignLessThan}"/>
            <Binding Source="{StaticResource ThumbnailInfoMinSize}"/>
          </MultiBinding>
        </DataTrigger.Binding>
        <Setter TargetName="info" Property="Visibility" Value="Hidden"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
</ResourceDictionary>