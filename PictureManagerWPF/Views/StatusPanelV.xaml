<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:pm="clr-namespace:PictureManager"
  xmlns:pmd="clr-namespace:PictureManager.Domain;assembly=PictureManager.Domain"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:m="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain">

  <DataTemplate DataType="{x:Type m:StatusPanelM}">
    <Grid Background="#40000000">

      <Grid.InputBindings>
        <MouseBinding
          MouseAction="LeftClick"
          Command="{Binding PinCommand, RelativeSource=
                   {RelativeSource AncestorType={x:Type mhc:SlidePanel}}}"/>         
      </Grid.InputBindings>

      <WrapPanel
        VerticalAlignment="Bottom"
        Margin="0,2,0,1">

        <WrapPanel.Resources>
          <Style
            x:Key="_itemsControlStyle"
            TargetType="{x:Type ItemsControl}">

            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>

            <Setter Property="ItemTemplate">
              <Setter.Value>
                <DataTemplate>
                  <Border Style="{StaticResource SBorderText}">
                    <TextBlock
                      Text="{Binding}"
                      Style="{StaticResource STextBlock}"/>
                  </Border>
                </DataTemplate>
              </Setter.Value>
            </Setter>
          </Style>

          <Style
            x:Key="_infoGroup"
            TargetType="{x:Type Border}"
            BasedOn="{StaticResource SBorderGroup}">

            <Style.Resources>
              <Style TargetType="{x:Type StackPanel}">
                <Setter
                  Property="Orientation"
                  Value="Horizontal"/>
              </Style>

              <Style
                TargetType="{x:Type Border}"
                BasedOn="{StaticResource SBorderText}"/>

              <Style
                TargetType="{x:Type TextBlock}"
                BasedOn="{StaticResource STextBlock}"/>

              <Style
                TargetType="{x:Type ItemsControl}"
                BasedOn="{StaticResource _itemsControlStyle}"/>
            </Style.Resources>
          </Style>

          <Style TargetType="{x:Type Path}" BasedOn="{StaticResource MH.Styles.Icon}">
            <Setter Property="Effect" Value="{StaticResource MH.Effects.DropShadow}"/>
          </Style>
        </WrapPanel.Resources>

        <!-- PositionSlashCount / Selected / Modified -->
        <Border
          Style="{StaticResource _infoGroup}"
          DataContext="{x:Static pm:App.Ui}">

          <StackPanel Orientation="Horizontal">
            <Path Data="{StaticResource IconImageMultiple}"/>

            <!-- PositionSlashCount -->
            <!--TODO store PositionSlashCount just in one location-->
            <Border>
              <TextBlock>
                <TextBlock.Style>
                  <Style
                    TargetType="{x:Type TextBlock}"
                    BasedOn="{StaticResource STextBlock}">

                    <Setter
                      Property="Text"
                      Value="{Binding ThumbnailsGridsVM.Model.Current.PositionSlashCount}"/>
                    
                    <Style.Triggers>
                      <DataTrigger
                        Binding="{Binding MediaViewerVM.IsVisible}"
                        Value="True">
                        
                        <Setter
                          Property="Text"
                          Value="{Binding MediaViewerVM.PositionSlashCount}"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </Border>

            <!-- Selected -->
            <Border
              Background="#1181B1"
              Visibility="{Binding MediaViewerVM.IsVisible,
                           Converter={StaticResource AllToVisibilityConverter}, 
                           ConverterParameter={StaticResource False}}">
              <TextBlock Text="{Binding ThumbnailsGridsVM.Model.Current.SelectedCount}"/>
            </Border>

            <!-- Modified -->
            <Border
              Background="#CA5100" 
              Visibility="{Binding MediaItemsVM.Model.IsEditModeOn,
                           Converter={StaticResource AllToVisibilityConverter}}">
              <TextBlock Text="{Binding MediaItemsVM.Model.ModifiedItemsCount}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- Dimension -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding CurrentMediaItemM,
                       Converter={StaticResource AllToVisibilityConverter}}">
          <StackPanel>
            <Path Data="{StaticResource IconRuler}"/>

            <Border>
              <TextBlock>
                <TextBlock.Text>
                  <MultiBinding StringFormat="{}{0}x{1}">
                    <Binding Path="CurrentMediaItemM.Width"/>
                    <Binding Path="CurrentMediaItemM.Height"/>
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
            </Border>
          </StackPanel>
        </Border>

        <!-- File Size -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding FileSize,
                       Converter={StaticResource AllToVisibilityConverter}}">
          <StackPanel>
            <Path Data="{StaticResource IconPageUpload}"/>

            <Border>
              <TextBlock Text="{Binding FileSize}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- ImageActualZoom -->
        <Border>
          <Border.Style>
            <Style
              TargetType="{x:Type Border}"
              BasedOn="{StaticResource _infoGroup}">

              <Setter
                Property="Visibility"
                Value="Collapsed"/>

              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition
                      Binding="{Binding MediaViewerVM.IsVisible,
                                Source={x:Static pm:App.Ui}}"
                      Value="True"/>
                    <Condition
                      Binding="{Binding CurrentMediaItemM.MediaType}"
                      Value="{x:Static pmd:MediaType.Image}"/>
                  </MultiDataTrigger.Conditions>
                  
                  <Setter
                    Property="Visibility"
                    Value="Visible"/>
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>

          <StackPanel>
            <Path Data="{StaticResource IconMagnify}"/>

            <Border>
              <TextBlock Text="{Binding MediaViewerVM.FullImage.ActualZoom,
                                Source={x:Static pm:App.Ui},
                                StringFormat={}{0:####}%}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- Rating -->
        <Border
          Style="{StaticResource SBorderGroup}"
          Visibility="{Binding Rating.Count,
                       Converter={StaticResource AllToVisibilityConverter}}">
          <Border Margin="0">
            <ItemsControl ItemsSource="{Binding Rating}">

              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Path Data="{StaticResource IconStar}"/>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Border>
        </Border>

        <!-- GeoName -->
        <Border
          ToolTip="{Binding CurrentMediaItemM.GeoName.FullName}"
          Margin="2,2,0,0">

          <Border.Style>
            <Style
              TargetType="{x:Type Border}"
              BasedOn="{StaticResource SBorderGroup}">

              <Setter
                Property="Visibility"
                Value="Collapsed"/>

              <Style.Triggers>
                <DataTrigger
                  Binding="{Binding CurrentMediaItemM.GeoName,
                            Converter={StaticResource AllToBoolConverter}}"
                  Value="True">

                  <Setter
                    Property="Visibility"
                    Value="Visible"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>

          <Path Data="{StaticResource IconLocationCheckin}"/>
        </Border>

        <!-- FilePath -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding FilePath,
                       Converter={StaticResource AllToVisibilityConverter}}"
          ToolTip="{Binding CurrentMediaItemM.FilePath}">

          <StackPanel>
            <Path
              Data="{StaticResource IconFolder}"
              Fill="{StaticResource ColorBrushFolder}"/>

            <ItemsControl ItemsSource="{Binding FilePath}"/>
          </StackPanel>
        </Border>

        <!-- DateAndTime -->
        <Border
          Style="{StaticResource _infoGroup}"
          Visibility="{Binding DateAndTime,
                       Converter={StaticResource AllToVisibilityConverter}}">
          <StackPanel>
            <Path Data="{StaticResource IconCalendar}"/>

            <Border>
              <TextBlock Text="{Binding DateAndTime}"/>
            </Border>
          </StackPanel>
        </Border>

        <!-- People -->
        <Border>
          <Border.Style>
            <Style
              BasedOn="{StaticResource _infoGroup}"
              TargetType="{x:Type Border}">

              <Setter
                Property="Visibility"
                Value="Collapsed"/>

              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition
                      Binding="{Binding MediaViewerVM.IsVisible,
                                Source={x:Static pm:App.Ui}}"
                      Value="True"/>
                    <Condition
                      Binding="{Binding CurrentMediaItemM.InfoBoxPeople, 
                                Converter={StaticResource AllToBoolConverter}}"
                      Value="True"/>
                  </MultiDataTrigger.Conditions>

                  <Setter
                    Property="Visibility"
                    Value="Visible"/>
                </MultiDataTrigger>
              </Style.Triggers>
              
            </Style>
          </Border.Style>

          <StackPanel>
            <Path
              Data="{StaticResource IconPeople}"
              Fill="{StaticResource ColorBrushPeople}"/>

            <ItemsControl ItemsSource="{Binding CurrentMediaItemM.InfoBoxPeople}">
              
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Border
                    Style="{StaticResource SBorderText}"
                    Cursor="Hand">
                    
                    <Border.InputBindings>
                      <MouseBinding
                        MouseAction="LeftClick"
                        Command="{Binding PersonVM.SetPersonCommand,
                                  Source={x:Static pm:App.Ui}}"
                        CommandParameter="{Binding}"/>         
                    </Border.InputBindings>

                    <TextBlock
                      Text="{Binding Name}"
                      Style="{StaticResource STextBlock}"/>
                  </Border>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
              
            </ItemsControl>
          </StackPanel>
        </Border>

        <!-- Keywords -->
        <Border>
          <Border.Style>
            <Style
              BasedOn="{StaticResource _infoGroup}"
              TargetType="{x:Type Border}">

              <Setter
                Property="Visibility"
                Value="Collapsed"/>

              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition
                      Binding="{Binding MediaViewerVM.IsVisible,
                                Source={x:Static pm:App.Ui}}"
                      Value="True"/>
                    <Condition
                      Binding="{Binding CurrentMediaItemM.InfoBoxKeywords, 
                                Converter={StaticResource AllToBoolConverter}}"
                      Value="True"/>
                  </MultiDataTrigger.Conditions>

                  <Setter
                    Property="Visibility"
                    Value="Visible"/>
                </MultiDataTrigger>
              </Style.Triggers>
              
            </Style>
          </Border.Style>

          <StackPanel>
            <Path
              Data="{StaticResource IconTag}"
              Fill="{StaticResource ColorBrushTag}"/>

            <ItemsControl ItemsSource="{Binding CurrentMediaItemM.InfoBoxKeywords}"/>
          </StackPanel>
        </Border>

        <!-- Comment -->
        <Border>
          <Border.Style>
            <Style
              TargetType="{x:Type Border}"
              BasedOn="{StaticResource _infoGroup}">

              <Setter
                Property="Visibility"
                Value="Collapsed"/>

              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition
                      Binding="{Binding MediaViewerVM.IsVisible,
                                Source={x:Static pm:App.Ui}}"
                      Value="True"/>
                    <Condition
                      Binding="{Binding CurrentMediaItemM.Comment, 
                                Converter={StaticResource AllToBoolConverter}}"
                      Value="True"/>
                  </MultiDataTrigger.Conditions>
                  
                  <Setter
                    Property="Visibility"
                    Value="Visible"/>
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>

          <StackPanel>
            <Path Data="{StaticResource IconNotification}"/>

            <Border>
              <TextBlock Text="{Binding CurrentMediaItemM.Comment}"/>
            </Border>
          </StackPanel>
        </Border>

      </WrapPanel>
    </Grid>
  </DataTemplate>

</ResourceDictionary>