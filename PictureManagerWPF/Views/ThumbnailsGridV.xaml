<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:pm="clr-namespace:PictureManager"
  xmlns:vm="clr-namespace:PictureManager.ViewModels"
  xmlns:models="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF">
  
  <DataTemplate DataType="{x:Type vm:ThumbnailsGridVM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        
        <ResourceDictionary.MergedDictionaries>
          <ResourceDictionary Source="../ResourceDictionaries/CustomControlStyles/ItemsGroupV.xaml" />
        </ResourceDictionary.MergedDictionaries>
        
        <ContextMenu
          x:Key="ThumbnailsGridContextMenu"
          DataContext="{Binding ThumbnailsGridsVM.Current, Source={x:Static pm:App.Ui}}">
    
          <MenuItem
            Header="Group by Folders"
            IsCheckable="True"
            IsChecked="{Binding Model.GroupByFolders}"
            Command="{Binding Model.RefreshCommand}" />
          <MenuItem
            Header="Group by Date"
            IsCheckable="True"
            IsChecked="{Binding Model.GroupByDate}"
            Command="{Binding Model.RefreshCommand}" />
          <MenuItem
            Header="Sort by File first"
            IsCheckable="True"
            IsChecked="{Binding Model.SortByFileFirst}"
            Command="{Binding Model.RefreshCommand}" />
        </ContextMenu>
        
        <DataTemplate DataType="{x:Type models:MediaItemM}">
          <DataTemplate.Resources>
            <ResourceDictionary>
              <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MediaItemThumbnailV.xaml" />
              </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
          </DataTemplate.Resources>
    
          <ContentPresenter Content="{Binding}">
            <b:Interaction.Triggers>
              <b:EventTrigger EventName="MouseEnter">
                <b:InvokeCommandAction
                  Command="{Binding Path=Tag.(vm:ThumbnailsGridVM.ShowVideoPreviewCommand),
                            RelativeSource={RelativeSource AncestorType={x:Type mhc:TreeWrapView}}}"
                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" />
              </b:EventTrigger>

              <b:EventTrigger EventName="MouseLeave">
                <b:InvokeCommandAction
                  Command="{Binding Path=Tag.(vm:ThumbnailsGridVM.HideVideoPreviewCommand),
                            RelativeSource={RelativeSource AncestorType={x:Type mhc:TreeWrapView}}}"
                  CommandParameter="{Binding}" />
              </b:EventTrigger>

              <b:EventTrigger EventName="PreviewMouseUp">
                <b:InvokeCommandAction
                  Command="{Binding Path=Tag.(vm:ThumbnailsGridVM.SelectMediaItemCommand),
                            RelativeSource={RelativeSource AncestorType={x:Type mhc:TreeWrapView}}}"
                  PassEventArgsToCommand="True" />
              </b:EventTrigger>

              <b:EventTrigger EventName="MouseLeftButtonDown">
                <b:InvokeCommandAction
                  Command="{Binding Path=Tag.(vm:ThumbnailsGridVM.OpenMediaItemCommand),
                            RelativeSource={RelativeSource AncestorType={x:Type mhc:TreeWrapView}}}"
                  PassEventArgsToCommand="True" />
              </b:EventTrigger>
            </b:Interaction.Triggers>
          </ContentPresenter>
        </DataTemplate>
        
      </ResourceDictionary>
    </DataTemplate.Resources>

    <mhc:TreeWrapView
      ItemWidthGetter="{Binding Model.ItemWidthGetter}"
      Root="{Binding Model.FilteredRoot}"
      ScrollToItem="{Binding Model.ScrollToItem, Mode=TwoWay}"
      ReloadAutoScroll="False"
      ScrollViewerSpeedFactor="2.5"
      Tag="{Binding}">

      <mhc:TreeWrapView.InputBindings>
        <KeyBinding
          Modifiers="Control"
          Key="A"
          Command="{Binding Model.SelectAllCommand}" />
        <KeyBinding
          Modifiers="Control"
          Key="R"
          Command="{Binding MediaItemsM.RotateCommand,
                    Source={x:Static pm:App.Core}}" />
        <KeyBinding
          Key="F2"
          Command="{Binding MediaItemsM.RenameCommand,
                    Source={x:Static pm:App.Core}}" />
        <KeyBinding
          Key="Delete"
          Command="{Binding MediaItemsVM.DeleteCommand,
                    Source={x:Static pm:App.Ui}}" />
        <KeyBinding
          Modifiers="Control"
          Key="K"
          Command="{Binding MediaItemsM.CommentCommand,
                    Source={x:Static pm:App.Core}}" />
      </mhc:TreeWrapView.InputBindings>

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="PreviewMouseWheel">
          <b:InvokeCommandAction
            Command="{Binding ZoomCommand}"
            PassEventArgsToCommand="True" />
        </b:EventTrigger>

        <b:EventTrigger EventName="Loaded">
          <b:InvokeCommandAction
              Command="{Binding PanelLoadedCommand}"
              PassEventArgsToCommand="True" />
        </b:EventTrigger>

        <b:EventTrigger EventName="SizeChanged">
          <b:InvokeCommandAction
            Command="{Binding PanelSizeChangedCommand}"
            PassEventArgsToCommand="True" />
        </b:EventTrigger>
      </b:Interaction.Triggers>
    </mhc:TreeWrapView>

  </DataTemplate>
    
</ResourceDictionary>