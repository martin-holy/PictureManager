<controls:MetroWindow x:Class="PictureManager.WMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:pm="clr-namespace:PictureManager"
        xmlns:uc="clr-namespace:PictureManager.UserControls"
        xmlns:cmd="clr-namespace:PictureManager.Commands"
        xmlns:pmd="clr-namespace:PictureManager.Domain;assembly=PictureManager.Domain"
        xmlns:cc="clr-namespace:PictureManager.CustomControls"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Picture Manager" TitleAlignment="Center" Height="550" Width="930" WindowState="Maximized" 
        Loaded="Window_Loaded" FontSize="13.333" SaveWindowPosition="True" TitleCharacterCasing="Normal"
        LeftWindowCommandsOverlayBehavior="Never" Closing="WMain_OnClosing"
        SizeChanged="WMain_OnSizeChanged">

  <controls:MetroWindow.TitleTemplate>
    <DataTemplate>
      <Grid>
        <StackPanel Orientation="Vertical">
          <ProgressBar Width="250" Height="11" Maximum="100" DataContext="{x:Static pm:App.Core}" 
                       Value="{Binding AppInfo.ProgressBarValueA}" BorderThickness="1,1,1,0"
                       IsIndeterminate="{Binding AppInfo.ProgressBarIsIndeterminate}" />
          <ProgressBar Width="250" Height="11" Maximum="100" DataContext="{x:Static pm:App.Core}" 
                       Value="{Binding AppInfo.ProgressBarValueB}" BorderThickness="1,0,1,1"
                       IsIndeterminate="{Binding AppInfo.ProgressBarIsIndeterminate}" />
        </StackPanel>
        <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Margin="8 -1 8 0" FontWeight="Bold" FontSize="{DynamicResource WindowTitleFontSize}"
                   FontFamily="{DynamicResource HeaderFontFamily}" />
      </Grid>
    </DataTemplate>
  </controls:MetroWindow.TitleTemplate>

  <controls:MetroWindow.LeftWindowCommands>
    <controls:WindowCommands>
      <Menu x:Name="MainMenu" Background="Transparent">
        <Menu.Resources>
          <cc:IconRect x:Key="EyeIcon" x:Shared="False" IconName="{x:Static pmd:IconName.Eye}" />
        </Menu.Resources>

        <MenuItem Header="Tools" Style="{StaticResource StyleMenuItemRoot}">
          <MenuItem Command="cmd:WindowCommands.OpenFolderKeywordsListCommand" />
          <MenuItem Command="cmd:WindowCommands.OpenSettingsCommand">
            <MenuItem.Icon>
              <cc:IconRect IconName="{x:Static pmd:IconName.Settings}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Command="cmd:WindowCommands.AddGeoNamesFromFilesCommand">
            <MenuItem.Icon>
              <cc:IconRect IconName="{x:Static pmd:IconName.LocationCheckin}" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Command="cmd:WindowCommands.TestButtonCommand" />
        </MenuItem>
        <MenuItem Header="Media Items" Style="{StaticResource StyleMenuItemRoot}">
          <MenuItem Command="cmd:MediaItemsCommands.CompressCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.RebuildThumbnailsCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.RotateCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.SelectNotModifiedCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.ShuffleCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.ResizeImagesCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.ImagesToVideoCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.CopyPathsCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.CompareCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.RenameCommand" />
        </MenuItem>
        <MenuItem Header="Metadata" Style="{StaticResource StyleMenuItemRoot}">
          <MenuItem Command="cmd:MetadataCommands.EditCommand">
            <MenuItem.Icon>
              <cc:IconRect IconName="{x:Static pmd:IconName.Edit}" />
            </MenuItem.Icon>
          </MenuItem>
            <MenuItem Command="cmd:MetadataCommands.SaveCommand">
              <MenuItem.Icon>
                <cc:IconRect IconName="{x:Static pmd:IconName.Save}" />
              </MenuItem.Icon>
            </MenuItem>
          <MenuItem Command="cmd:MetadataCommands.CancelCommand">
            <MenuItem.Icon>
              <cc:IconRect IconName="{x:Static pmd:IconName.Cancel}" />
            </MenuItem.Icon>
          </MenuItem>
            <MenuItem Command="cmd:MetadataCommands.CommentCommand">
              <MenuItem.Icon>
                <cc:IconRect IconName="{x:Static pmd:IconName.Notification}" />
              </MenuItem.Icon>
            </MenuItem>
          <MenuItem Command="cmd:MetadataCommands.ReloadCommand" />
        </MenuItem>
        <MenuItem Header="Viewer" x:Name="MenuViewers" Style="{StaticResource StyleMenuItemRoot}" Icon="{StaticResource EyeIcon}"
                  ItemsSource="{Binding Model.Viewers.Items, Source={x:Static pm:App.Core}}"
                  Visibility="{Binding Model.Viewers.Items.Count, Source={x:Static pm:App.Core}, Converter={StaticResource AllToVisibilityConverter}}">
          <MenuItem.ItemContainerStyle>
            <Style TargetType="MenuItem" BasedOn="{StaticResource StyleBaseMenuItem}">
              <Setter Property="Header" Value="{Binding Title}" />
              <Setter Property="Command" Value="cmd:WindowCommands.ViewerChangeCommand" />
              <Setter Property="CommandParameter" Value="{Binding}" />
              <Setter Property="Icon" Value="{StaticResource EyeIcon}" />
            </Style>
          </MenuItem.ItemContainerStyle>
        </MenuItem>
        <MenuItem Command="cmd:WindowCommands.OpenAboutCommand" Style="{StaticResource StyleMenuItemRoot}" />
      </Menu>

      <!-- Media Items Count -->
      <TextBlock Text="{Binding Model.MediaItems.MediaItemsCount, Source={x:Static pm:App.Core}}" VerticalAlignment="Center" Margin="5,0" />
      
      <!-- Filters Panel -->
      <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,2,2,0" DataContext="{x:Static pm:App.Core}"
                  ToolTip="Clear filters" Cursor="Hand" PreviewMouseLeftButtonUp="FiltersPanel_ClearFilters">
        <!-- And -->
        <Border Background="#8EC163" Style="{StaticResource SBorderActiveFilter}">
          <Label Content="{Binding AppInfo.FilterAndCount}" Style="{StaticResource SShadowLabel}" />
        </Border>

        <!-- Or -->
        <Border Background="#1585B5" Style="{StaticResource SBorderActiveFilter}">
          <Label Content="{Binding AppInfo.FilterOrCount}" Style="{StaticResource SShadowLabel}" />
        </Border>

        <!-- Hidden -->
        <Border Background="#DE573A" Style="{StaticResource SBorderActiveFilter}">
          <Label Content="{Binding AppInfo.FilterHiddenCount}" Style="{StaticResource SShadowLabel}" />
        </Border>
      </StackPanel>

      <!-- Media Types -->
      <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
        <ToggleButton Style="{StaticResource StyleToggleButtonIconFlat}" ToolTip="Image" Click="OnMediaTypesChanged"
                      IsChecked="{Binding Model.MediaItems.ThumbsGrid.ShowImages, Source={x:Static pm:App.Core}}">
          <cc:IconRect IconName="{x:Static pmd:IconName.Image}" />
        </ToggleButton>
        <ToggleButton Style="{StaticResource StyleToggleButtonIconFlat}" ToolTip="Video" Click="OnMediaTypesChanged"
                      IsChecked="{Binding Model.MediaItems.ThumbsGrid.ShowVideos, Source={x:Static pm:App.Core}}">
          <cc:IconRect IconName="{x:Static pmd:IconName.MovieClapper}" />
        </ToggleButton>
      </StackPanel>

      <!-- Log Button -->
      <Button Background="Red" Command="cmd:WindowCommands.OpenLogCommand" Height="24" Margin="2,0,2,0"
        Visibility="{Binding Log.Count, Source={x:Static pm:App.Core}, Converter={StaticResource AllToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="Log " />
          <TextBlock Text="{Binding Log.Count, Source={x:Static pm:App.Core}}" />
        </StackPanel>
      </Button>

    </controls:WindowCommands>
  </controls:MetroWindow.LeftWindowCommands>

  <controls:MetroWindow.RightWindowCommands>
    <controls:WindowCommands>
      <cc:ImageComparer x:Name="ImageComparerTool" Visibility="Collapsed" />
    </controls:WindowCommands>
  </controls:MetroWindow.RightWindowCommands>

  <Grid>
    <cc:SlidePanelsGrid x:Name="MainSlidePanelsGrid">
      <cc:SlidePanelsGrid.ContentLeft>
        <cc:SlidePanel IsOpen="True" IsPinned="True" Position="Left" Width="380" x:Name="SlidePanelMainTreeView">
          <cc:SlidePanel.Content>
            <uc:TreeViewCategories x:Name="TreeViewCategories" Background="{StaticResource ColorBrushBackground}" />
          </cc:SlidePanel.Content>
        </cc:SlidePanel>
      </cc:SlidePanelsGrid.ContentLeft>

      <cc:SlidePanelsGrid.ContentMiddle>
        <Grid x:Name="GridMain" Margin="0" DataContext="{x:Static pm:App.Core}">
          <!-- Thumbnails Grids -->
          <TabControl x:Name="TabThumbnailsGrids" Background="Transparent" BorderThickness="0" TabStripPlacement="Left"
                      SelectionChanged="TabThumbnailsGrids_OnSelectionChanged"
                      Visibility="{Binding AppInfo.AppMode, Source={x:Static pm:App.Core},
                                           Converter={StaticResource AllToVisibilityConverter}, 
                                           ConverterParameter={x:Static pm:AppMode.Browser}}">

            <!-- When are TabItems created thru binding, ScrollViewer is shared between TabItems! -->

            <TabControl.Resources>
              <DataTemplate x:Key="ThumbsTabItemTemplate">
                <StackPanel Orientation="Vertical" MaxHeight="200" ToolTip="{Binding Title}"
                            DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}">
                  <Button Style="{StaticResource StyleButtonFontSymbol}" Content="✚" Click="TabThumbnailsGrids_AddTab"
                          Visibility="{Binding ShowAddTabButton, Converter={StaticResource AllToVisibilityConverter}}"  />
                  <Button Style="{StaticResource StyleButtonFontSymbol}" Content="✖" Click="TabThumbnailsGrids_CloseTab" />
                  <TextBlock Text="{Binding Title}" Margin="0,8">
                    <TextBlock.LayoutTransform>
                      <RotateTransform Angle="270" />
                    </TextBlock.LayoutTransform>
                  </TextBlock>
                </StackPanel>
              </DataTemplate>
            </TabControl.Resources>

          </TabControl>

          <!-- Full Media -->
          <Grid x:Name="PanelFullScreen" Background="Transparent"
              MouseLeftButtonDown="PanelFullScreen_OnMouseLeftButtonDown" MouseWheel="PanelFullScreen_OnMouseWheel"
              Visibility="{Binding AppInfo.AppMode, 
                Converter={StaticResource AllToVisibilityConverter}, 
                ConverterParameter={x:Static pm:AppMode.Viewer}}">

            <!-- Full Media Image -->
            <Grid Visibility="{Binding Model.MediaItems.ThumbsGrid.Current.MediaType, 
                Converter={StaticResource AllToVisibilityConverter}, 
                ConverterParameter={x:Static pmd:MediaType.Image}}">

              <cc:ZoomImageBox x:Name="FullImage" DataContext="{x:Static pm:App.Core}" />

              <!-- Presentation Panel -->
              <uc:PresentationPanel x:Name="PresentationPanel" />
            </Grid>

            <!-- Full Media Video -->
            <cc:VideoPlayer x:Name="FullMedia"
                  Visibility="{Binding Model.MediaItems.ThumbsGrid.Current.MediaType,
                  Source={x:Static pm:App.Core},
                  Converter={StaticResource AllToVisibilityConverter}, 
                  ConverterParameter={x:Static pmd:MediaType.Video}}" />
          </Grid>
        </Grid>
      </cc:SlidePanelsGrid.ContentMiddle>
    </cc:SlidePanelsGrid>

    <!-- Status Panel -->
    <uc:StatusPanel x:Name="StatusPanel" VerticalContentAlignment="Bottom" MouseWheel="PanelFullScreen_OnMouseWheel" />
  </Grid>
  
</controls:MetroWindow>
