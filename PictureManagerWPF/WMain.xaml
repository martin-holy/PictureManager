<controls:MetroWindow x:Class="PictureManager.WMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:pm="clr-namespace:PictureManager"
        xmlns:uc="clr-namespace:PictureManager.UserControls"
        xmlns:cmd="clr-namespace:PictureManager.Commands"
        xmlns:pmd="clr-namespace:PictureManager.Domain;assembly=PictureManager.Domain"
        xmlns:models="clr-namespace:PictureManager.Domain.Models;assembly=PictureManager.Domain"
        xmlns:cc="clr-namespace:PictureManager.CustomControls"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Picture Manager" TitleAlignment="Center" Height="550" Width="930" WindowState="Maximized" 
        Loaded="Window_Loaded" FontSize="13.333" SaveWindowPosition="True" TitleCharacterCasing="Normal"
        LeftWindowCommandsOverlayBehavior="Never" MouseMove="WMain_OnMouseMove" Closing="WMain_OnClosing"
        MouseLeftButtonUp="WMain_OnMouseLeftButtonUp" SizeChanged="WMain_OnSizeChanged">

  <controls:MetroWindow.TitleTemplate>
    <DataTemplate>
      <Grid>
        <StackPanel Orientation="Vertical">
          <ProgressBar Width="250" Height="11" Maximum="100" DataContext="{x:Static pm:App.Core}" 
                       Value="{Binding AppInfo.ProgressBarValueA}" BorderThickness="1,1,1,0"
                       IsIndeterminate="{Binding AppInfo.ProgressBarIsIndeterminate}" />
          <ProgressBar Width="250" Height="11" Maximum="100" DataContext="{x:Static pm:App.Core}" 
                       Value="{Binding AppInfo.ProgressBarValueB}" BorderThickness="1,0,1,1"
                       IsIndeterminate="{Binding AppInfo.ProgressBarIsIndeterminate}" />
        </StackPanel>
        <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Margin="8 -1 8 0" FontWeight="Bold" FontSize="{DynamicResource WindowTitleFontSize}"
                   FontFamily="{DynamicResource HeaderFontFamily}" />
      </Grid>
    </DataTemplate>
  </controls:MetroWindow.TitleTemplate>

  <controls:MetroWindow.LeftWindowCommands>
    <controls:WindowCommands>
      <Menu x:Name="MainMenu" Background="Transparent">
        <MenuItem Header="Tools" Style="{StaticResource RootMenuStyle}">
          <MenuItem Command="cmd:WindowCommands.OpenFolderKeywordsListCommand" />
          <MenuItem Command="cmd:WindowCommands.OpenSettingsCommand" Tag="{x:Static pmd:IconName.Settings}" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="cmd:WindowCommands.AddGeoNamesFromFilesCommand" Tag="{x:Static pmd:IconName.LocationCheckin}" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="cmd:WindowCommands.TestButtonCommand" />
        </MenuItem>
        <MenuItem Header="Media Items" Style="{StaticResource RootMenuStyle}">
          <MenuItem Command="cmd:MediaItemsCommands.CompressCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.RebuildThumbnailsCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.RotateCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.SelectNotModifiedCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.ShuffleCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.ResizeImagesCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.ImagesToVideoCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.CopyPathsCommand" />
          <MenuItem Command="cmd:MediaItemsCommands.CompareCommand" />
        </MenuItem>
        <MenuItem Header="Metadata" Style="{StaticResource RootMenuStyle}">
          <MenuItem Command="cmd:MetadataCommands.EditCommand" Tag="{x:Static pmd:IconName.Edit}" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="cmd:MetadataCommands.SaveCommand" Tag="{x:Static pmd:IconName.Save}" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="cmd:MetadataCommands.CancelCommand" Tag="{x:Static pmd:IconName.Cancel}" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="cmd:MetadataCommands.CommentCommand" Tag="{x:Static pmd:IconName.Notification}" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="cmd:MetadataCommands.ReloadCommand" />
        </MenuItem>
        <MenuItem Header="Viewer" x:Name="MenuViewers" Tag="{x:Static pmd:IconName.Eye}" Style="{StaticResource RootMenuStyle}" 
                  Icon="{StaticResource MenuItemIconRect}" ItemsSource="{Binding Model.Viewers.Items, Source={x:Static pm:App.Core}}"
                  Visibility="{Binding Model.Viewers.Items.Count, Source={x:Static pm:App.Core}, Converter={StaticResource AllToVisibilityConverter}}">
          <MenuItem.ItemContainerStyle>
            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemIcon}">
              <Setter Property="Header" Value="{Binding Title}" />
              <Setter Property="Tag" Value="{x:Static pmd:IconName.Eye}" />
              <Setter Property="Command" Value="cmd:WindowCommands.ViewerChangeCommand" />
              <Setter Property="CommandParameter" Value="{Binding}" />
            </Style>
          </MenuItem.ItemContainerStyle>
        </MenuItem>
        <MenuItem Command="cmd:WindowCommands.OpenAboutCommand" Style="{StaticResource RootMenuStyle}" />
      </Menu>

      <!-- Media Items Count -->
      <TextBlock Text="{Binding Model.MediaItems.MediaItemsCount, Source={x:Static pm:App.Core}}" VerticalAlignment="Center" Margin="5,0" />
      
      <!-- Filters Panel -->
      <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,2,2,0" DataContext="{x:Static pm:App.Core}"
                  ToolTip="Clear filters" Cursor="Hand" PreviewMouseLeftButtonUp="FiltersPanel_ClearFilters">
        <!-- And -->
        <Border Background="#8EC163" Style="{StaticResource SBorderActiveFilter}">
          <Label Content="{Binding AppInfo.FilterAndCount}" Style="{StaticResource SShadowLabel}" />
        </Border>

        <!-- Or -->
        <Border Background="#1585B5" Style="{StaticResource SBorderActiveFilter}">
          <Label Content="{Binding AppInfo.FilterOrCount}" Style="{StaticResource SShadowLabel}" />
        </Border>

        <!-- Hidden -->
        <Border Background="#DE573A" Style="{StaticResource SBorderActiveFilter}">
          <Label Content="{Binding AppInfo.FilterHiddenCount}" Style="{StaticResource SShadowLabel}" />
        </Border>
      </StackPanel>

      <!-- Log Button -->
      <Button Background="Red" Command="cmd:WindowCommands.OpenLogCommand" Height="24" Margin="2,0,2,0"
        Visibility="{Binding Log.Count, Source={x:Static pm:App.Core}, Converter={StaticResource AllToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="Log " />
          <TextBlock Text="{Binding Log.Count, Source={x:Static pm:App.Core}}" />
        </StackPanel>
      </Button>

    </controls:WindowCommands>
  </controls:MetroWindow.LeftWindowCommands>

  <controls:MetroWindow.RightWindowCommands>
    <controls:WindowCommands>
      <cc:ImageComparer x:Name="ImageComparerTool" Visibility="Collapsed" />
    </controls:WindowCommands>
  </controls:MetroWindow.RightWindowCommands>

  <controls:MetroWindow.Resources>
    <ItemsPanelTemplate x:Key="IptHorizontalStackPanel">
      <StackPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>
  </controls:MetroWindow.Resources>

  <controls:MetroWindow.Flyouts>
    <controls:FlyoutsControl>
      <!-- TabControl with TreeView Folders, Keywords and Viewers -->
      <controls:Flyout x:Name="FlyoutMainTreeView" Position="Left" Width="350" IsOpen="True" IsPinned="True" 
        Background="#FF252525" Margin="{Binding FlyoutMainTreeViewMargin}"
        TitleVisibility="Collapsed" CloseButtonVisibility="Collapsed" MouseLeave="FlyoutMainTreeView_OnMouseLeave">

        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <DockPanel Grid.Row="0" Height="50">
            <!-- TreeView Categories Navigation Bar -->
            <ItemsControl ItemsSource="{Binding Model.TreeViewCategories, Source={x:Static pm:App.Core}}" DockPanel.Dock="Left">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button Margin="2,2,0,0" BorderThickness="0" Background="Transparent" 
                          Width="32" Height="32" Cursor="{x:Static Cursors.Hand}"
                          ToolTip="{Binding Title}" Click="BtnNavCategory_OnClick">
                    <cc:IconRect IconName="{Binding IconName}" Size="22" />
                  </Button>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Button to close/open flyout panel -->
            <Button BorderThickness="0" Background="Transparent" Width="24" Height="24" DockPanel.Dock="Right"
                    HorizontalAlignment="Right" Margin="0,0,2,0"
                    Cursor="{x:Static Cursors.Hand}" Command="{x:Static cmd:WindowCommands.ShowHideTabMainCommand}">
              <cc:IconRect IconName="{x:Static pmd:IconName.Pin}" Size="12" />
            </Button>
          </DockPanel>
          
          <!-- TreeView Categories -->
          <TreeView x:Name="TvCategories" Grid.Row="1" Background="Transparent" FocusManager.IsFocusScope="True"
                      ItemsSource="{Binding Model.TreeViewCategories, Source={x:Static pm:App.Core}}"
                      SelectedItemChanged="TvCategories_OnSelectedItemChanged">

            <TreeView.Resources>
              <!-- KeywordsPicCountStyle -->
              <Style x:Key="KeywordsPicCountStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Text" Value="{Binding PicCount}" />
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5,0,0,0" />
                <Setter Property="Padding" Value="5,0" />
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsMarked}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>

              <!-- STreeViewItem -->
              <Style x:Key="STreeViewItem" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWay}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />
              </Style>

              <!-- STreeViewStackPanel -->
              <Style x:Key="STreeViewStackPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="Background" Value="Transparent" />
                <EventSetter Event="PreviewMouseRightButtonDown" Handler="AttachContextMenu" />
                <EventSetter Event="PreviewMouseUp" Handler="TreeView_Select" />
              </Style>

              <!-- STreeViewStackPanelWithDrag -->
              <Style x:Key="STreeViewStackPanelWithDrag" BasedOn="{StaticResource STreeViewStackPanel}" TargetType="{x:Type StackPanel}">
                <EventSetter Event="MouseLeftButtonDown" Handler="TreeView_OnMouseLeftButtonDown" />
                <EventSetter Event="MouseMove" Handler="TreeView_OnMouseMove" />
              </Style>

              <!-- STreeViewKeywordsStackPanelWithDrop -->
              <Style x:Key="STreeViewStackPanelWithDrop" BasedOn="{StaticResource STreeViewStackPanel}" TargetType="{x:Type StackPanel}">
                <Setter Property="AllowDrop" Value="True" />
                <EventSetter Event="Drop" Handler="TreeView_OnDrop" />
                <EventSetter Event="DragEnter" Handler="TreeView_AllowDropCheck" />
                <EventSetter Event="DragLeave" Handler="TreeView_AllowDropCheck" />
                <EventSetter Event="DragOver" Handler="TreeView_AllowDropCheck" />
              </Style>

              <!-- STreeViewKeywordsStackPanelWithDragDrop -->
              <Style x:Key="STreeViewStackPanelWithDragDrop" BasedOn="{StaticResource STreeViewStackPanelWithDrop}" TargetType="{x:Type StackPanel}">
                <EventSetter Event="MouseLeftButtonDown" Handler="TreeView_OnMouseLeftButtonDown" />
                <EventSetter Event="MouseMove" Handler="TreeView_OnMouseMove" />
              </Style>

              <!-- BaseCategoryItem -->
              <HierarchicalDataTemplate DataType="{x:Type models:BaseCategoryItem}" ItemsSource="{Binding Items}">
                <Border Height="40">
                  <StackPanel Style="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TypeToStyleConverter}}">
                    <cc:IconRect IconName="{Binding IconName}" Size="24" />
                    <TextBlock Style="{StaticResource TreeViewTitle}" FontSize="18" />
                  </StackPanel>
                </Border>
              </HierarchicalDataTemplate>

              <!-- BaseTreeViewItem -->
              <HierarchicalDataTemplate DataType="{x:Type models:BaseTreeViewItem}" ItemsSource="{Binding Items}">
                <StackPanel Style="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TypeToStyleConverter}}">
                  <cc:IconRect IconName="{Binding IconName}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- BaseTreeViewTagItem -->
              <HierarchicalDataTemplate DataType="{x:Type models:BaseTreeViewTagItem}" ItemsSource="{Binding Items}">
                <StackPanel Style="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource TypeToStyleConverter}}">
                  <cc:IconRect IconName="{Binding IconName}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- DataTemplate - Rating -->
              <HierarchicalDataTemplate DataType="{x:Type models:Rating}">
                <StackPanel Style="{StaticResource STreeViewStackPanel}">
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=0}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=1}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=2}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=3}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=4}" />
                  </StackPanel>
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- DataTemplate - MediaItemSize -->
              <HierarchicalDataTemplate DataType="{x:Type models:MediaItemSize}">
                <StackPanel Style="{StaticResource STreeViewStackPanel}" Margin="0,0,3,3">
                  <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" 
                        Text="{Binding PixelMin, Converter={StaticResource MediaItemSizeConverter}}" />
                    <TextBlock HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1" 
                        Text="{Binding PixelMax, Converter={StaticResource MediaItemSizeConverter}}" />

                    <controls:RangeSlider Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                        HorizontalAlignment="Stretch" MoveWholeRange="True" 
                        Minimum="{Binding Min}" Maximum="{Binding Max}"
                        LowerValue="{Binding PixelMin}" UpperValue="{Binding PixelMax}" 
                        UpperThumbDragCompleted="MediaItemSize_OnDragCompleted"
                        LowerThumbDragCompleted="MediaItemSize_OnDragCompleted"
                        CentralThumbDragCompleted="MediaItemSize_OnDragCompleted"
                        IsSnapToTickEnabled="True" TickFrequency="0.1" />
                  </Grid>
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
              <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource STreeViewItem}">
                <Setter Property="Background" Value="{Binding BackgroundBrush, Converter={StaticResource BgColorConverter}}" />
                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsMarked}" Value="True" />
                      <Condition Binding="{Binding BackgroundBrush}" Value="0" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                  </MultiDataTrigger>

                  <!-- this is for Folder -->
                  <DataTrigger Binding="{Binding IsHidden}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                  </DataTrigger>

                  <!-- this is for Viewers Folder -->
                  <DataTrigger Binding="{Binding ToolTip}" Value="True">
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TreeView.ItemContainerStyle>
          </TreeView>
        </Grid>
      </controls:Flyout>
    </controls:FlyoutsControl>
  </controls:MetroWindow.Flyouts>

  <Grid>
    <Grid x:Name="GridMain" Margin="0" DataContext="{x:Static pm:App.Core}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="350" />
        <ColumnDefinition Width="3" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>

      <GridSplitter Grid.Column="1" DragDelta="MainSplitter_OnDragDelta" DragCompleted="MainSplitter_OnDragCompleted" 
          Width="3" HorizontalAlignment="Stretch" Background="{StaticResource WhiteBrush}" />

      <!-- Thumbnails and Full Media -->
      <Grid Grid.Column="2" >

        <!-- Thumbnails Grids -->
        <!--<TabControl x:Name="TabThumbnailsGrids" Background="Transparent" BorderThickness="0" TabStripPlacement="Left"
                    ItemsSource="{Binding Model.MediaItems.ThumbnailsGrids}"
                    SelectionChanged="TabThumbnailsGrids_OnSelectionChanged"
                    Visibility="{Binding AppInfo.AppMode, Source={x:Static pm:App.Core},
                                         Converter={StaticResource AllToVisibilityConverter}, 
                                         ConverterParameter={x:Static pm:AppMode.Browser}}"
                    ItemTemplate="{DynamicResource ThumbsTabItemTemplate}">

          <TabControl.Resources>
            <DataTemplate x:Key="ThumbsTabItemTemplate">
              <StackPanel Orientation="Vertical" MaxHeight="200" ToolTip="{Binding Title}">
                <Button Style="{StaticResource FontIconButton}" Content="✚" Click="TabThumbnailsGrids_AddTab"
                        Visibility="{Binding ShowAddTabButton, Converter={StaticResource AllToVisibilityConverter}}"  />
                <Button Style="{StaticResource FontIconButton}" Content="✖" Click="TabThumbnailsGrids_CloseTab" />
                <TextBlock Text="{Binding Title}" Margin="0,8">
                  <TextBlock.LayoutTransform>
                    <RotateTransform Angle="270" />
                  </TextBlock.LayoutTransform>
                </TextBlock>
              </StackPanel>
            </DataTemplate>
          </TabControl.Resources>

          <TabControl.ContentTemplate>
            <DataTemplate>
              <cc:ThumbnailsGridControl DataContext="{Binding}" x:Name="ThumbsGridControl" />
            </DataTemplate>
          </TabControl.ContentTemplate>

        </TabControl>-->

        <TabControl x:Name="TabThumbnailsGrids" Background="Transparent" BorderThickness="0" TabStripPlacement="Left"
                    SelectionChanged="TabThumbnailsGrids_OnSelectionChanged"
                    Visibility="{Binding AppInfo.AppMode, Source={x:Static pm:App.Core},
                                         Converter={StaticResource AllToVisibilityConverter}, 
                                         ConverterParameter={x:Static pm:AppMode.Browser}}">

          <!-- When are TabItems created thru binding, ScrollViewer is shared between TabItems! -->

          <TabControl.Resources>
            <DataTemplate x:Key="ThumbsTabItemTemplate">
              <StackPanel Orientation="Vertical" MaxHeight="200" ToolTip="{Binding Title}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}">
                <Button Style="{StaticResource FontIconButton}" Content="✚" Click="TabThumbnailsGrids_AddTab"
                        Visibility="{Binding ShowAddTabButton, Converter={StaticResource AllToVisibilityConverter}}"  />
                <Button Style="{StaticResource FontIconButton}" Content="✖" Click="TabThumbnailsGrids_CloseTab" />
                <TextBlock Text="{Binding Title}" Margin="0,8">
                  <TextBlock.LayoutTransform>
                    <RotateTransform Angle="270" />
                  </TextBlock.LayoutTransform>
                </TextBlock>
              </StackPanel>
            </DataTemplate>
          </TabControl.Resources>

        </TabControl>

        <!-- Full Media -->
        <Grid x:Name="PanelFullScreen" Background="Transparent"
            MouseLeftButtonDown="PanelFullScreen_OnMouseLeftButtonDown" MouseWheel="PanelFullScreen_OnMouseWheel"
            Visibility="{Binding AppInfo.AppMode, 
              Converter={StaticResource AllToVisibilityConverter}, 
              ConverterParameter={x:Static pm:AppMode.Viewer}}">

          <!-- Full Media Image -->
          <Grid Visibility="{Binding Model.MediaItems.ThumbsGrid.Current.MediaType, 
              Converter={StaticResource AllToVisibilityConverter}, 
              ConverterParameter={x:Static pmd:MediaType.Image}}">

            <cc:ZoomImageBox x:Name="FullImage" DataContext="{x:Static pm:App.Core}" />

            <!-- Presentation Panel -->
            <uc:PresentationPanel x:Name="PresentationPanel" />
          </Grid>

          <!-- Full Media Video -->
          <uc:MediaElementControl x:Name="FullMedia"
              Visibility="{Binding Model.MediaItems.ThumbsGrid.Current.MediaType,
                Source={x:Static pm:App.Core},
                Converter={StaticResource AllToVisibilityConverter}, 
                ConverterParameter={x:Static pmd:MediaType.Video}}" />
        </Grid>

      </Grid>
    </Grid>

    <!-- Status Panel -->
    <uc:StatusPanel x:Name="StatusPanel" VerticalContentAlignment="Bottom" MouseWheel="PanelFullScreen_OnMouseWheel" />
  </Grid>
  
</controls:MetroWindow>
