<controls:MetroWindow x:Name="MainWindow" x:Class="PictureManager.WMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:pm="clr-namespace:PictureManager"
        xmlns:viewModel="clr-namespace:PictureManager.ViewModel"
        xmlns:userControls="clr-namespace:PictureManager.UserControls"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Picture Manager" Height="547.5" Width="932.674" WindowState="Maximized" 
        Loaded="Window_Loaded" FontSize="13.333" SaveWindowPosition="True" TitleCharacterCasing="Normal">

  <controls:MetroWindow.LeftWindowCommands>
    <controls:WindowCommands>
      <Menu x:Name="MainMenu" Background="Transparent">
        <MenuItem Header="Tools" Style="{StaticResource RootMenuStyle}">
          <MenuItem Command="pm:CustomCommands.CmdCompressPictures" />
          <MenuItem Command="pm:CustomCommands.CmdReloadMetadata" />
          <MenuItem Command="pm:CustomCommands.CmdCatalog" />
          <MenuItem Command="pm:CustomCommands.CmdOpenSettings" Tag="appbar_settings" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="pm:CustomCommands.CmdGeoNames" Tag="appbar_location_checkin" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="pm:CustomCommands.CmdTestButton" />
        </MenuItem>
        <MenuItem Header="Keywords" Style="{StaticResource RootMenuStyle}">
          <MenuItem Command="pm:CustomCommands.CmdKeywordsEdit" Tag="appbar_edit" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="pm:CustomCommands.CmdKeywordsSave" Tag="appbar_save" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="pm:CustomCommands.CmdKeywordsCancel" Tag="appbar_cancel" Style="{StaticResource MenuItemIcon}" />
          <MenuItem Command="pm:CustomCommands.CmdKeywordsComment" Tag="appbar_notification" Style="{StaticResource MenuItemIcon}" />
        </MenuItem>
        <MenuItem Command="pm:CustomCommands.CmdAbout" Style="{StaticResource RootMenuStyle}" />
        <MenuItem Command="pm:CustomCommands.CmdShowHideTabMain" Style="{StaticResource RootMenuStyle}" />
      </Menu>
      <ComboBox x:Name="CmbViewers" SelectionChanged="CmbViewers_OnSelectionChanged">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal" Background="Transparent">
              <Rectangle Style="{StaticResource IconRect}" />
              <TextBlock Style="{StaticResource TreeViewTitle}" />
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
    </controls:WindowCommands>
  </controls:MetroWindow.LeftWindowCommands>

  <controls:MetroWindow.Resources>
    <!-- KeywordsPicCountStyle -->
    <Style x:Key="KeywordsPicCountStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="Text" Value="{Binding PicCount}" />
      <Setter Property="Visibility" Value="Collapsed"/>
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Margin" Value="5,0,0,0" />
      <Setter Property="Padding" Value="5,0" />
      <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsMarked}" Value="True">
          <Setter Property="Visibility" Value="Visible"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <!-- TreeViewStackPanel -->
    <Style x:Key="TreeViewStackPanel" TargetType="StackPanel">
      <Setter Property="Orientation" Value="Horizontal" />
      <Setter Property="Background" Value="Transparent" />
      <EventSetter Event="PreviewMouseRightButtonDown" Handler="AttachContextMenu" />
      <EventSetter Event="PreviewMouseUp" Handler="TreeView_Select" />
    </Style>

    <!-- TreeViewKeywordsStackPanelWithDragDrop -->
    <Style x:Key="TreeViewKeywordsStackPanelWithDragDrop" BasedOn="{StaticResource TreeViewStackPanel}" TargetType="StackPanel">
      <Setter Property="AllowDrop" Value="True" />
      <EventSetter Event="Drop" Handler="TvKeywords_OnDrop" />
      <EventSetter Event="MouseLeftButtonDown" Handler="TvKeywords_OnMouseLeftButtonDown" />
      <EventSetter Event="MouseLeftButtonUp" Handler="TvKeywords_OnMouseLeftButtonUp" />
      <EventSetter Event="MouseMove" Handler="TvKeywords_OnMouseMove" />
      <EventSetter Event="DragEnter" Handler="TvKeywords_AllowDropCheck" />
      <EventSetter Event="DragLeave" Handler="TvKeywords_AllowDropCheck" />
      <EventSetter Event="DragOver" Handler="TvKeywords_AllowDropCheck" />
    </Style>

    <!-- SBorderInfoBoxThumb SBorderInfoBoxStatusBar STextBlockInfoBox -->
    <Style x:Key="SBorderInfoBoxThumb" TargetType="Border">
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush" Value="Black" />
      <Setter Property="Background" Value="#88000000" />
      <Setter Property="VerticalAlignment" Value="Top"/>
      <Setter Property="Margin" Value="5,5,0,0"/>
      <Setter Property="Padding" Value="2,0,2,1" />
      <Setter Property="CornerRadius" Value="5" />
    </Style>
    <Style x:Key="SBorderInfoBoxStatusBar" TargetType="Border" BasedOn="{StaticResource SBorderInfoBoxThumb}">
      <Setter Property="Margin" Value="3,0,0,3"/>
      <Setter Property="MinWidth" Value="20" />
    </Style>
    <Style x:Key="STextBlockInfoBox" TargetType="TextBlock">
      <Setter Property="Foreground" Value="White" />
      <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <RoutedUICommand x:Key="CategoryGroupNew" Text="New Group" />
    <RoutedUICommand x:Key="CategoryGroupRename" Text="Rename Group" />
    <RoutedUICommand x:Key="CategoryGroupDelete" Text="Delete Group" />
    <RoutedUICommand x:Key="TagItemNew" Text="New" />
    <RoutedUICommand x:Key="TagItemRename" Text="Rename" />
    <RoutedUICommand x:Key="TagItemDelete" Text="Delete" />
    <RoutedUICommand x:Key="FolderNew" Text="New folder" />
    <RoutedUICommand x:Key="FolderRename" Text="Rename" />
    <RoutedUICommand x:Key="FolderDelete" Text="Delete" />
    <RoutedUICommand x:Key="FolderAddToFavorites" Text="Add to Favorites" />
    <RoutedUICommand x:Key="FolderRemoveFromFavorites" Text="Remove from Favorites" />
    <RoutedUICommand x:Key="FilterNew" Text="New" />
    <RoutedUICommand x:Key="FilterEdit" Text="Edit" />
    <RoutedUICommand x:Key="FilterDelete" Text="Delete" />
    <RoutedUICommand x:Key="ViewerEdit" Text="Edit" />
    <RoutedUICommand x:Key="ViewerIncludeFolder" Text="Include for Viewer" />
    <RoutedUICommand x:Key="ViewerExcludeFolder" Text="Exclude for Viewer" />
    <RoutedUICommand x:Key="ViewerRemoveFolder" Text="Remove" />
    <RoutedUICommand x:Key="GeoNameNew" Text="New" />
  </controls:MetroWindow.Resources>

  <controls:MetroWindow.CommandBindings>
    <CommandBinding Command="{StaticResource CategoryGroupNew}" Executed="CmdCategoryGroupNew" />
    <CommandBinding Command="{StaticResource CategoryGroupRename}" Executed="CmdCategoryGroupRename" />
    <CommandBinding Command="{StaticResource CategoryGroupDelete}" Executed="CmdCategoryGroupDelete" />
    <CommandBinding Command="{StaticResource TagItemNew}" Executed="CmdTagItemNew" />
    <CommandBinding Command="{StaticResource TagItemRename}" Executed="CmdTagItemRename" />
    <CommandBinding Command="{StaticResource TagItemDelete}" Executed="CmdTagItemDelete" />
    <CommandBinding Command="{StaticResource FolderNew}" Executed="CmdFolderNew" />
    <CommandBinding Command="{StaticResource FolderRename}" Executed="CmdFolderRename" />
    <CommandBinding Command="{StaticResource FolderDelete}" Executed="CmdFolderDelete" />
    <CommandBinding Command="{StaticResource FolderAddToFavorites}" Executed="CmdFolderAddToFavorites" />
    <CommandBinding Command="{StaticResource FolderRemoveFromFavorites}" Executed="CmdFolderRemoveFromFavorites" />
    <CommandBinding Command="{StaticResource FilterNew}" Executed="CmdFilterNew" />
    <CommandBinding Command="{StaticResource FilterEdit}" Executed="CmdFilterEdit" />
    <CommandBinding Command="{StaticResource FilterDelete}" Executed="CmdFilterDelete" />
    <CommandBinding Command="{StaticResource ViewerIncludeFolder}" Executed="CmdViewerIncludeFolder" />
    <CommandBinding Command="{StaticResource ViewerExcludeFolder}" Executed="CmdViewerExcludeFolder" />
    <CommandBinding Command="{StaticResource ViewerRemoveFolder}" Executed="CmdViewerRemoveFolder" />
    <CommandBinding Command="{StaticResource GeoNameNew}" Executed="CmdGeoNameNew" />

    <CommandBinding Command="pm:CustomCommands.CmdKeywordsEdit" CanExecute="CmdKeywordsEdit_CanExecute" Executed="CmdKeywordsEdit_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdKeywordsSave" CanExecute="CmdKeywordsSave_CanExecute" Executed="CmdKeywordsSave_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdKeywordsCancel" CanExecute="CmdKeywordsCancel_CanExecute" Executed="CmdKeywordsCancel_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdKeywordsComment" CanExecute="CmdKeywordsComment_CanExecute" Executed="CmdKeywordsComment_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdCompressPictures" CanExecute="CmdCompressPictures_CanExecute" Executed="CmdCompressPictures_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdTestButton" CanExecute="CmdAlways_CanExecute" Executed="CmdTestButton_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdReloadMetadata" CanExecute="CmdReloadMetadata_CanExecute" Executed="CmdReloadMetadata_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdOpenSettings" CanExecute="CmdAlways_CanExecute" Executed="CmdOpenSettings_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdGeoNames" CanExecute="CmdGeoNames_CanExecute" Executed="CmdGeoNames_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdAbout" CanExecute="CmdAlways_CanExecute" Executed="CmdAbout_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdCatalog" CanExecute="CmdAlways_CanExecute" Executed="CmdCatalog_Executed" />
    <CommandBinding Command="pm:CustomCommands.CmdShowHideTabMain" CanExecute="CmdAlways_CanExecute" Executed="CmdShowHideTabMain_Executed" />
    <CommandBinding Command="pm:WMain.CmdMediaItemNext" CanExecute="CmdMediaItemNext_CanExecute" Executed="CmdMediaItemNext_Executed" />
    <CommandBinding Command="pm:WMain.CmdMediaItemPrevious" CanExecute="CmdMediaItemPrevious_CanExecute" Executed="CmdMediaItemPrevious_Executed" />
  </controls:MetroWindow.CommandBindings>

  <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext}">

    <StatusBar x:Name="MainStatusBar" Visibility="Collapsed"
               DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ACore.AppInfo}">
      <StatusBar.ItemsPanel>
        <ItemsPanelTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="100" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
          </Grid>
        </ItemsPanelTemplate>
      </StatusBar.ItemsPanel>
      <StatusBarItem>
        <TextBlock Text="{Binding ViewBaseInfo}" />
      </StatusBarItem>
      <Separator Grid.Column="1" />
      <StatusBarItem Grid.Column="2">
        <TextBlock Text="{Binding CurrentPictureFilePath}" />
      </StatusBarItem>
      <Separator Grid.Column="3" />
      <StatusBarItem Grid.Column="4">
        <ProgressBar x:Name="StatusProgressBar" Width="90" Height="16" />
      </StatusBarItem>
      <StatusBarItem Grid.Column="5">
        <StackPanel Orientation="Horizontal" x:Name="StatBarOkCancelPanel">
          <Button Margin="0,0,0,0" Content="Ok" Click="BtnStatBarOk_OnClick" MinWidth="60" />
          <Button Margin="3,0,0,0" Content="Cancel" Click="BtnStatBarCancel_OnClick" MinWidth="60" />
        </StackPanel>
      </StatusBarItem>
      <StatusBar.Style>
        <Style TargetType="{x:Type StatusBar}">
          <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
          <Style.Triggers>
            <DataTrigger Binding="{Binding AppMode}" Value="2">
              <Setter Property="Background" Value="#CA5100" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AppMode}" Value="3">
              <Setter Property="Background" Value="#CA5100" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </StatusBar.Style>
    </StatusBar>

    <Grid x:Name="GridMain" Margin="0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="350" />
        <ColumnDefinition Width="3" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>

      <TabControl x:Name="TcMain" Grid.Row="0" Padding="0,0,0,27" >
        <TabItem Header="Folders" x:Name="TabFolders" HorizontalAlignment="Left">
          <!-- TreeView Folders -->
          <TreeView x:Name="TvFolders">

            <TreeView.ItemContainerStyle>
              <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>
              <!-- TreeView Folders - BaseItem (Category) -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:BaseTreeViewItem}" ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal" Background="Transparent" 
                            PreviewMouseRightButtonDown="AttachContextMenu" 
                            PreviewMouseUp="TreeView_Select">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Folders - Folder -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:Folder}" ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal" Background="Transparent" AllowDrop="True"
                            MouseLeftButtonUp="TvFolders_OnMouseLeftButtonUp"
                            MouseLeftButtonDown="TvFolders_OnMouseLeftButtonDown"
                            PreviewMouseRightButtonDown="AttachContextMenu"
                            PreviewMouseUp="TreeView_Select" 
                            Drop="TvFolders_OnDrop" 
                            MouseMove="TvFolders_OnMouseMove" 
                            DragEnter="TvFolders_AllowDropCheck" 
                            DragLeave="TvFolders_AllowDropCheck"
                            DragOver="TvFolders_AllowDropCheck">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.Resources>
          </TreeView>
        </TabItem>

        <TabItem Header="Keywords" x:Name="TabKeywords" HorizontalAlignment="Left">
          <!-- TreeView Keywords -->
          <TreeView x:Name="TvKeywords">

            <TreeView.ItemContainerStyle>
              <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="{Binding BgBrush, Converter={StaticResource BgColorConverter}}" />
                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsMarked}" Value="True" />
                      <Condition Binding="{Binding BgBrush}" Value="0" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                  </MultiDataTrigger>
                </Style.Triggers>
              </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>
              <!-- TreeView Keywords - BaseItem (Category) -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:BaseTreeViewItem}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewKeywordsStackPanelWithDragDrop}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Keywords - Keyword -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:Keyword}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewKeywordsStackPanelWithDragDrop}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Keywords - FolderKeyword -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:FolderKeyword}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Keywords - GeoName -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:GeoName}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Keywords - CategoryGroup -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:CategoryGroup}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewKeywordsStackPanelWithDragDrop}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Keywords - Person -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:Person}">
                <StackPanel Style="{StaticResource TreeViewKeywordsStackPanelWithDragDrop}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Keywords - Rating -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:Rating}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <StackPanel Orientation="Horizontal">
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=0}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=1}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=2}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=3}" />
                    <Rectangle Style="{StaticResource IconRect}" Fill="{Binding Value, Converter={StaticResource RatingConverter}, ConverterParameter=4}" />
                  </StackPanel>
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.Resources>

          </TreeView>
        </TabItem>

        <TabItem Header="Filters" HorizontalAlignment="Left">
          <!-- TreeView Filters -->
          <TreeView x:Name="TvFilters">

            <TreeView.ItemContainerStyle>
              <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsMarked}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>
              <!-- TreeView Filters - BaseItem (Category) -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:BaseTreeViewItem}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Filters - Filter -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:Filter}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                  <TextBlock Style="{StaticResource KeywordsPicCountStyle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Filters - Viewer -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:Viewer}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>

              <!-- TreeView Filters - SqlQuery -->
              <HierarchicalDataTemplate DataType="{x:Type viewModel:SqlQuery}" ItemsSource="{Binding Items}">
                <StackPanel Style="{StaticResource TreeViewStackPanel}">
                  <Rectangle Style="{StaticResource IconRect}" />
                  <TextBlock Style="{StaticResource TreeViewTitle}" />
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.Resources>

          </TreeView>
        </TabItem>
      </TabControl>

      <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" Background="{StaticResource WhiteBrush}" />

      <!-- Thumbnails and Full Media -->
      <Grid Grid.Column="2" >

        <!-- Thumbnails -->
        <Grid>
          <Grid.Style>
            <Style TargetType="{x:Type Grid}">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding ACore.AppInfo.AppMode}" Value="0">
                  <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Style>

          <!-- Thumbnails -->
          <ItemsControl x:Name="ThumbsBox" ItemsSource="{Binding ACore.MediaItems.SplitedItems}"
                        VirtualizingStackPanel.IsVirtualizing="True" 
                        VirtualizingPanel.ScrollUnit="Pixel" 
                        ScrollViewer.CanContentScroll="True">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <VirtualizingStackPanel/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <ItemsControl ItemsSource="{Binding}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>

                  <!-- Thumbnail -->
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Border Width="{Binding ThumbWidth}" Height="{Binding ThumbHeight}" ClipToBounds="True"
                              MouseLeftButtonUp="Thumb_OnMouseLeftButtonUp" MouseLeftButtonDown="Thumb_OnMouseLeftButtonDown" 
                              MouseMove="Thumb_OnMouseMove">
                        <Border.Style>
                          <Style TargetType="{x:Type Border}">
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Margin" Value="2,0,0,2" />
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                              </DataTrigger>
                            </Style.Triggers>
                            <Style.Resources>
                              <Style TargetType="{x:Type ItemsControl}">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </Style.Resources>
                          </Style>
                        </Border.Style>

                        <Grid>
                          <!-- Thumbnail Image -->
                          <Image Source="{Binding FilePathCacheUri}" Stretch="Fill" />

                          <!-- Thumbnail Info Box -->
                          <ItemsControl ItemsSource="{Binding InfoBoxThumb}">
                            <ItemsControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                              </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                              <DataTemplate>
                                <Border Style="{StaticResource SBorderInfoBoxThumb}">
                                  <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding}" />
                                </Border>
                              </DataTemplate>
                            </ItemsControl.ItemTemplate>
                          </ItemsControl>
                        </Grid>
                      </Border>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.Template>
              <ControlTemplate>
                <ScrollViewer x:Name="ThumbsBoxScrollViewer">
                  <ItemsPresenter />
                </ScrollViewer>
              </ControlTemplate>
            </ItemsControl.Template>
          </ItemsControl>
        </Grid>

        <!-- Full Media -->
        <Grid x:Name="PanelFullScreen" MouseLeftButtonDown="FullScreenBox_OnMouseLeftButtonDown" MouseWheel="FullScreenBox_OnMouseWheel">
          <Grid.Style>
            <Style TargetType="{x:Type Grid}">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding ACore.AppInfo.AppMode}" Value="1">
                  <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Style>
          <Grid>

            <!-- Full Media Image -->
            <Grid>
              <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                  <Setter Property="Visibility" Value="Hidden" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ACore.MediaItems.Current.MediaType}" Value="0">
                      <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Grid.Style>

              <userControls:ZoomImageBox x:Name="FullImage" ClipToBounds="True" />
            </Grid>

            <!-- Full Media Video -->
            <Grid>
              <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                  <Setter Property="Visibility" Value="Hidden" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ACore.MediaItems.Current.MediaType}" Value="1">
                      <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Grid.Style>

              <MediaElement x:Name="FullMedia" />
            </Grid>
          </Grid>
        </Grid>
      </Grid>
    </Grid>

    <!-- Status Bar -->
    <WrapPanel x:Name="StatusPanel" IsHitTestVisible="False" VerticalAlignment="Bottom" Height="Auto" Margin="0,0,0,1"
               DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ACore.AppInfo}">
      <WrapPanel.Style>
        <Style>
          <Style.Resources>
            <Style TargetType="Border" BasedOn="{StaticResource SBorderInfoBoxStatusBar}" />
          </Style.Resources>
        </Style>
      </WrapPanel.Style>

      <!-- PositionSlashCount -->
      <Border>
        <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding PositionSlashCount}" />
      </Border>

      <!-- Selected -->
      <Border Background="{DynamicResource AccentColorBrush}">
        <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding Selected}" />
      </Border>

      <!-- Modifed -->
      <Border Background="#CA5100">
        <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding Modifed}" />
      </Border>

      <!-- Rating -->
      <Border>
        <Border.Style>
          <Style TargetType="Border" BasedOn="{StaticResource SBorderInfoBoxStatusBar}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Rating.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
        <ItemsControl ItemsSource="{Binding Rating}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Rectangle Style="{StaticResource IconRect}" />
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Border>

      <!-- FilePath -->
      <Border>
        <Border.Style>
          <Style TargetType="Border" BasedOn="{StaticResource SBorderInfoBoxStatusBar}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding FilePath}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
        <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding FilePath}" />
      </Border>

      <!-- People -->
      <ItemsControl ItemsSource="{Binding CurrentMediaItem.InfoBoxPeople}">
        <ItemsControl.Style>
          <Style TargetType="ItemsControl">
            <Style.Triggers>
              <DataTrigger Binding="{Binding CurrentMediaItem.InfoBoxPeople.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ItemsControl.Style>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Horizontal" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Border Style="{StaticResource SBorderInfoBoxStatusBar}">
              <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding}" />
            </Border>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>

      <!-- Keywords -->
      <ItemsControl ItemsSource="{Binding CurrentMediaItem.InfoBoxKeywords}">
        <ItemsControl.Style>
          <Style TargetType="ItemsControl">
            <Style.Triggers>
              <DataTrigger Binding="{Binding CurrentMediaItem.InfoBoxKeywords.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ItemsControl.Style>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Horizontal" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Border Style="{StaticResource SBorderInfoBoxStatusBar}">
              <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding}" />
            </Border>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>

      <!-- Comment -->
      <Border>
        <Border.Style>
          <Style TargetType="Border" BasedOn="{StaticResource SBorderInfoBoxStatusBar}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Comment}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
        <TextBlock Style="{StaticResource STextBlockInfoBox}" Text="{Binding Comment}" />
      </Border>

    </WrapPanel>

  </Grid>
</controls:MetroWindow>
