<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:m="clr-namespace:PictureManager.Common.Models;assembly=PictureManager.Common"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:mhu="clr-namespace:MH.UI.WPF.Utils;assembly=MH.UI.WPF"
  xmlns:vme="clr-namespace:PictureManager.Common.ViewModels.Entities;assembly=PictureManager.Common"
  xmlns:bc="clr-namespace:MH.Utils.BaseClasses;assembly=MH.Utils"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties;assembly=MH.UI.WPF">

  <DataTemplate DataType="{x:Type vme:ViewerVM}">
    <DataTemplate.Resources>
      <Style x:Key="_border" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinWidth" Value="210"/>
        <Setter Property="MinHeight" Value="210"/>
      </Style>

      <Style x:Key="_header" TargetType="c:IconTextBlock" BasedOn="{StaticResource MH.S.IconTextBlock}">
        <Setter Property="TextBlock.FontSize" Value="16"/>
        <Setter Property="Background" Value="{DynamicResource MH.B.Black5}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Border.CornerRadius" Value="0"/>
      </Style>

      <DataTemplate DataType="{x:Type bc:TreeItem}">
        <c:IconTextBlock
          ap:Icon.Res="{Binding Icon}"
          ap:Text.Text="{Binding Name}"
          Shadow="None"
          Margin="0"/>
      </DataTemplate>
    </DataTemplate.Resources>

    <WrapPanel>
      <!-- Included Folders -->
      <Border Style="{StaticResource _border}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <c:IconTextBlock ap:Icon.Res="IconFolder" ap:Text.Text="Included Folders" Style="{StaticResource _header}"/>

          <ListBox
            Grid.Row="1"
            ItemsSource="{Binding Selected.IncludedFolders}"
            BorderThickness="0"
            mhu:DragDropHelper.IsDragEnabled="True"
            mhu:DragDropHelper.IsDropEnabled="True"
            mhu:DragDropHelper.CanDrag="{Binding CanDragFolder}"
            mhu:DragDropHelper.CanDrop="{Binding CanDropFolderIncluded}"
            mhu:DragDropHelper.DoDrop="{Binding DoDropFolderIncluded}">

            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MH.S.ListBoxItem}">
                <Setter Property="ToolTip" Value="{Binding Path=(m:FolderM.FullPath)}"/>
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </Grid>
      </Border>

      <!-- Excluded Folders -->
      <Border Style="{StaticResource _border}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <c:IconTextBlock ap:Icon.Res="IconFolder" ap:Text.Text="Excluded Folders" Style="{StaticResource _header}"/>

          <ListBox
            Grid.Row="1"
            ItemsSource="{Binding Selected.ExcludedFolders}"
            BorderThickness="0"
            mhu:DragDropHelper.IsDragEnabled="True"
            mhu:DragDropHelper.IsDropEnabled="True"
            mhu:DragDropHelper.CanDrag="{Binding CanDragFolder}"
            mhu:DragDropHelper.CanDrop="{Binding CanDropFolderExcluded}"
            mhu:DragDropHelper.DoDrop="{Binding DoDropFolderExcluded}">

            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MH.S.ListBoxItem}">
                <Setter Property="ToolTip" Value="{Binding Path=(m:FolderM.FullPath)}"/>
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </Grid>
      </Border>

      <!-- Category Groups -->
      <Border Style="{StaticResource _border}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <c:IconTextBlock ap:Icon.Res="IconGroup" ap:Text.Text="Category Groups" Style="{StaticResource _header}"/>

          <ListBox
            Grid.Row="1"
            ItemsSource="{Binding CategoryGroups}"
            SelectionMode="Multiple"
            BorderThickness="0">

            <b:Interaction.Triggers>
              <b:EventTrigger EventName="PreviewMouseUp">
                <b:InvokeCommandAction Command="{Binding UpdateExcludedCategoryGroupsCommand}"/>
              </b:EventTrigger>
            </b:Interaction.Triggers>

            <ListBox.ItemTemplate>
              <DataTemplate>
                <ContentPresenter Content="{Binding Content}"/>
              </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MH.S.ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </Grid>
      </Border>

      <!-- Excluded Keywords -->
      <Border Style="{StaticResource _border}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <c:IconTextBlock ap:Icon.Res="IconTagLabel" ap:Text.Text="Excluded Keywords" Style="{StaticResource _header}"/>

          <ListBox
            Grid.Row="1"
            ItemsSource="{Binding Selected.ExcludedKeywords}"
            BorderThickness="0"
            mhu:DragDropHelper.IsDragEnabled="True"
            mhu:DragDropHelper.IsDropEnabled="True"
            mhu:DragDropHelper.DragDataType="{x:Type m:KeywordM}"
            mhu:DragDropHelper.CanDrop="{Binding CanDropKeyword}"
            mhu:DragDropHelper.DoDrop="{Binding DoDropKeyword}">

            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MH.S.ListBoxItem}">
                <Setter Property="ToolTip" Value="{Binding Path=(m:KeywordM.FullName)}"/>
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </Grid>
      </Border>
    </WrapPanel>
  </DataTemplate>
</ResourceDictionary>