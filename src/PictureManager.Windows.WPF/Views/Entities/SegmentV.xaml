<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:pm="clr-namespace:PictureManager.Windows.WPF"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:m="clr-namespace:PictureManager.Common.Models;assembly=PictureManager.Common"
  xmlns:pmConv="clr-namespace:PictureManager.Windows.WPF.Converters"
  xmlns:conv="clr-namespace:MH.UI.WPF.Converters;assembly=MH.UI.WPF"
  xmlns:vm="clr-namespace:PictureManager.Common.ViewModels;assembly=PictureManager.Common"
  xmlns:vme="clr-namespace:PictureManager.Common.ViewModels.Entities;assembly=PictureManager.Common"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties;assembly=MH.UI.WPF">

  <DataTemplate x:Key="PM.DT.Segment.Lite" DataType="{x:Type m:SegmentM}">
    <Border BorderThickness="1" BorderBrush="Black" Margin="1">
      <Image
        Stretch="Fill"
        Width="{Binding Source={x:Static vme:SegmentVM.SegmentUiSize}}"
        Height="{Binding Source={x:Static vme:SegmentVM.SegmentUiSize}}">

        <Image.Source>
          <MultiBinding Converter="{x:Static pmConv:SegmentThumbnailSourceConverter.Inst}">
            <Binding Path="FilePathCache" IsAsync="True"/>
            <Binding/>
          </MultiBinding>
        </Image.Source>
      </Image>
    </Border>
  </DataTemplate>

  <DataTemplate x:Key="PM.DT.Segment.ToolTip" DataType="{x:Type m:SegmentM}">
    <Grid MaxWidth="{Binding MediaItem.ThumbWidth}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      
      <!-- MediaItem Thumbnail with Segments Rects -->
      <Grid>
        <ContentPresenter Content="{Binding MediaItem}" ContentTemplate="{DynamicResource PM.DT.MediaItem.Thumb-Lite}"/>

        <ItemsControl
          ItemsSource="{Binding VM.Segment.Rect.SegmentToolTipRects, Source={x:Static pm:App.Core}}">

          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Canvas/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <ItemsControl.ItemContainerStyle>
            <Style TargetType="{x:Type ContentPresenter}">
              <Setter Property="Canvas.Left" Value="{Binding Item1, Mode=OneTime}"/>
              <Setter Property="Canvas.Top" Value="{Binding Item2, Mode=OneTime}"/>
            </Style>
          </ItemsControl.ItemContainerStyle>

          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Rectangle
                x:Name="rect"
                Width="{Binding Item3, Mode=OneTime}"
                Height="{Binding Item3, Mode=OneTime}" 
                StrokeThickness="1"
                Stroke="White"
                Effect="{StaticResource MH.Effects.DropShadow}"/>

              <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Item4, Mode=OneTime}" Value="True">
                  <Setter TargetName="rect" Property="Stroke" Value="LimeGreen"/>
                </DataTrigger>
              </DataTemplate.Triggers>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>

        <TextBlock
          Text="{Binding MediaItem.FileName}"
          MaxWidth="{Binding MediaItem.ThumbWidth}"
          VerticalAlignment="Bottom"
          HorizontalAlignment="Center"
          Margin="0,0,0,4"
          TextWrapping="Wrap"
          Effect="{StaticResource MH.Effects.DropShadow}"/>
      </Grid>

      <!-- Name -->
      <Border
        Grid.Row="1"
        BorderThickness="1"
        BorderBrush="Black"
        Background="{DynamicResource MH.B.Black5}"
        Visibility="{Binding Person, Converter={x:Static conv:VisibilityConverter.NotNullToVisible}}">

        <TextBlock Text="{Binding Person.Name}" FontSize="18" Margin="5,2"/>
      </Border>

      <!-- TopSegments -->
      <ItemsControl
        Grid.Row="2"
        ItemsSource="{Binding Person.TopSegments}"
        Visibility="{Binding Person.TopSegments, Converter={x:Static conv:VisibilityConverter.NotNullToVisible}}"
        ItemTemplate="{DynamicResource PM.DT.Segment.Lite}">

        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Horizontal"/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="PM.DT.Segment" DataType="{x:Type m:SegmentM}">
    <Grid x:Name="root" Background="Transparent">
      <b:Interaction.Triggers>
        <b:EventTrigger EventName="ToolTipOpening">
          <b:InvokeCommandAction
            Command="vme:SegmentRectVM.SegmentToolTipReloadCommand"
            CommandParameter="{Binding}"/>
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <Grid.ToolTip>
        <ToolTip Padding="0" BorderThickness="0">
          <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PM.DT.Segment.ToolTip}"/>
        </ToolTip>
      </Grid.ToolTip>

      <Image Stretch="Fill">
        <Image.Source>
          <MultiBinding Converter="{x:Static pmConv:SegmentThumbnailSourceConverter.Inst}">
            <Binding Path="FilePathCache" IsAsync="True"/>
            <Binding/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Path
        x:Name="iconNoPerson"
        Style="{StaticResource MH.S.Icon.Shadow}"
        Data="{StaticResource IconPeople}"
        Fill="Red"
        Margin="5"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        Visibility="Collapsed"/>

      <Grid x:Name="buttons" VerticalAlignment="Top" Visibility="Collapsed">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border
          x:Name="boSelectedCount"
          Grid.Column="0"
          Style="{StaticResource MH.S.Border.RoundDarker}"
          Background="{DynamicResource MH.B.Accent}"
          Visibility="Collapsed">

          <TextBlock
            HorizontalAlignment="Center"
            Effect="{StaticResource MH.Effects.DropShadow}"
            Text="{Binding S.Segment.Selected.Items.Count, Source={x:Static pm:App.Core}}"/>
        </Border>

        <c:IconButton
          x:Name="btnSamePerson"
          Grid.Column="1"
          Command="vme:SegmentVM.SetSelectedAsSamePersonCommand"
          Width="20"
          Height="20"
          ap:Icon.Size="13"
          Visibility="Collapsed"/>

        <c:IconButton
          x:Name="btnPersonDetail"
          Grid.Column="2"
          Command="vm:ToolsTabsVM.OpenPersonTabCommand"
          CommandParameter="{Binding Person}"
          HorizontalAlignment="Right"
          Width="20"
          Height="20"
          ap:Icon.Size="13"/>
      </Grid>
    </Grid>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Person}" Value="{x:Null}">
        <Setter TargetName="iconNoPerson" Property="Visibility" Value="Visible"/>
        <Setter TargetName="btnPersonDetail" Property="Visibility" Value="Collapsed"/>
      </DataTrigger>
      <Trigger SourceName="root" Property="IsMouseOver" Value="True">
        <Setter TargetName="iconNoPerson" Property="Visibility" Value="Collapsed"/>
        <Setter TargetName="buttons" Property="Visibility" Value="Visible"/>
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsSelected}" Value="True"/>
          <Condition
             Binding="{Binding S.Segment.CanSetAsSamePerson,
                       Source={x:Static pm:App.Core},
                       Converter={x:Static conv:AllToBoolConverter.Inst}}"
             Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="boSelectedCount" Property="Visibility" Value="Visible"/>
        <Setter TargetName="btnSamePerson" Property="Visibility" Value="Visible"/>
      </MultiDataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
</ResourceDictionary>