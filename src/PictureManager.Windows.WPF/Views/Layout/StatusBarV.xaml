<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.Controls;assembly=MH.UI"
  xmlns:mhConv="clr-namespace:MH.UI.WPF.Converters;assembly=MH.UI.WPF"
  xmlns:vm="clr-namespace:PictureManager.Common.ViewModels;assembly=PictureManager.Common"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls;assembly=MH.UI.WPF"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties;assembly=MH.UI.WPF"
  xmlns:m="clr-namespace:PictureManager.Common.Models;assembly=PictureManager.Common">

  <DataTemplate DataType="{x:Type vm:StatusBarVM}">
    <DataTemplate.Resources>
      <ResourceDictionary>
        <DataTemplate x:Key="_person" DataType="{x:Type m:PersonM}">
          <Border Style="{StaticResource MH.S.Border.RoundDark}" Cursor="Hand">
            <Border.InputBindings>
              <MouseBinding
                MouseAction="LeftClick"
                Command="vm:ToolsTabsVM.OpenPersonTabCommand"
                CommandParameter="{Binding}"/>
            </Border.InputBindings>

            <TextBlock Text="{Binding Name}"/>
          </Border>
        </DataTemplate>
      </ResourceDictionary>
    </DataTemplate.Resources>

    <Grid Background="{DynamicResource MH.B.Black2}">
      <Grid.InputBindings>
        <MouseBinding
          MouseAction="LeftClick"
          Command="mhc:SlidePanelsGrid.PinCommand"
          CommandParameter="{Binding Core.VM.MainWindow.SlidePanelsGrid.PanelBottom}"/>
      </Grid.InputBindings>

      <WrapPanel Margin="1,0,0,0" VerticalAlignment="Center">
        <!-- Selected items -->
        <ContentPresenter
          Height="32"
          Content="{Binding Core}"
          ContentTemplate="{StaticResource PM.DT.SelectedItemsStatusBar}"/>

        <!-- PositionSlashCount -->
        <c:IconTextBlock
          x:Name="tbPositionSlashCount"
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          ap:Icon.Res="IconImageMultiple"
          ap:Text.Text="{Binding Core.VM.MediaItem.Views.Current.PositionSlashCount}"
          Visibility="{Binding IsCountVisible, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"/>

        <!-- Dimension -->
        <c:IconTextBlock
          ap:Icon.Res="IconRuler"
          Visibility="{Binding Core.VM.MediaItem.Current, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}">
          <c:IconTextBlock.Style>
            <Style TargetType="c:IconTextBlock" BasedOn="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}">
              <Setter Property="ap:Text.Text">
                <Setter.Value>
                  <MultiBinding StringFormat="{}{0}x{1}">
                    <Binding Path="Core.VM.MediaItem.Current.Width"/>
                    <Binding Path="Core.VM.MediaItem.Current.Height"/>
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </c:IconTextBlock.Style>
        </c:IconTextBlock>

        <!-- File Size -->
        <c:IconTextBlock
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          ap:Icon.Res="IconPageUpload"
          ap:Text.Text="{Binding FileSize}"
          Visibility="{Binding FileSize, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"/>

        <!-- ImageActualZoom -->
        <c:IconTextBlock
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          ap:Icon.Res="IconMagnify"
          ap:Text.Text="{Binding Core.VM.MediaViewer.ActualZoom, StringFormat={}{0:####}%}"
          Visibility="{Binding Core.VM.MediaViewer.IsVisible, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"/>

        <!-- Rating -->
        <c:IconTextBlock
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          TextBorderStyle="{x:Null}"
          ap:Icon.Res="IconStar"
          ap:Text.Text="{Binding Rating.Count}"
          Compact="True"
          Padding="0"
          Width="28"
          Height="28"
          Visibility="{Binding Rating.Count, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"/>

        <!-- GeoName -->
        <c:IconTextBlock
          x:Name="boGeoName"
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          ap:Icon.Res="IconLocationCheckin"
          ToolTip="{Binding Core.VM.MediaItem.CurrentGeoName.FullName}"
          Visibility="Collapsed"/>

        <!-- FilePath -->
        <c:IconTextBlockItemsControl
          Style="{StaticResource MH.S.IconTextBlockItemsControl.Borders.RoundDark}"
          ItemsSource="{Binding FilePath}"
          ap:Icon.Res="IconFolder"
          Visibility="{Binding FilePath, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"
          ToolTip="{Binding Core.VM.MediaItem.Current.FilePath}"/>

        <!-- DateAndTime -->
        <c:IconTextBlock
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          ap:Icon.Res="IconCalendar"
          ap:Text.Text="{Binding DateAndTime}"
          Visibility="{Binding DateAndTime, Converter={x:Static mhConv:AllToVisibilityConverter.Inst}}"/>

        <!-- People -->
        <c:IconTextBlockItemsControl
          x:Name="people"
          Style="{StaticResource MH.S.IconTextBlockItemsControl.Borders.RoundDark}"
          ItemsSource="{Binding Core.VM.MediaItem.Current.DisplayPeople}"
          ItemTemplate="{StaticResource _person}"
          ap:Icon.Res="IconPeople"
          Visibility="Collapsed"/>

        <!-- Keywords -->
        <c:IconTextBlockItemsControl
          x:Name="keywords"
          Style="{StaticResource MH.S.IconTextBlockItemsControl.Borders.RoundDark}"
          ItemsSource="{Binding Core.VM.MediaItem.Current.DisplayKeywords}"
          ap:Icon.Res="IconTag"
          Visibility="Collapsed"/>

        <!-- Comment -->
        <c:IconTextBlock
          x:Name="comment"
          Style="{StaticResource MH.S.IconTextBlock.Borders.RoundDark}"
          ap:Icon.Res="IconNotification"
          ap:Text.Text="{Binding Core.VM.MediaItem.Current.Comment}"
          Visibility="Collapsed"/>
      </WrapPanel>
    </Grid>

    <DataTemplate.Triggers>
      <!--TODO store PositionSlashCount just in one location-->
      <DataTrigger Binding="{Binding Core.VM.MediaViewer.IsVisible}" Value="True">
        <Setter
          TargetName="tbPositionSlashCount"
          Property="ap:Text.Text"
          Value="{Binding Core.VM.MediaViewer.PositionSlashCount}"/>
      </DataTrigger>

      <DataTrigger Binding="{Binding Core.VM.MediaItem.CurrentGeoName, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True">
        <Setter TargetName="boGeoName" Property="Visibility" Value="Visible"/>
      </DataTrigger>

      <DataTrigger Binding="{Binding Core.VM.MediaItem.Current.DisplayPeople, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True">
        <Setter TargetName="people" Property="Visibility" Value="Visible"/>
      </DataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Core.VM.MediaViewer.IsVisible}" Value="True"/>
          <Condition Binding="{Binding Core.VM.MediaItem.Current.DisplayKeywords, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="keywords" Property="Visibility" Value="Visible"/>
      </MultiDataTrigger>

      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Core.VM.MediaViewer.IsVisible}" Value="True"/>
          <Condition Binding="{Binding Core.VM.MediaItem.Current.Comment, Converter={x:Static mhConv:AllToBoolConverter.Inst}}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="comment" Property="Visibility" Value="Visible"/>
      </MultiDataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
</ResourceDictionary>