<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:uic="clr-namespace:MH.UI.Controls;assembly=MH.UI"
  xmlns:uii="clr-namespace:MH.UI.Interfaces;assembly=MH.UI"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties"
  xmlns:wpfc="clr-namespace:MH.UI.WPF.Controls"
  xmlns:wpfu="clr-namespace:MH.UI.WPF.Utils"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:mhConv="clr-namespace:MH.UI.WPF.Converters"
  xmlns:sys="clr-namespace:System;assembly=System.Runtime"
  xmlns:mhuInt="clr-namespace:MH.Utils.Interfaces;assembly=MH.Utils"
  xmlns:rd="clr-namespace:MH.UI.WPF.Resources">

  <wpfu:KeyDataTemplateSelector x:Key="KeyDataTemplateSelector">
    <wpfu:KeyDataTemplateSelector.Keys>
      <x:Array Type="{x:Type sys:String}">
        <sys:String>MH.UI.Controls.CollectionViewGroup`1</sys:String>
        <sys:String>MH.UI.Controls.CollectionViewRow`1</sys:String>
      </x:Array>
    </wpfu:KeyDataTemplateSelector.Keys>
  </wpfu:KeyDataTemplateSelector>

  <Style
    x:Key="MH.Styles.Controls.CollectionView"
    TargetType="wpfc:CollectionView"
    BasedOn="{StaticResource MH.Styles.Controls.TreeViewBase}">
    <Setter Property="ItemContainerStyle" Value="{StaticResource MH.Styles.Controls.TreeViewItemLite}"/>
    <Setter Property="ItemTemplateSelector" Value="{StaticResource KeyDataTemplateSelector}"/>
  </Style>

  <HierarchicalDataTemplate
    x:Key="MH.UI.Controls.CollectionViewGroup`1"
    DataType="{x:Type uic:CollectionViewGroup`1}"
    ItemsSource="{Binding Items}">

    <Border
      x:Name="border"
      BorderBrush="Black"
      BorderThickness="1"
      Margin="1,2,1,2"
      Background="#88000000"
      Height="30">

      <Grid Margin="{Binding Converter={x:Static mhConv:TreeMarginConverter.Inst}, ConverterParameter=16}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ToggleButton
          x:Name="expander"
          Grid.Column="0"
          Style="{StaticResource MH.Styles.Controls.TreeExpandCollapseToggle}"
          IsChecked="{Binding IsExpanded, Mode=TwoWay}"/>

        <wpfc:IconButton
          Command="{Binding View.OpenGroupByDialogCommand}"
          CommandParameter="{Binding}"
          Grid.Column="1"
          ap:Icon.Data="{Binding
            Path=GroupedBy.Data.(mhuInt:IListItem.Icon),
            Converter={x:Static mhConv:ResourceConverter.Inst}}"
          ap:Icon.Fill="{Binding
            Path=GroupedBy.Data.(mhuInt:IListItem.Icon),
            Converter={x:Static mhConv:ResourceConverter.Inst},
            ConverterParameter={x:Static rd:Dictionaries.IconToBrush}}"/>

        <TextBlock
          Grid.Column="2"
          Text="{Binding Path=GroupedBy.Data.(mhuInt:IListItem.Name)}"
          VerticalAlignment="Center"
          Margin="5,0,5,0"
          FontSize="16"/>

        <TextBlock
          Grid.Column="3"
          Text="{Binding SourceCount}"
          VerticalAlignment="Center"
          Margin="5,0,5,0"
          FontWeight="Bold"
          FontSize="14"/>
      </Grid>
    </Border>

    <HierarchicalDataTemplate.Triggers>
      <DataTrigger Binding="{Binding Items.Count}" Value="0">
        <Setter TargetName="expander" Property="Visibility" Value="Hidden"/>
      </DataTrigger>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <MultiBinding Converter="{x:Static mhConv:SetPropertyConverter.Inst}" ConverterParameter="Width">
            <Binding Path="DataContext" ElementName="border"/>
            <Binding Path="ActualWidth" ElementName="border"/>
          </MultiBinding>
        </DataTrigger.Binding>
        <Setter TargetName="border" Property="Tag" Value="{x:Null}"/>
      </DataTrigger>
    </HierarchicalDataTemplate.Triggers>
  </HierarchicalDataTemplate>

  <DataTemplate x:Key="MH.UI.Controls.CollectionViewItem" DataType="{x:Type mhuInt:ISelectable}">
    <Grid UseLayoutRounding="True">
      <Border
        x:Name="border"
        BorderThickness="2"
        BorderBrush="Black"
        Margin="1">
        <ContentPresenter
          Content="{Binding}"
          ContentTemplate="{Binding InnerItemTemplate, RelativeSource={RelativeSource AncestorType=wpfc:CollectionView}}"/>
      </Border>

      <Border
        x:Name="selectionBorder"
        BorderThickness="2"
        BorderBrush="{DynamicResource MH.B.Accent}"
        Margin="0"
        Visibility="Hidden">

        <Polygon
          Width="40"
          Height="40"
          Points="0,40 40,40 40,0"
          Stroke="Black"
          StrokeThickness="1"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          Fill="{DynamicResource MH.B.Accent9}"/>
      </Border>
    </Grid>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding IsSelected}" Value="True">
        <Setter TargetName="selectionBorder" Property="Visibility" Value="Visible"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <DataTemplate x:Key="MH.UI.Controls.CollectionViewRow`1" DataType="{x:Type uic:CollectionViewRow`1}">
    <ItemsControl
      x:Name="ic"
      ItemsSource="{Binding Leaves}"
      ItemTemplate="{StaticResource MH.UI.Controls.CollectionViewItem}"
      MaxWidth="{Binding Path=Parent.(uii:ICollectionViewGroup.Width)}">

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="PreviewMouseDoubleClick">
          <b:InvokeCommandAction Command="wpfc:CollectionView.OpenItemCommand" PassEventArgsToCommand="True"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="PreviewMouseUp">
          <b:InvokeCommandAction Command="wpfc:CollectionView.SelectItemCommand" PassEventArgsToCommand="True"/>
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" Background="Transparent"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>

      <ItemsControl.ItemContainerStyle>
        <Style TargetType="FrameworkElement">
          <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Self},
            Converter={x:Static mhConv:CollectionViewItemSizeConverter.Inst}}"/>
        </Style>
      </ItemsControl.ItemContainerStyle>
    </ItemsControl>
  </DataTemplate>
</ResourceDictionary>