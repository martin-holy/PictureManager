<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls">

  <Style x:Key="MH.S.IconTextBlock" TargetType="{x:Type c:IconTextBlock}">
    <Setter Property="Margin" Value="2"/>
    <Setter Property="Foreground" Value="{StaticResource MH.Brushes.Text}"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="ap:Icon.Fill" Value="{StaticResource MH.Brushes.Text}"/>
    <Setter Property="ap:Icon.Size" Value="18"/>
    <Setter Property="ap:Icon.Shadow" Value="True"/>
    <Setter Property="ap:Text.Shadow" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type c:IconTextBlock}">
          <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" x:Name="col1"/>
              <ColumnDefinition Width="*" x:Name="col2"/>
            </Grid.ColumnDefinitions>

            <Path
              x:Name="icon"
              Data="{Binding Path=(ap:Icon.Data)}"
              Fill="{Binding Path=(ap:Icon.Fill)}"
              Width="{Binding Path=(ap:Icon.Size)}"
              Height="{Binding Path=(ap:Icon.Size)}"
              Margin="2"
              Stretch="Uniform"/>

            <TextBlock
              x:Name="text"
              Grid.Column="1"
              Text="{Binding Path=(ap:Text.Text)}"
              Foreground="{TemplateBinding Foreground}"
              Margin="2"/>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="Compact" Value="True">
              <Setter Property="HorizontalAlignment" Value="Stretch"/>
              <Setter Property="VerticalAlignment" Value="Stretch"/>
              <Setter Property="FontSize" Value="10"/>
              <Setter Property="FontWeight" Value="Bold"/>

              <Setter TargetName="col1" Property="Width" Value="*"/>
              <Setter TargetName="col2" Property="Width" Value="Auto"/>

              <Setter TargetName="icon" Property="Margin" Value="2,2,0,0"/>
              <Setter TargetName="icon" Property="HorizontalAlignment" Value="Left"/>
              <Setter TargetName="icon" Property="VerticalAlignment" Value="Top"/>

              <Setter TargetName="text" Property="Grid.Column" Value="0"/>
              <Setter TargetName="text" Property="Margin" Value="0,0,2,-1"/>
              <Setter TargetName="text" Property="HorizontalAlignment" Value="Right"/>
              <Setter TargetName="text" Property="VerticalAlignment" Value="Bottom"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="icon" Property="Fill" Value="{StaticResource MH.Control.Disabled.Foreground}"/>
              <Setter TargetName="text" Property="Foreground" Value="{StaticResource MH.Control.Disabled.Foreground}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(ap:Icon.Data), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
              <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(ap:Icon.Shadow), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="icon" Property="Effect" Value="{StaticResource MH.Effects.DropShadow}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(ap:Text.Text), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
              <Setter TargetName="text" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(ap:Text.Shadow), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="text" Property="Effect" Value="{StaticResource MH.Effects.DropShadow}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>