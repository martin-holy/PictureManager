<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:conv="clr-namespace:MH.UI.WPF.Converters">

  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  <Geometry x:Key="DownArrow">M 0,0 3.5,4 7,0 Z</Geometry>
  <Geometry x:Key="UpArrow">M 0,4 3.5,0 7,4 Z</Geometry>
  <Geometry x:Key="RightArrow">M 0,0 4,3.5 0,7 Z</Geometry>
  <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
  
  <Style x:Key="MH.S.Menu-ScrollButton" TargetType="RepeatButton">
    <Setter Property="ClickMode" Value="Hover"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Border Background="Transparent">
            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.S.Menu-ScrollViewer" TargetType="ScrollViewer">
    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <RepeatButton
              Grid.Row="0"
              Style="{StaticResource MH.S.Menu-ScrollButton}"
              Command="ScrollBar.LineUpCommand"
              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">

              <RepeatButton.Visibility>
                <MultiBinding
                  ConverterParameter="0"
                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                  FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </RepeatButton.Visibility>
              
              <Path Data="{StaticResource UpArrow}" Fill="{TemplateBinding Foreground}"/>
            </RepeatButton>

            <Border Grid.Row="1">
              <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
            </Border>
            
            <RepeatButton
              Grid.Row="2"
              Style="{StaticResource MH.S.Menu-ScrollButton}"
              Command="ScrollBar.LineDownCommand"
              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">

              <RepeatButton.Visibility>
                <MultiBinding
                  ConverterParameter="100"
                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                  FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </RepeatButton.Visibility>
              
              <Path Data="{StaticResource DownArrow}" Fill="{TemplateBinding Foreground}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.S.MenuItem-Checkmark" TargetType="Path">
    <Setter Property="Data" Value="{StaticResource Checkmark}"/>
    <Setter Property="Fill" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="Width" Value="10"/>
    <Setter Property="Height" Value="10"/>
    <Setter Property="Stretch" Value="Uniform"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Fill" Value="{StaticResource MH.B.C.Disabled.Fo}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MH.S.MenuItem-CheckmarkPanel" TargetType="Border">
    <Setter Property="Background" Value="{StaticResource MH.B.I.Hover.Ba}"/>
    <Setter Property="BorderBrush" Value="{StaticResource MH.B.I.Hover.Bo}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Width" Value="22"/>
    <Setter Property="Height" Value="22"/>
    <Setter Property="Margin" Value="2,0,0,0"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MH.S.MenuItem-VerticalSeparator" TargetType="Rectangle">
    <Setter Property="Fill" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="Margin" Value="29,2,0,2"/>
    <Setter Property="Width" Value="1"/>
  </Style>

  <ControlTemplate x:Key="MH.CT.MenuItem-TopLevelItem" TargetType="MenuItem">
    <Border
      x:Name="templateRoot"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}">
      
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ContentPresenter x:Name="Icon" ContentSource="Icon"/>

        <Border
          x:Name="GlyphPanel"
          Grid.Column="0"
          Style="{StaticResource MH.S.MenuItem-CheckmarkPanel}"
          BorderThickness="{TemplateBinding BorderThickness}"
          Margin="1,0,0,0"
          Visibility="Collapsed">
  
          <Path x:Name="Glyph" Style="{StaticResource MH.S.MenuItem-Checkmark}"/>
        </Border>
        
        <ContentPresenter
          ContentSource="Header"
          Grid.Column="1"
          Margin="{TemplateBinding Padding}"
          VerticalAlignment="Center"
          HorizontalAlignment="Left"
          RecognizesAccessKey="True"/>
      </Grid>
    </Border>
    
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="MH.CT.MenuItem-TopLevelHeader" TargetType="MenuItem">
    <Border
      x:Name="templateRoot"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}">

      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="3,0,0,0"/>

        <ContentPresenter
          ContentSource="Header"
          Grid.Column="1"
          Margin="{TemplateBinding Padding}"
          VerticalAlignment="Center"
          HorizontalAlignment="Left"
          RecognizesAccessKey="True"/>

        <Popup
          x:Name="PART_Popup"
          Grid.Column="0"
          AllowsTransparency="True"
          Focusable="False"
          IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
          Placement="Bottom"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
          PlacementTarget="{Binding ElementName=templateRoot}">

          <Border
            x:Name="SubMenuBorder"
            Background="{StaticResource MH.B.C.Static.Ba}"
            BorderBrush="{StaticResource MH.B.C.Static.Bo}"
            BorderThickness="1"
            Padding="2">

            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource MH.S.Menu-ScrollViewer}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Rectangle Style="{StaticResource MH.S.MenuItem-VerticalSeparator}"/>

                <ItemsPresenter
                  x:Name="ItemsPresenter"
                  Grid.IsSharedSizeScope="True"
                  KeyboardNavigation.DirectionalNavigation="Cycle"
                  KeyboardNavigation.TabNavigation="Cycle"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>

    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="MH.CT.MenuItem-SubmenuItem" TargetType="MenuItem">
    <Border
      x:Name="templateRoot"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}">
      
      <Grid Margin="-1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="24" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
        </Grid.ColumnDefinitions>
        
        <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="2,0,0,0"/>

        <Border
          x:Name="GlyphPanel"
          Grid.Column="0"
          Style="{StaticResource MH.S.MenuItem-CheckmarkPanel}"
          BorderThickness="{TemplateBinding BorderThickness}"
          Visibility="Collapsed">
          
          <Path x:Name="Glyph" Style="{StaticResource MH.S.MenuItem-Checkmark}"/>
        </Border>
        
        <ContentPresenter
          x:Name="menuHeaderContainer"
          ContentSource="Header"
          Grid.Column="1"
          HorizontalAlignment="Left"
          Margin="{TemplateBinding Padding}"
          RecognizesAccessKey="True"
          VerticalAlignment="Center"/>
        
        <TextBlock
          x:Name="menuGestureText"
          Grid.Column="2"
          Margin="6,2"
          Opacity="0.7"
          FontSize="12"
          Text="{TemplateBinding InputGestureText}"
          VerticalAlignment="Center"/>
      </Grid>
    </Border>
    
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Icon" Property="Opacity" Value="0.4"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="MH.CT.MenuItem-SubmenuHeader" TargetType="MenuItem">
    <Border
      x:Name="templateRoot"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}">
      
      <Grid Margin="-1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="24" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
        </Grid.ColumnDefinitions>

        <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="2,0,0,0"/>
        
        <ContentPresenter
          ContentSource="Header"
          Grid.Column="1"
          HorizontalAlignment="Left"
          Margin="{TemplateBinding Padding}"
          RecognizesAccessKey="True"
          VerticalAlignment="Center"/>
        
        <Path
          x:Name="RightArrow"
          Grid.Column="2"
          Data="{StaticResource RightArrow}"
          Fill="{StaticResource MH.B.C.Static.Fo}"
          HorizontalAlignment="Right"
          Margin="6,2"
          VerticalAlignment="Center"/>
        
        <Popup
          x:Name="PART_Popup"
          Grid.Column="0"
          AllowsTransparency="True"
          Focusable="False"
          HorizontalOffset="-2"
          IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
          Placement="Right"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
          VerticalOffset="-3">
          
          <Border
            x:Name="SubMenuBorder"
            Background="{StaticResource MH.B.C.Static.Ba}"
            BorderBrush="{StaticResource MH.B.C.Static.Bo}"
            BorderThickness="1"
            Padding="2">
            
            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource MH.S.Menu-ScrollViewer}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Rectangle Style="{StaticResource MH.S.MenuItem-VerticalSeparator}"/>
                
                <ItemsPresenter
                  x:Name="ItemsPresenter"
                  Grid.IsSharedSizeScope="True"
                  KeyboardNavigation.DirectionalNavigation="Cycle"
                  KeyboardNavigation.TabNavigation="Cycle"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource MH.B.C.Disabled.Fo}"/>
        <Setter TargetName="Icon" Property="Opacity" Value="0.4"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="MH.S.Menu" TargetType="Menu">
    <Setter Property="Background" Value="{StaticResource MH.B.C.Static.Ba}"/>
    <Setter Property="Foreground" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="FontSize" Value="{StaticResource MH.FontSize}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Menu">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
            
            <ItemsPresenter/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.S.MenuItem" TargetType="MenuItem">
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Height" Value="26"/>
    <Setter Property="Padding" Value="12,2,6,2"/>
    <Setter Property="Template" Value="{DynamicResource MH.CT.MenuItem-SubmenuItem}"/>
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Template" Value="{DynamicResource MH.CT.MenuItem-TopLevelHeader}"/>
        <Setter Property="Padding" Value="6,2"/>
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Template" Value="{DynamicResource MH.CT.MenuItem-TopLevelItem}"/>
        <Setter Property="Padding" Value="6,2"/>
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template" Value="{DynamicResource MH.CT.MenuItem-SubmenuHeader}"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{StaticResource MH.B.I.Hover.Ba}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MH.B.I.Hover.Bo}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource MH.B.C.Disabled.Fo}"/>
      </Trigger>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter Property="Popup.PopupAnimation" Value="None"/>
      </Trigger>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <MultiBinding Converter="{x:Static conv:RelayCommandConverter.Inst}">
            <Binding RelativeSource="{RelativeSource Self}" />
            <Binding Path="Command" RelativeSource="{RelativeSource Self}"/>
          </MultiBinding>
        </DataTrigger.Binding>
        <Setter Property="Tag" Value="{x:Null}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MH.S.ContextMenu" TargetType="ContextMenu">
    <Setter Property="Background" Value="{StaticResource MH.B.C.Static.Ba}"/>
    <Setter Property="BorderBrush" Value="{StaticResource MH.B.C.Static.Bo}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="FontSize" Value="{StaticResource MH.FontSize}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContextMenu">
          <Border
            x:Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="2">

            <ScrollViewer Name="ContextMenuScrollViewer" Style="{DynamicResource MH.S.Menu-ScrollViewer}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Rectangle Style="{StaticResource MH.S.MenuItem-VerticalSeparator}"/>

                <ItemsPresenter
                  x:Name="ItemsPresenter"
                  Margin="{TemplateBinding Padding}"
                  KeyboardNavigation.DirectionalNavigation="Cycle"
                  KeyboardNavigation.TabNavigation="Cycle"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>