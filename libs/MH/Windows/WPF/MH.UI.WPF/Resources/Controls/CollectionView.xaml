<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:uic="clr-namespace:MH.UI.Controls;assembly=MH.UI"
  xmlns:uii="clr-namespace:MH.UI.Interfaces;assembly=MH.UI"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls"
  xmlns:u="clr-namespace:MH.UI.WPF.Utils"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:conv="clr-namespace:MH.UI.WPF.Converters"
  xmlns:mhuInt="clr-namespace:MH.Utils.Interfaces;assembly=MH.Utils"
  xmlns:rd="clr-namespace:MH.UI.WPF.Resources">

  <u:TypeDataTemplateSelector x:Key="MH.DT.CollectionView.TemplateSelector">
    <u:TypeDataTemplateSelector.TemplateMappings>
      <x:Array Type="{x:Type u:TypeTemplateMapping}">
        <u:TypeTemplateMapping Type="{x:Type uic:CollectionViewGroup`1}" TemplateKey="MH.UI.Controls.CollectionViewGroup`1"/>
        <u:TypeTemplateMapping Type="{x:Type uic:CollectionViewRow`1}" TemplateKey="MH.UI.Controls.CollectionViewRow`1"/>
      </x:Array>
    </u:TypeDataTemplateSelector.TemplateMappings>
  </u:TypeDataTemplateSelector>

  <Style x:Key="MH.S.CollectionView" TargetType="c:CollectionView" BasedOn="{StaticResource MH.S.TreeViewBase}">
    <Setter Property="ItemContainerStyle" Value="{DynamicResource MH.S.TreeViewItem.Lite}"/>
    <Setter Property="ItemTemplateSelector" Value="{StaticResource MH.DT.CollectionView.TemplateSelector}"/>
  </Style>

  <HierarchicalDataTemplate
    x:Key="MH.UI.Controls.CollectionViewGroup`1"
    DataType="{x:Type uic:CollectionViewGroup`1}"
    ItemsSource="{Binding Items}">

    <Border
      x:Name="border"
      BorderBrush="Black"
      BorderThickness="1"
      Margin="1,2,1,2"
      Background="{DynamicResource MH.B.Black5}"
      Height="30">

      <Grid Margin="{Binding Converter={x:Static conv:TreeMarginConverter.Inst}, ConverterParameter=16}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ToggleButton
          x:Name="expander"
          Grid.Column="0"
          Style="{DynamicResource MH.S.ToggleButton.TreeExpandCollapse}"
          IsChecked="{Binding IsExpanded, Mode=TwoWay}"/>

        <!-- Menu -->
        <Menu
          Grid.Column="1"
          Background="Transparent"
          VerticalAlignment="Center"
          Margin="0">

          <MenuItem Padding="6,2,-2,2">
            <MenuItem.Icon>
              <Path
                Data="{Binding
                        Path=GroupedBy.Data.(mhuInt:IListItem.Icon),
                        Converter={x:Static conv:ResourceConverter.Inst}}"
                Fill="{Binding
                        Path=GroupedBy.Data.(mhuInt:IListItem.Icon),
                        Converter={x:Static conv:ResourceConverter.Inst},
                        ConverterParameter={x:Static rd:Dictionaries.IconToBrush}}"
                Style="{StaticResource MH.S.Icon.Shadow}"/>
            </MenuItem.Icon>

            <MenuItem Command="{Binding View.OpenGroupByDialogCommand}" CommandParameter="{Binding}"/>

            <MenuItem x:Name="miView" Header="View" ItemsSource="{Binding View.ViewModesCommands}">
              <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                  <Setter Property="Header" Value="{Binding Text}"/>
                  <Setter Property="Command" Value="{Binding}"/>
                  <Setter Property="CommandParameter" Value="{Binding DataContext, ElementName=border}"/>
                </Style>
              </MenuItem.ItemContainerStyle>
            </MenuItem>
          </MenuItem>
        </Menu>

        <TextBlock
          Grid.Column="2"
          Text="{Binding Path=GroupedBy.Data.(mhuInt:IListItem.Name)}"
          VerticalAlignment="Center"
          Margin="5,0,5,0"
          FontSize="16"/>

        <TextBlock
          Grid.Column="3"
          Text="{Binding SourceCount}"
          VerticalAlignment="Center"
          Margin="5,0,5,0"
          FontWeight="Bold"
          FontSize="14"/>
      </Grid>
    </Border>

    <HierarchicalDataTemplate.Triggers>
      <DataTrigger Binding="{Binding Items.Count}" Value="0">
        <Setter TargetName="expander" Property="Visibility" Value="Hidden"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding View.ViewModesCommands.Length}" Value="1">
        <Setter TargetName="miView" Property="Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <MultiBinding Converter="{x:Static conv:SetPropertyConverter.Inst}" ConverterParameter="Width">
            <Binding ElementName="border" Path="DataContext"/>
            <Binding ElementName="border" Path="ActualWidth"/>
          </MultiBinding>
        </DataTrigger.Binding>
        <Setter TargetName="border" Property="Tag" Value="{x:Null}"/>
      </DataTrigger>
    </HierarchicalDataTemplate.Triggers>
  </HierarchicalDataTemplate>

  <DataTemplate x:Key="MH.DT.CollectionViewItem" DataType="{x:Type mhuInt:ISelectable}">
    <Grid UseLayoutRounding="True">
      <Border
        x:Name="border"
        BorderThickness="2"
        BorderBrush="Black"
        Margin="1">

        <ContentPresenter
          Content="{Binding}"
          ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                            Converter={x:Static conv:CollectionViewItemTemplateConverter.Inst}}"/>
      </Border>

      <Border
        x:Name="selectionBorder"
        BorderThickness="2"
        BorderBrush="{DynamicResource MH.B.Accent}"
        Margin="0"
        Visibility="Hidden">

        <Polygon
          Width="40"
          Height="40"
          Points="0,40 40,40 40,0"
          Stroke="Black"
          StrokeThickness="1"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          Fill="{DynamicResource MH.B.Accent9}"/>
      </Border>
    </Grid>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding IsSelected}" Value="True">
        <Setter TargetName="selectionBorder" Property="Visibility" Value="Visible"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <DataTemplate x:Key="MH.UI.Controls.CollectionViewRow`1" DataType="{x:Type uic:CollectionViewRow`1}">
    <ItemsControl
      x:Name="ic"
      ItemsSource="{Binding Leaves}"
      ItemTemplate="{StaticResource MH.DT.CollectionViewItem}"
      MaxWidth="{Binding Path=Parent.(uii:ICollectionViewGroup.Width)}">

      <b:Interaction.Triggers>
        <b:EventTrigger EventName="PreviewMouseDoubleClick">
          <b:InvokeCommandAction Command="c:CollectionView.OpenItemCommand" PassEventArgsToCommand="True"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="PreviewMouseUp">
          <b:InvokeCommandAction Command="c:CollectionView.SelectItemCommand" PassEventArgsToCommand="True"/>
        </b:EventTrigger>
      </b:Interaction.Triggers>

      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" Background="Transparent"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>

      <ItemsControl.ItemContainerStyle>
        <Style TargetType="FrameworkElement">
          <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Self},
            Converter={x:Static conv:CollectionViewItemSizeConverter.Inst}}"/>
        </Style>
      </ItemsControl.ItemContainerStyle>
    </ItemsControl>
  </DataTemplate>
</ResourceDictionary>