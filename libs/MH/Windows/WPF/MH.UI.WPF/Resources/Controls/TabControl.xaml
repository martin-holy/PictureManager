<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls"
  xmlns:conv="clr-namespace:MH.UI.WPF.Converters"
  xmlns:uic="clr-namespace:MH.UI.Controls;assembly=MH.UI"
  xmlns:uInt="clr-namespace:MH.Utils.Interfaces;assembly=MH.Utils">

  <Style x:Key="MH.S.TabItem" TargetType="{x:Type TabItem}">
    <Setter Property="Border.CornerRadius" Value="3"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Background" Value="{StaticResource MH.B.C.Static.Ba}"/>
    <Setter Property="Foreground" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
    <Setter Property="Padding" Value="4"/>
    <Setter Property="MaxWidth" Value="{Binding Path=DataContext.(uic:TabControl.TabStrip).(uic:TabStrip.MaxTabWidth), RelativeSource={RelativeSource AncestorType=TabControl}}"/>
    <Setter Property="MaxHeight" Value="{Binding Path=DataContext.(uic:TabControl.TabStrip).(uic:TabStrip.MaxTabHeight), RelativeSource={RelativeSource AncestorType=TabControl}}"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="IsSelected" Value="{Binding Path=(uInt:ISelectable.IsSelected), Mode=TwoWay}"/>
    <Setter Property="ToolTip" Value="{Binding Path=(uInt:IListItem.Name)}"/>
    <Setter Property="Header" Value="{Binding}"/>
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <ContentPresenter
            Content="{Binding}"
            ContentTemplate="{DynamicResource MH.DT.IListItem}"
            ap:Icon.Shadow="True"
            ap:Text.Shadow="True"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Border
            Background="{TemplateBinding Background}"
            BorderThickness="{TemplateBinding BorderThickness}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="{TemplateBinding Border.CornerRadius}"
            Margin="2">

            <Grid x:Name="grid" Background="Transparent">
              <Grid.LayoutTransform>
                <RotateTransform
                  Angle="{Binding
                          Path=DataContext.(uic:TabControl.TabStrip).(uic:TabStrip.RotationAngle),
                          RelativeSource={RelativeSource AncestorType=TabControl}}"/>
              </Grid.LayoutTransform>

              <ContentPresenter
                ContentSource="Header" 
                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                Focusable="False" 
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"/>

              <Border
                x:Name="btnClose"
                Background="{StaticResource MH.B.I.Selected.Ba}"
                Visibility="Collapsed"
                Width="22"
                Height="22"
                CornerRadius="3"
                Margin="4,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">

                <c:IconButton
                  Command="{Binding
                            Path=DataContext.(uic:TabControl.CloseTabCommand),
                            RelativeSource={RelativeSource AncestorType=TabControl}}"
                  CommandParameter="{Binding}"
                  Width="18"
                  Height="18"
                  Margin="0"
                  ap:Icon.Size="12"/>
              </Border>
            </Grid>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource MH.B.I.Hover.Bo}"/>
              <Setter Property="Background" Value="{StaticResource MH.B.I.Hover.Ba}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource MH.B.I.Selected.Bo}"/>
              <Setter Property="Background" Value="{StaticResource MH.B.I.Selected.Ba}"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="True" Binding="{Binding IsMouseOver, ElementName=grid}"/>
                <Condition Value="True" Binding="{Binding Path=DataContext.(uic:TabControl.CanCloseTabs), RelativeSource={RelativeSource AncestorType=TabControl}}"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="btnClose" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.S.TabControl" TargetType="TabControl">
    <Setter Property="Background" Value="{StaticResource MH.B.C.Static.Ba}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="TabStripPlacement" Value="{Binding Path=(uic:TabControl.TabStrip).(uic:TabStrip.Placement), Converter={x:Static conv:DockConverter.Inst}}"/>
    <Setter Property="ItemsSource" Value="{Binding Path=(uic:TabControl.Tabs)}"/>
    <Setter Property="SelectedItem" Value="{Binding Path=(uic:TabControl.Selected), Mode=TwoWay}"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource MH.S.TabItem}"/>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabControl">
          <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="col0" Width="*"/>
              <ColumnDefinition x:Name="col1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="row0" Height="Auto"/>
              <RowDefinition x:Name="row1" Height="*"/>
            </Grid.RowDefinitions>

            <DockPanel x:Name="headerPanel" Grid.Column="0" Grid.Row="0">
              <ContentPresenter
                DockPanel.Dock="{Binding
                                 Path=DataContext.(uic:TabControl.TabStrip).(uic:TabStrip.SlotPlacement),
                                 RelativeSource={RelativeSource AncestorType=TabControl},
                                 Converter={x:Static conv:DockConverter.Inst}}"
                Content="{Binding Path=(uic:TabControl.TabStrip).(uic:TabStrip.Slot)}"/>

              <TabPanel x:Name="tabPanel" IsItemsHost="True" Margin="0"/>
            </DockPanel>

            <ItemsControl x:Name="contentPanel" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Path=(uic:TabControl.Tabs)}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <Grid/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <ContentPresenter Content="{Binding Path=(uInt:IListItem.Data)}"/>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
              <ItemsControl.ItemContainerStyle>
                <Style>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                      <Setter Property="ContentPresenter.Visibility" Value="Hidden"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </ItemsControl.ItemContainerStyle>
            </ItemsControl>
          </Grid>

          <ControlTemplate.Triggers>
            <DataTrigger Value="True">
              <DataTrigger.Binding>
                <MultiBinding Converter="{x:Static conv:MaxTabSizeConverter.Inst}">
                  <Binding/>
                  <Binding ElementName="tabPanel" Path="ActualWidth"/>
                  <Binding ElementName="tabPanel" Path="ActualHeight"/>
                </MultiBinding>
              </DataTrigger.Binding>
              <Setter TargetName="tabPanel" Property="Tag" Value="{x:Null}"/>
            </DataTrigger>

            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="1"/>
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="row0" Property="Height" Value="*"/>
              <Setter TargetName="row1" Property="Height" Value="Auto"/>
              <Setter TargetName="col0" Property="Width" Value="*"/>
              <Setter TargetName="col1" Property="Width" Value="0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="headerPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="contentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="row0" Property="Height" Value="*"/>
              <Setter TargetName="row1" Property="Height" Value="0"/>
              <Setter TargetName="col0" Property="Width" Value="Auto"/>
              <Setter TargetName="col1" Property="Width" Value="*"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="headerPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="contentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="row0" Property="Height" Value="*"/>
              <Setter TargetName="row1" Property="Height" Value="0"/>
              <Setter TargetName="col0" Property="Width" Value="*"/>
              <Setter TargetName="col1" Property="Width" Value="Auto"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>