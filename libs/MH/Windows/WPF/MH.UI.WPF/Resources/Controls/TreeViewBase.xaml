<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:ap="clr-namespace:MH.UI.WPF.AttachedProperties"
  xmlns:c="clr-namespace:MH.UI.WPF.Controls"
  xmlns:conv="clr-namespace:MH.UI.WPF.Converters"
  xmlns:res="clr-namespace:MH.UI.WPF.Resources"
  xmlns:ubc="clr-namespace:MH.Utils.BaseClasses;assembly=MH.Utils"
  xmlns:uiInt="clr-namespace:MH.UI.Interfaces;assembly=MH.UI"
  xmlns:uInt="clr-namespace:MH.Utils.Interfaces;assembly=MH.Utils">

  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,10 L5,5 z"/>

  <Style x:Key="MH.S.ToggleButton.TreeExpandCollapse" TargetType="ToggleButton">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border Background="Transparent" Padding="5" Width="20" Height="20">
            <Path
              x:Name="path"
              VerticalAlignment="Bottom"
              Data="{StaticResource TreeArrow}" 
              Fill="Transparent"
              Stroke="{StaticResource MH.B.C.Static.Fo}"
              Stretch="Uniform">
            </Path>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="path" Property="Fill" Value="{StaticResource MH.B.C.Static.Fo}"/>
              <Setter TargetName="path" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="45" CenterX="2" CenterY="6"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="path" Property="Fill" Value="{DynamicResource MH.B.Accent}"/>
              <Setter TargetName="path" Property="Stroke" Value="{DynamicResource MH.B.Accent}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.S.TreeViewItem.Lite" TargetType="TreeViewItem">
    <Setter Property="Background" Value="{StaticResource MH.B.C.Static.Ba}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Foreground" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="MinHeight" Value="25"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Item"/>
    <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
    <Setter Property="VirtualizingPanel.CacheLength" Value="3"/>

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeViewItem">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>

            <ContentPresenter
              x:Name="PART_Header"
              ContentSource="Header"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"/>

            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MH.S.TreeViewItem" TargetType="TreeViewItem" BasedOn="{StaticResource MH.S.TreeViewItem.Lite}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeViewItem">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>

            <Border
              x:Name="Border"
              BorderBrush="Transparent" 
              BorderThickness="1" 
              Background="{StaticResource MH.B.C.Static.Ba}"
              FocusVisualStyle="{x:Null}"
              MinHeight="25">

              <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseLeftButtonUp">
                  <b:InvokeCommandAction
                    Command="{Binding TreeView.TreeItemSelectedCommand, RelativeSource=
                             {RelativeSource AncestorType=c:TreeViewBase}}"
                    CommandParameter="{Binding}"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="RequestBringIntoView">
                  <b:InvokeCommandAction
                    Command="{Binding TreeItemIntoViewCommand, RelativeSource=
                             {RelativeSource AncestorType=c:TreeViewBase}}"
                    PassEventArgsToCommand="True"/>
                </b:EventTrigger>
              </b:Interaction.Triggers>

              <Grid Margin="{Binding Converter={x:Static conv:TreeMarginConverter.Inst}, ConverterParameter=16}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <ToggleButton
                  x:Name="Expander"
                  Style="{StaticResource MH.S.ToggleButton.TreeExpandCollapse}"
                  IsChecked="{Binding IsExpanded, Mode=TwoWay}"/>

                <ContentPresenter
                  x:Name="PART_Header"
                  Grid.Column="1"
                  ContentSource="Header"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"/>
              </Grid>
            </Border>

            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected}" Value="True"/>
                <Condition Binding="{Binding TreeView.ShowTreeItemSelection, RelativeSource={RelativeSource AncestorType=c:TreeViewBase}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{StaticResource MH.B.I.Selected.Ba}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MH.B.I.Selected.Bo}"/>
            </MultiDataTrigger>
            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource MH.B.I.Hover.Ba}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MH.B.I.Hover.Bo}"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True"/>
                <Condition Binding="{Binding IsSelected}" Value="True"/>
                <Condition Binding="{Binding TreeView.ShowTreeItemSelection, RelativeSource={RelativeSource AncestorType=c:TreeViewBase}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{StaticResource MH.B.I.SelectedHover.Ba}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MH.B.I.SelectedHover.Bo}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition
                  Binding="{Binding Converter={x:Static conv:DataTypeConverter.Inst},
                            ConverterParameter={x:Type ubc:TreeItem}}"
                  Value="True"/>
                <Condition Binding="{Binding Path=(ubc:TreeItem.IsHidden)}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="MH.DT.TreeViewBase.ScrollButtons" DataType="{x:Type uiInt:ITreeView}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <RepeatButton
        Command="{Binding ScrollToTopCommand}"
        Content="M30,0 60,30 0,30z"
        ToolTip="Scroll to top"
        Style="{DynamicResource MH.S.ScrollBar.Button}"/>

      <RepeatButton
        Command="{Binding ScrollLevelUpCommand}"
        Content="M30,0 60,30 0,30z"
        ToolTip="Scroll one level up"
        Grid.Row="1"
        Style="{DynamicResource MH.S.ScrollBar.Button}"/>

      <RepeatButton
        Command="{Binding ScrollSiblingUpCommand}"
        Content="M30,0 60,30 0,30z"
        ToolTip="Scroll one sibling up"
        Grid.Row="2"
        Style="{DynamicResource MH.S.ScrollBar.Button}"/>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="MH.DT.TreeView-PathToRootBar" DataType="{x:Type uiInt:ITreeView}">
    <ItemsControl
      ItemsSource="{Binding TopTreeItemPath}"
      BorderThickness="0"
      HorizontalAlignment="Left">

      <ItemsControl.ItemTemplate>
        <DataTemplate DataType="{x:Type uInt:IListItem}">
          <c:SlimButton
            Command="{Binding Path=TreeView.ScrollToItemCommand, RelativeSource={RelativeSource AncestorType=c:TreeViewBase}}"
            CommandParameter="{Binding}"
            ap:Text.Text="{Binding Name}"
            ap:Icon.Data="{Binding Icon, Converter={x:Static conv:ResourceConverter.Inst}}"
            ap:Icon.Fill="{Binding Icon, Converter={x:Static conv:ResourceConverter.Inst},
                           ConverterParameter={x:Static res:Dictionaries.IconToBrush}}"
            Margin="0"/>
        </DataTemplate>
      </ItemsControl.ItemTemplate>

      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
  </DataTemplate>

  <Style x:Key="MH.S.TreeViewBase" TargetType="c:TreeViewBase">
    <Setter Property="Background" Value="{StaticResource MH.B.C.Static.Ba}"/>
    <Setter Property="BorderBrush" Value="{StaticResource MH.B.C.Static.Bo}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Padding" Value="1"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource MH.S.TreeViewItem}"/>
    <Setter Property="FocusManager.IsFocusScope" Value="True"/>
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Item"/>
    <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
    <Setter Property="VirtualizingPanel.CacheLength" Value="3"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ap:Slot.TopContent" Value="{Binding TreeView, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="ap:Slot.TopContentTemplate" Value="{StaticResource MH.DT.TreeView-PathToRootBar}"/>

    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="c:TreeViewBase">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ContentPresenter
              Content="{Binding Path=(ap:Slot.TopContent), RelativeSource={RelativeSource TemplatedParent}}"
              ContentTemplate="{Binding Path=(ap:Slot.TopContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"/>

            <ScrollViewer
              x:Name="PART_ScrollViewer"
              Grid.Row="1"
              Focusable="False"
              Padding="{TemplateBinding Padding}"
              ap:Slot.TopContent="{Binding TreeView, RelativeSource={RelativeSource TemplatedParent}}"
              ap:Slot.TopContentTemplate="{StaticResource MH.DT.TreeViewBase.ScrollButtons}">

              <ItemsPresenter/>
            </ScrollViewer>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Collapsed">
              <Setter TargetName="PART_ScrollViewer" Property="ap:Slot.TopContent" Value="{x:Null}"/>
              <Setter TargetName="PART_ScrollViewer" Property="ap:Slot.TopContentTemplate" Value="{x:Null}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <StaticResource ResourceKey="MH.Trigger.Control-Disabled"/>
    </Style.Triggers>
  </Style>
</ResourceDictionary>