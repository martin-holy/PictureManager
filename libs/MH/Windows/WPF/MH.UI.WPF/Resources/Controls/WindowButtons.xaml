<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mhc="clr-namespace:MH.UI.WPF.Controls">

  <Style x:Key="MH.S.Button.Window" TargetType="Button">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{StaticResource MH.B.C.Static.Fo}"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{TemplateBinding Background}" Width="44" Height="30">
            <TextBlock
              Text="{TemplateBinding Content}"
              FontFamily="Segoe MDL2 Assets"
              Foreground="{TemplateBinding Foreground}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource MH.B.Button.Hover.Ba}"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="Background" Value="{StaticResource MH.B.Button.Hover.Ba}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MH.S.Button.Window.Close" TargetType="Button" BasedOn="{StaticResource MH.S.Button.Window}">
    <Setter Property="FontSize" Value="12"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#E81123"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="Background" Value="#E81123"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <DataTemplate x:Key="MH.DT.CustomWindow.Buttons" DataType="{x:Type mhc:CustomWindow}">
    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
      <Button
        ToolTip="Minimize"
        Content="&#xE949;"
        Style="{StaticResource MH.S.Button.Window}"
        Command="mhc:CustomWindow.MinimizeWindowCommand"
        CommandParameter="{Binding}"/>

      <Button
        x:Name="btnFullScreen"
        ToolTip="Full screen"
        Content="&#xE2B4;"
        Style="{StaticResource MH.S.Button.Window}"
        Command="mhc:CustomWindow.ToggleFullScreenCommand"
        CommandParameter="{Binding}"/>

      <Button
        x:Name="btnRestore"
        ToolTip="Restore"
        Content="&#xE923;"
        FontSize="12"
        Style="{StaticResource MH.S.Button.Window}"
        Command="mhc:CustomWindow.RestoreWindowCommand"
        CommandParameter="{Binding}"/>

      <Button
        x:Name="btnMaximize"
        ToolTip="Maximize"
        Content="&#xE922;"
        FontSize="12"
        Style="{StaticResource MH.S.Button.Window}"
        Command="mhc:CustomWindow.MaximizeWindowCommand"
        CommandParameter="{Binding}"/>

      <Button
        ToolTip="Close"
        Content="&#xE106;"
        Style="{StaticResource MH.S.Button.Window.Close}"
        Command="mhc:CustomWindow.CloseWindowCommand"
        CommandParameter="{Binding}"/>
    </StackPanel>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding WindowState}" Value="Normal">
        <Setter TargetName="btnRestore" Property="Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
        <Setter TargetName="btnMaximize" Property="Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding CanFullScreen}" Value="False">
        <Setter TargetName="btnFullScreen" Property="Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding IsFullScreen}" Value="True">
        <Setter TargetName="btnFullScreen" Property="Content" Value="&#xE2B3;"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
</ResourceDictionary>